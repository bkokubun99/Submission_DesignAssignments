
DesignAssignment_3B.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000b94  00000c28  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b94  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800114  00800114  00000c3c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b1a  00000000  00000000  00000d28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009e1  00000000  00000000  00001842  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a6  00000000  00000000  00002223  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e0  00000000  00000000  000025cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004e3  00000000  00000000  000026ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001b8  00000000  00000000  00002b8f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00002d47  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 95 00 	jmp	0x12a	; 0x12a <__vector_16>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e4 e9       	ldi	r30, 0x94	; 148
  c8:	fb e0       	ldi	r31, 0x0B	; 11
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 31       	cpi	r26, 0x14	; 20
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a4 e1       	ldi	r26, 0x14	; 20
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a9 31       	cpi	r26, 0x19	; 25
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 19 01 	call	0x232	; 0x232 <main>
  ea:	0c 94 c8 05 	jmp	0xb90	; 0xb90 <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <USART_init>:
volatile float adc_temp;

//FUNCTION TO INITIALIZE USART
void USART_init(void)
{
	UBRR0H = UBRRH_VALUE;
  f2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
  f6:	87 e6       	ldi	r24, 0x67	; 103
  f8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); //8-BIT DATA
  fc:	86 e0       	ldi	r24, 0x06	; 6
  fe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);	//ENABLE RX AND TX
 102:	88 e1       	ldi	r24, 0x18	; 24
 104:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 108:	08 95       	ret

0000010a <adc_init>:
}

//FUNCTION TO INITIALIZE ADC
void adc_init(void)
{
	ADMUX =  (0<<REFS1) | //REFERENCE SELECTION BITS
 10a:	84 e4       	ldi	r24, 0x44	; 68
 10c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
			 (0<<ADLAR) | //ADC RIGHT ADJUST RESULT
			 (1<<MUX2)  | //ANALOG CHANNEL SELECTION BITS
			 (0<<MUX1)  | //ADC4 (PC4) CHANNEL 4
			 (0<<MUX0);
			 
	ADCSRA = (1<<ADEN)  | //ADC ENABLE
 110:	87 e8       	ldi	r24, 0x87	; 135
 112:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 116:	08 95       	ret

00000118 <set>:
}

//FUNCTION THAT SETS TIMER/INTERRUPT REGISTERS 
void set()
{
	TCCR0A = 0;					//NORMAL MODE OPERATION
 118:	14 bc       	out	0x24, r1	; 36
	TCCR0B  = 0X05;				//THE PRESCALER SET TO 1024
 11a:	85 e0       	ldi	r24, 0x05	; 5
 11c:	85 bd       	out	0x25, r24	; 37
	TCNT0 = 0X00;				//COUNTER VALUE = 0
 11e:	16 bc       	out	0x26, r1	; 38
	TIMSK0 = (1<<TOIE0);		//ENABLE INTERRUPT			
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	sei();						//ENABLE GLOBAL INTERRUPT
 126:	78 94       	sei
 128:	08 95       	ret

0000012a <__vector_16>:
}

//INTERUPT SUBROUTINE FOR TIMER 0 
ISR(TIMER0_OVF_vect)
{
 12a:	1f 92       	push	r1
 12c:	0f 92       	push	r0
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	0f 92       	push	r0
 132:	11 24       	eor	r1, r1
 134:	8f 93       	push	r24
	Overflow++;					//INCREMENT OVERFLOW 
 136:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <Overflow>
 13a:	8f 5f       	subi	r24, 0xFF	; 255
 13c:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <Overflow>
}
 140:	8f 91       	pop	r24
 142:	0f 90       	pop	r0
 144:	0f be       	out	0x3f, r0	; 63
 146:	0f 90       	pop	r0
 148:	1f 90       	pop	r1
 14a:	18 95       	reti

0000014c <USART_tx_string>:

//FUNCTION THAT READS IN 1 CHAR AT A TIME 
void USART_tx_string(char*data)
{
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
	//CONTROL ENTERS WHILE DATA REG NOT EMPTY
	while((*data!='\0'))
 150:	fc 01       	movw	r30, r24
 152:	20 81       	ld	r18, Z
 154:	22 23       	and	r18, r18
 156:	69 f0       	breq	.+26     	; 0x172 <USART_tx_string+0x26>
 158:	dc 01       	movw	r26, r24
 15a:	11 96       	adiw	r26, 0x01	; 1
	{
		//WAIT FOR BUFFER REGISTER TO CLEAR
		while(!(UCSR0A & (1 << UDRE0)));
 15c:	e0 ec       	ldi	r30, 0xC0	; 192
 15e:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;			//REGESTER EQUALS DATA
 160:	c6 ec       	ldi	r28, 0xC6	; 198
 162:	d0 e0       	ldi	r29, 0x00	; 0
{
	//CONTROL ENTERS WHILE DATA REG NOT EMPTY
	while((*data!='\0'))
	{
		//WAIT FOR BUFFER REGISTER TO CLEAR
		while(!(UCSR0A & (1 << UDRE0)));
 164:	90 81       	ld	r25, Z
 166:	95 ff       	sbrs	r25, 5
 168:	fd cf       	rjmp	.-6      	; 0x164 <USART_tx_string+0x18>
		UDR0 = *data;			//REGESTER EQUALS DATA
 16a:	28 83       	st	Y, r18

//FUNCTION THAT READS IN 1 CHAR AT A TIME 
void USART_tx_string(char*data)
{
	//CONTROL ENTERS WHILE DATA REG NOT EMPTY
	while((*data!='\0'))
 16c:	2d 91       	ld	r18, X+
 16e:	21 11       	cpse	r18, r1
 170:	f9 cf       	rjmp	.-14     	; 0x164 <USART_tx_string+0x18>
		//WAIT FOR BUFFER REGISTER TO CLEAR
		while(!(UCSR0A & (1 << UDRE0)));
		UDR0 = *data;			//REGESTER EQUALS DATA
		data++;					//DATA MOVES POSITION
	}
}
 172:	df 91       	pop	r29
 174:	cf 91       	pop	r28
 176:	08 95       	ret

00000178 <read_adc>:

//FUNCTION THAT READS ADC PINS
void read_adc(void)
{
 178:	bf 92       	push	r11
 17a:	cf 92       	push	r12
 17c:	df 92       	push	r13
 17e:	ef 92       	push	r14
 180:	ff 92       	push	r15
 182:	0f 93       	push	r16
 184:	1f 93       	push	r17
 186:	cf 93       	push	r28
 188:	df 93       	push	r29
	unsigned char i = 10;	//Variable for sample amounts 
	adc_temp = 0;			//Initialize adc_temp 
 18a:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__data_end>
 18e:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <__data_end+0x1>
 192:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <__data_end+0x2>
 196:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <__data_end+0x3>
 19a:	0f 2e       	mov	r0, r31
 19c:	fa e0       	ldi	r31, 0x0A	; 10
 19e:	bf 2e       	mov	r11, r31
 1a0:	f0 2d       	mov	r31, r0
	while(i--)
	{
		ADCSRA |= (1<<ADSC);	   //Enable Start Conversion
 1a2:	ca e7       	ldi	r28, 0x7A	; 122
 1a4:	d0 e0       	ldi	r29, 0x00	; 0
		while(ADCSRA & (1<<ADSC)); //Wait until enable & start conversion 
		adc_temp += ADC;           //LM35 value added & stored into adc_temp
 1a6:	08 e7       	ldi	r16, 0x78	; 120
 1a8:	10 e0       	ldi	r17, 0x00	; 0
{
	unsigned char i = 10;	//Variable for sample amounts 
	adc_temp = 0;			//Initialize adc_temp 
	while(i--)
	{
		ADCSRA |= (1<<ADSC);	   //Enable Start Conversion
 1aa:	88 81       	ld	r24, Y
 1ac:	80 64       	ori	r24, 0x40	; 64
 1ae:	88 83       	st	Y, r24
		while(ADCSRA & (1<<ADSC)); //Wait until enable & start conversion 
 1b0:	88 81       	ld	r24, Y
 1b2:	86 fd       	sbrc	r24, 6
 1b4:	fd cf       	rjmp	.-6      	; 0x1b0 <read_adc+0x38>
		adc_temp += ADC;           //LM35 value added & stored into adc_temp
 1b6:	f8 01       	movw	r30, r16
 1b8:	60 81       	ld	r22, Z
 1ba:	71 81       	ldd	r23, Z+1	; 0x01
 1bc:	c0 90 14 01 	lds	r12, 0x0114	; 0x800114 <__data_end>
 1c0:	d0 90 15 01 	lds	r13, 0x0115	; 0x800115 <__data_end+0x1>
 1c4:	e0 90 16 01 	lds	r14, 0x0116	; 0x800116 <__data_end+0x2>
 1c8:	f0 90 17 01 	lds	r15, 0x0117	; 0x800117 <__data_end+0x3>
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 42 02 	call	0x484	; 0x484 <__floatunsisf>
 1d4:	a7 01       	movw	r20, r14
 1d6:	96 01       	movw	r18, r12
 1d8:	0e 94 64 01 	call	0x2c8	; 0x2c8 <__addsf3>
 1dc:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <__data_end>
 1e0:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <__data_end+0x1>
 1e4:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end+0x2>
 1e8:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x3>
 1ec:	ba 94       	dec	r11
//FUNCTION THAT READS ADC PINS
void read_adc(void)
{
	unsigned char i = 10;	//Variable for sample amounts 
	adc_temp = 0;			//Initialize adc_temp 
	while(i--)
 1ee:	b1 10       	cpse	r11, r1
 1f0:	dc cf       	rjmp	.-72     	; 0x1aa <read_adc+0x32>
	{
		ADCSRA |= (1<<ADSC);	   //Enable Start Conversion
		while(ADCSRA & (1<<ADSC)); //Wait until enable & start conversion 
		adc_temp += ADC;           //LM35 value added & stored into adc_temp
	}
	adc_temp = adc_temp/10;		   //Average of LM35 values 
 1f2:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <__data_end>
 1f6:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <__data_end+0x1>
 1fa:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end+0x2>
 1fe:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x3>
 202:	20 e0       	ldi	r18, 0x00	; 0
 204:	30 e0       	ldi	r19, 0x00	; 0
 206:	40 e2       	ldi	r20, 0x20	; 32
 208:	51 e4       	ldi	r21, 0x41	; 65
 20a:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__divsf3>
 20e:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <__data_end>
 212:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <__data_end+0x1>
 216:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end+0x2>
 21a:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x3>
	
}
 21e:	df 91       	pop	r29
 220:	cf 91       	pop	r28
 222:	1f 91       	pop	r17
 224:	0f 91       	pop	r16
 226:	ff 90       	pop	r15
 228:	ef 90       	pop	r14
 22a:	df 90       	pop	r13
 22c:	cf 90       	pop	r12
 22e:	bf 90       	pop	r11
 230:	08 95       	ret

00000232 <main>:

int main(void)
{
 232:	cf 93       	push	r28
 234:	df 93       	push	r29
 236:	cd b7       	in	r28, 0x3d	; 61
 238:	de b7       	in	r29, 0x3e	; 62
 23a:	64 97       	sbiw	r28, 0x14	; 20
 23c:	0f b6       	in	r0, 0x3f	; 63
 23e:	f8 94       	cli
 240:	de bf       	out	0x3e, r29	; 62
 242:	0f be       	out	0x3f, r0	; 63
 244:	cd bf       	out	0x3d, r28	; 61
    USART_init();			//Initialize USART
 246:	0e 94 79 00 	call	0xf2	; 0xf2 <USART_init>
	adc_init();				//Initialize ADC
 24a:	0e 94 85 00 	call	0x10a	; 0x10a <adc_init>
	set();					//Initialize Timers/Interrupts
 24e:	0e 94 8c 00 	call	0x118	; 0x118 <set>
		//CONTROL WILL ENTER IF OVERFLOW >= 61 CYCLES ~1sec
		if (Overflow == 61)		
		{
			read_adc();			//Call Read Function
		
			snprintf(char_array,sizeof(char_array), "%f\r\n", adc_temp);
 252:	0f 2e       	mov	r0, r31
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	ef 2e       	mov	r14, r31
 258:	f1 e0       	ldi	r31, 0x01	; 1
 25a:	ff 2e       	mov	r15, r31
 25c:	f0 2d       	mov	r31, r0
 25e:	0f 2e       	mov	r0, r31
 260:	f4 e1       	ldi	r31, 0x14	; 20
 262:	df 2e       	mov	r13, r31
 264:	f0 2d       	mov	r31, r0
 266:	8e 01       	movw	r16, r28
 268:	0f 5f       	subi	r16, 0xFF	; 255
 26a:	1f 4f       	sbci	r17, 0xFF	; 255
	char char_array[20];	//Character array of 20 for float
	
    while (1) 
    {
		//CONTROL WILL ENTER IF OVERFLOW >= 61 CYCLES ~1sec
		if (Overflow == 61)		
 26c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <Overflow>
 270:	8d 33       	cpi	r24, 0x3D	; 61
 272:	e1 f7       	brne	.-8      	; 0x26c <main+0x3a>
		{
			read_adc();			//Call Read Function
 274:	0e 94 bc 00 	call	0x178	; 0x178 <read_adc>
		
			snprintf(char_array,sizeof(char_array), "%f\r\n", adc_temp);
 278:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 27c:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 280:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <__data_end+0x2>
 284:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <__data_end+0x3>
 288:	bf 93       	push	r27
 28a:	af 93       	push	r26
 28c:	9f 93       	push	r25
 28e:	8f 93       	push	r24
 290:	ff 92       	push	r15
 292:	ef 92       	push	r14
 294:	1f 92       	push	r1
 296:	df 92       	push	r13
 298:	1f 93       	push	r17
 29a:	0f 93       	push	r16
 29c:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <snprintf>

			//Prints temperature value
			USART_tx_string("TEMPERATURE: ");
 2a0:	85 e0       	ldi	r24, 0x05	; 5
 2a2:	91 e0       	ldi	r25, 0x01	; 1
 2a4:	0e 94 a6 00 	call	0x14c	; 0x14c <USART_tx_string>
			USART_tx_string(char_array);
 2a8:	c8 01       	movw	r24, r16
 2aa:	0e 94 a6 00 	call	0x14c	; 0x14c <USART_tx_string>
			USART_tx_string("\n");
 2ae:	83 e0       	ldi	r24, 0x03	; 3
 2b0:	91 e0       	ldi	r25, 0x01	; 1
 2b2:	0e 94 a6 00 	call	0x14c	; 0x14c <USART_tx_string>
		
			//Overflow reset to 0
			Overflow = 0;
 2b6:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <Overflow>
 2ba:	0f b6       	in	r0, 0x3f	; 63
 2bc:	f8 94       	cli
 2be:	de bf       	out	0x3e, r29	; 62
 2c0:	0f be       	out	0x3f, r0	; 63
 2c2:	cd bf       	out	0x3d, r28	; 61
 2c4:	d3 cf       	rjmp	.-90     	; 0x26c <main+0x3a>

000002c6 <__subsf3>:
 2c6:	50 58       	subi	r21, 0x80	; 128

000002c8 <__addsf3>:
 2c8:	bb 27       	eor	r27, r27
 2ca:	aa 27       	eor	r26, r26
 2cc:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <__addsf3x>
 2d0:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_round>
 2d4:	0e 94 88 02 	call	0x510	; 0x510 <__fp_pscA>
 2d8:	38 f0       	brcs	.+14     	; 0x2e8 <__addsf3+0x20>
 2da:	0e 94 8f 02 	call	0x51e	; 0x51e <__fp_pscB>
 2de:	20 f0       	brcs	.+8      	; 0x2e8 <__addsf3+0x20>
 2e0:	39 f4       	brne	.+14     	; 0x2f0 <__addsf3+0x28>
 2e2:	9f 3f       	cpi	r25, 0xFF	; 255
 2e4:	19 f4       	brne	.+6      	; 0x2ec <__addsf3+0x24>
 2e6:	26 f4       	brtc	.+8      	; 0x2f0 <__addsf3+0x28>
 2e8:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_nan>
 2ec:	0e f4       	brtc	.+2      	; 0x2f0 <__addsf3+0x28>
 2ee:	e0 95       	com	r30
 2f0:	e7 fb       	bst	r30, 7
 2f2:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <__fp_inf>

000002f6 <__addsf3x>:
 2f6:	e9 2f       	mov	r30, r25
 2f8:	0e 94 a7 02 	call	0x54e	; 0x54e <__fp_split3>
 2fc:	58 f3       	brcs	.-42     	; 0x2d4 <__addsf3+0xc>
 2fe:	ba 17       	cp	r27, r26
 300:	62 07       	cpc	r22, r18
 302:	73 07       	cpc	r23, r19
 304:	84 07       	cpc	r24, r20
 306:	95 07       	cpc	r25, r21
 308:	20 f0       	brcs	.+8      	; 0x312 <__addsf3x+0x1c>
 30a:	79 f4       	brne	.+30     	; 0x32a <__addsf3x+0x34>
 30c:	a6 f5       	brtc	.+104    	; 0x376 <__addsf3x+0x80>
 30e:	0c 94 c9 02 	jmp	0x592	; 0x592 <__fp_zero>
 312:	0e f4       	brtc	.+2      	; 0x316 <__addsf3x+0x20>
 314:	e0 95       	com	r30
 316:	0b 2e       	mov	r0, r27
 318:	ba 2f       	mov	r27, r26
 31a:	a0 2d       	mov	r26, r0
 31c:	0b 01       	movw	r0, r22
 31e:	b9 01       	movw	r22, r18
 320:	90 01       	movw	r18, r0
 322:	0c 01       	movw	r0, r24
 324:	ca 01       	movw	r24, r20
 326:	a0 01       	movw	r20, r0
 328:	11 24       	eor	r1, r1
 32a:	ff 27       	eor	r31, r31
 32c:	59 1b       	sub	r21, r25
 32e:	99 f0       	breq	.+38     	; 0x356 <__addsf3x+0x60>
 330:	59 3f       	cpi	r21, 0xF9	; 249
 332:	50 f4       	brcc	.+20     	; 0x348 <__addsf3x+0x52>
 334:	50 3e       	cpi	r21, 0xE0	; 224
 336:	68 f1       	brcs	.+90     	; 0x392 <__addsf3x+0x9c>
 338:	1a 16       	cp	r1, r26
 33a:	f0 40       	sbci	r31, 0x00	; 0
 33c:	a2 2f       	mov	r26, r18
 33e:	23 2f       	mov	r18, r19
 340:	34 2f       	mov	r19, r20
 342:	44 27       	eor	r20, r20
 344:	58 5f       	subi	r21, 0xF8	; 248
 346:	f3 cf       	rjmp	.-26     	; 0x32e <__addsf3x+0x38>
 348:	46 95       	lsr	r20
 34a:	37 95       	ror	r19
 34c:	27 95       	ror	r18
 34e:	a7 95       	ror	r26
 350:	f0 40       	sbci	r31, 0x00	; 0
 352:	53 95       	inc	r21
 354:	c9 f7       	brne	.-14     	; 0x348 <__addsf3x+0x52>
 356:	7e f4       	brtc	.+30     	; 0x376 <__addsf3x+0x80>
 358:	1f 16       	cp	r1, r31
 35a:	ba 0b       	sbc	r27, r26
 35c:	62 0b       	sbc	r22, r18
 35e:	73 0b       	sbc	r23, r19
 360:	84 0b       	sbc	r24, r20
 362:	ba f0       	brmi	.+46     	; 0x392 <__addsf3x+0x9c>
 364:	91 50       	subi	r25, 0x01	; 1
 366:	a1 f0       	breq	.+40     	; 0x390 <__addsf3x+0x9a>
 368:	ff 0f       	add	r31, r31
 36a:	bb 1f       	adc	r27, r27
 36c:	66 1f       	adc	r22, r22
 36e:	77 1f       	adc	r23, r23
 370:	88 1f       	adc	r24, r24
 372:	c2 f7       	brpl	.-16     	; 0x364 <__addsf3x+0x6e>
 374:	0e c0       	rjmp	.+28     	; 0x392 <__addsf3x+0x9c>
 376:	ba 0f       	add	r27, r26
 378:	62 1f       	adc	r22, r18
 37a:	73 1f       	adc	r23, r19
 37c:	84 1f       	adc	r24, r20
 37e:	48 f4       	brcc	.+18     	; 0x392 <__addsf3x+0x9c>
 380:	87 95       	ror	r24
 382:	77 95       	ror	r23
 384:	67 95       	ror	r22
 386:	b7 95       	ror	r27
 388:	f7 95       	ror	r31
 38a:	9e 3f       	cpi	r25, 0xFE	; 254
 38c:	08 f0       	brcs	.+2      	; 0x390 <__addsf3x+0x9a>
 38e:	b0 cf       	rjmp	.-160    	; 0x2f0 <__addsf3+0x28>
 390:	93 95       	inc	r25
 392:	88 0f       	add	r24, r24
 394:	08 f0       	brcs	.+2      	; 0x398 <__addsf3x+0xa2>
 396:	99 27       	eor	r25, r25
 398:	ee 0f       	add	r30, r30
 39a:	97 95       	ror	r25
 39c:	87 95       	ror	r24
 39e:	08 95       	ret

000003a0 <__divsf3>:
 3a0:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <__divsf3x>
 3a4:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_round>
 3a8:	0e 94 8f 02 	call	0x51e	; 0x51e <__fp_pscB>
 3ac:	58 f0       	brcs	.+22     	; 0x3c4 <__divsf3+0x24>
 3ae:	0e 94 88 02 	call	0x510	; 0x510 <__fp_pscA>
 3b2:	40 f0       	brcs	.+16     	; 0x3c4 <__divsf3+0x24>
 3b4:	29 f4       	brne	.+10     	; 0x3c0 <__divsf3+0x20>
 3b6:	5f 3f       	cpi	r21, 0xFF	; 255
 3b8:	29 f0       	breq	.+10     	; 0x3c4 <__divsf3+0x24>
 3ba:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <__fp_inf>
 3be:	51 11       	cpse	r21, r1
 3c0:	0c 94 ca 02 	jmp	0x594	; 0x594 <__fp_szero>
 3c4:	0c 94 85 02 	jmp	0x50a	; 0x50a <__fp_nan>

000003c8 <__divsf3x>:
 3c8:	0e 94 a7 02 	call	0x54e	; 0x54e <__fp_split3>
 3cc:	68 f3       	brcs	.-38     	; 0x3a8 <__divsf3+0x8>

000003ce <__divsf3_pse>:
 3ce:	99 23       	and	r25, r25
 3d0:	b1 f3       	breq	.-20     	; 0x3be <__divsf3+0x1e>
 3d2:	55 23       	and	r21, r21
 3d4:	91 f3       	breq	.-28     	; 0x3ba <__divsf3+0x1a>
 3d6:	95 1b       	sub	r25, r21
 3d8:	55 0b       	sbc	r21, r21
 3da:	bb 27       	eor	r27, r27
 3dc:	aa 27       	eor	r26, r26
 3de:	62 17       	cp	r22, r18
 3e0:	73 07       	cpc	r23, r19
 3e2:	84 07       	cpc	r24, r20
 3e4:	38 f0       	brcs	.+14     	; 0x3f4 <__divsf3_pse+0x26>
 3e6:	9f 5f       	subi	r25, 0xFF	; 255
 3e8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ea:	22 0f       	add	r18, r18
 3ec:	33 1f       	adc	r19, r19
 3ee:	44 1f       	adc	r20, r20
 3f0:	aa 1f       	adc	r26, r26
 3f2:	a9 f3       	breq	.-22     	; 0x3de <__divsf3_pse+0x10>
 3f4:	35 d0       	rcall	.+106    	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 3f6:	0e 2e       	mov	r0, r30
 3f8:	3a f0       	brmi	.+14     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fa:	e0 e8       	ldi	r30, 0x80	; 128
 3fc:	32 d0       	rcall	.+100    	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 3fe:	91 50       	subi	r25, 0x01	; 1
 400:	50 40       	sbci	r21, 0x00	; 0
 402:	e6 95       	lsr	r30
 404:	00 1c       	adc	r0, r0
 406:	ca f7       	brpl	.-14     	; 0x3fa <__divsf3_pse+0x2c>
 408:	2b d0       	rcall	.+86     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 40a:	fe 2f       	mov	r31, r30
 40c:	29 d0       	rcall	.+82     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 40e:	66 0f       	add	r22, r22
 410:	77 1f       	adc	r23, r23
 412:	88 1f       	adc	r24, r24
 414:	bb 1f       	adc	r27, r27
 416:	26 17       	cp	r18, r22
 418:	37 07       	cpc	r19, r23
 41a:	48 07       	cpc	r20, r24
 41c:	ab 07       	cpc	r26, r27
 41e:	b0 e8       	ldi	r27, 0x80	; 128
 420:	09 f0       	breq	.+2      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 422:	bb 0b       	sbc	r27, r27
 424:	80 2d       	mov	r24, r0
 426:	bf 01       	movw	r22, r30
 428:	ff 27       	eor	r31, r31
 42a:	93 58       	subi	r25, 0x83	; 131
 42c:	5f 4f       	sbci	r21, 0xFF	; 255
 42e:	3a f0       	brmi	.+14     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 430:	9e 3f       	cpi	r25, 0xFE	; 254
 432:	51 05       	cpc	r21, r1
 434:	78 f0       	brcs	.+30     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 436:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <__fp_inf>
 43a:	0c 94 ca 02 	jmp	0x594	; 0x594 <__fp_szero>
 43e:	5f 3f       	cpi	r21, 0xFF	; 255
 440:	e4 f3       	brlt	.-8      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 442:	98 3e       	cpi	r25, 0xE8	; 232
 444:	d4 f3       	brlt	.-12     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 446:	86 95       	lsr	r24
 448:	77 95       	ror	r23
 44a:	67 95       	ror	r22
 44c:	b7 95       	ror	r27
 44e:	f7 95       	ror	r31
 450:	9f 5f       	subi	r25, 0xFF	; 255
 452:	c9 f7       	brne	.-14     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 454:	88 0f       	add	r24, r24
 456:	91 1d       	adc	r25, r1
 458:	96 95       	lsr	r25
 45a:	87 95       	ror	r24
 45c:	97 f9       	bld	r25, 7
 45e:	08 95       	ret
 460:	e1 e0       	ldi	r30, 0x01	; 1
 462:	66 0f       	add	r22, r22
 464:	77 1f       	adc	r23, r23
 466:	88 1f       	adc	r24, r24
 468:	bb 1f       	adc	r27, r27
 46a:	62 17       	cp	r22, r18
 46c:	73 07       	cpc	r23, r19
 46e:	84 07       	cpc	r24, r20
 470:	ba 07       	cpc	r27, r26
 472:	20 f0       	brcs	.+8      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 474:	62 1b       	sub	r22, r18
 476:	73 0b       	sbc	r23, r19
 478:	84 0b       	sbc	r24, r20
 47a:	ba 0b       	sbc	r27, r26
 47c:	ee 1f       	adc	r30, r30
 47e:	88 f7       	brcc	.-30     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 480:	e0 95       	com	r30
 482:	08 95       	ret

00000484 <__floatunsisf>:
 484:	e8 94       	clt
 486:	09 c0       	rjmp	.+18     	; 0x49a <__floatsisf+0x12>

00000488 <__floatsisf>:
 488:	97 fb       	bst	r25, 7
 48a:	3e f4       	brtc	.+14     	; 0x49a <__floatsisf+0x12>
 48c:	90 95       	com	r25
 48e:	80 95       	com	r24
 490:	70 95       	com	r23
 492:	61 95       	neg	r22
 494:	7f 4f       	sbci	r23, 0xFF	; 255
 496:	8f 4f       	sbci	r24, 0xFF	; 255
 498:	9f 4f       	sbci	r25, 0xFF	; 255
 49a:	99 23       	and	r25, r25
 49c:	a9 f0       	breq	.+42     	; 0x4c8 <__floatsisf+0x40>
 49e:	f9 2f       	mov	r31, r25
 4a0:	96 e9       	ldi	r25, 0x96	; 150
 4a2:	bb 27       	eor	r27, r27
 4a4:	93 95       	inc	r25
 4a6:	f6 95       	lsr	r31
 4a8:	87 95       	ror	r24
 4aa:	77 95       	ror	r23
 4ac:	67 95       	ror	r22
 4ae:	b7 95       	ror	r27
 4b0:	f1 11       	cpse	r31, r1
 4b2:	f8 cf       	rjmp	.-16     	; 0x4a4 <__floatsisf+0x1c>
 4b4:	fa f4       	brpl	.+62     	; 0x4f4 <__floatsisf+0x6c>
 4b6:	bb 0f       	add	r27, r27
 4b8:	11 f4       	brne	.+4      	; 0x4be <__floatsisf+0x36>
 4ba:	60 ff       	sbrs	r22, 0
 4bc:	1b c0       	rjmp	.+54     	; 0x4f4 <__floatsisf+0x6c>
 4be:	6f 5f       	subi	r22, 0xFF	; 255
 4c0:	7f 4f       	sbci	r23, 0xFF	; 255
 4c2:	8f 4f       	sbci	r24, 0xFF	; 255
 4c4:	9f 4f       	sbci	r25, 0xFF	; 255
 4c6:	16 c0       	rjmp	.+44     	; 0x4f4 <__floatsisf+0x6c>
 4c8:	88 23       	and	r24, r24
 4ca:	11 f0       	breq	.+4      	; 0x4d0 <__floatsisf+0x48>
 4cc:	96 e9       	ldi	r25, 0x96	; 150
 4ce:	11 c0       	rjmp	.+34     	; 0x4f2 <__floatsisf+0x6a>
 4d0:	77 23       	and	r23, r23
 4d2:	21 f0       	breq	.+8      	; 0x4dc <__floatsisf+0x54>
 4d4:	9e e8       	ldi	r25, 0x8E	; 142
 4d6:	87 2f       	mov	r24, r23
 4d8:	76 2f       	mov	r23, r22
 4da:	05 c0       	rjmp	.+10     	; 0x4e6 <__floatsisf+0x5e>
 4dc:	66 23       	and	r22, r22
 4de:	71 f0       	breq	.+28     	; 0x4fc <__floatsisf+0x74>
 4e0:	96 e8       	ldi	r25, 0x86	; 134
 4e2:	86 2f       	mov	r24, r22
 4e4:	70 e0       	ldi	r23, 0x00	; 0
 4e6:	60 e0       	ldi	r22, 0x00	; 0
 4e8:	2a f0       	brmi	.+10     	; 0x4f4 <__floatsisf+0x6c>
 4ea:	9a 95       	dec	r25
 4ec:	66 0f       	add	r22, r22
 4ee:	77 1f       	adc	r23, r23
 4f0:	88 1f       	adc	r24, r24
 4f2:	da f7       	brpl	.-10     	; 0x4ea <__floatsisf+0x62>
 4f4:	88 0f       	add	r24, r24
 4f6:	96 95       	lsr	r25
 4f8:	87 95       	ror	r24
 4fa:	97 f9       	bld	r25, 7
 4fc:	08 95       	ret

000004fe <__fp_inf>:
 4fe:	97 f9       	bld	r25, 7
 500:	9f 67       	ori	r25, 0x7F	; 127
 502:	80 e8       	ldi	r24, 0x80	; 128
 504:	70 e0       	ldi	r23, 0x00	; 0
 506:	60 e0       	ldi	r22, 0x00	; 0
 508:	08 95       	ret

0000050a <__fp_nan>:
 50a:	9f ef       	ldi	r25, 0xFF	; 255
 50c:	80 ec       	ldi	r24, 0xC0	; 192
 50e:	08 95       	ret

00000510 <__fp_pscA>:
 510:	00 24       	eor	r0, r0
 512:	0a 94       	dec	r0
 514:	16 16       	cp	r1, r22
 516:	17 06       	cpc	r1, r23
 518:	18 06       	cpc	r1, r24
 51a:	09 06       	cpc	r0, r25
 51c:	08 95       	ret

0000051e <__fp_pscB>:
 51e:	00 24       	eor	r0, r0
 520:	0a 94       	dec	r0
 522:	12 16       	cp	r1, r18
 524:	13 06       	cpc	r1, r19
 526:	14 06       	cpc	r1, r20
 528:	05 06       	cpc	r0, r21
 52a:	08 95       	ret

0000052c <__fp_round>:
 52c:	09 2e       	mov	r0, r25
 52e:	03 94       	inc	r0
 530:	00 0c       	add	r0, r0
 532:	11 f4       	brne	.+4      	; 0x538 <__fp_round+0xc>
 534:	88 23       	and	r24, r24
 536:	52 f0       	brmi	.+20     	; 0x54c <__fp_round+0x20>
 538:	bb 0f       	add	r27, r27
 53a:	40 f4       	brcc	.+16     	; 0x54c <__fp_round+0x20>
 53c:	bf 2b       	or	r27, r31
 53e:	11 f4       	brne	.+4      	; 0x544 <__fp_round+0x18>
 540:	60 ff       	sbrs	r22, 0
 542:	04 c0       	rjmp	.+8      	; 0x54c <__fp_round+0x20>
 544:	6f 5f       	subi	r22, 0xFF	; 255
 546:	7f 4f       	sbci	r23, 0xFF	; 255
 548:	8f 4f       	sbci	r24, 0xFF	; 255
 54a:	9f 4f       	sbci	r25, 0xFF	; 255
 54c:	08 95       	ret

0000054e <__fp_split3>:
 54e:	57 fd       	sbrc	r21, 7
 550:	90 58       	subi	r25, 0x80	; 128
 552:	44 0f       	add	r20, r20
 554:	55 1f       	adc	r21, r21
 556:	59 f0       	breq	.+22     	; 0x56e <__fp_splitA+0x10>
 558:	5f 3f       	cpi	r21, 0xFF	; 255
 55a:	71 f0       	breq	.+28     	; 0x578 <__fp_splitA+0x1a>
 55c:	47 95       	ror	r20

0000055e <__fp_splitA>:
 55e:	88 0f       	add	r24, r24
 560:	97 fb       	bst	r25, 7
 562:	99 1f       	adc	r25, r25
 564:	61 f0       	breq	.+24     	; 0x57e <__fp_splitA+0x20>
 566:	9f 3f       	cpi	r25, 0xFF	; 255
 568:	79 f0       	breq	.+30     	; 0x588 <__fp_splitA+0x2a>
 56a:	87 95       	ror	r24
 56c:	08 95       	ret
 56e:	12 16       	cp	r1, r18
 570:	13 06       	cpc	r1, r19
 572:	14 06       	cpc	r1, r20
 574:	55 1f       	adc	r21, r21
 576:	f2 cf       	rjmp	.-28     	; 0x55c <__fp_split3+0xe>
 578:	46 95       	lsr	r20
 57a:	f1 df       	rcall	.-30     	; 0x55e <__fp_splitA>
 57c:	08 c0       	rjmp	.+16     	; 0x58e <__fp_splitA+0x30>
 57e:	16 16       	cp	r1, r22
 580:	17 06       	cpc	r1, r23
 582:	18 06       	cpc	r1, r24
 584:	99 1f       	adc	r25, r25
 586:	f1 cf       	rjmp	.-30     	; 0x56a <__fp_splitA+0xc>
 588:	86 95       	lsr	r24
 58a:	71 05       	cpc	r23, r1
 58c:	61 05       	cpc	r22, r1
 58e:	08 94       	sec
 590:	08 95       	ret

00000592 <__fp_zero>:
 592:	e8 94       	clt

00000594 <__fp_szero>:
 594:	bb 27       	eor	r27, r27
 596:	66 27       	eor	r22, r22
 598:	77 27       	eor	r23, r23
 59a:	cb 01       	movw	r24, r22
 59c:	97 f9       	bld	r25, 7
 59e:	08 95       	ret

000005a0 <snprintf>:
 5a0:	ae e0       	ldi	r26, 0x0E	; 14
 5a2:	b0 e0       	ldi	r27, 0x00	; 0
 5a4:	e6 ed       	ldi	r30, 0xD6	; 214
 5a6:	f2 e0       	ldi	r31, 0x02	; 2
 5a8:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__prologue_saves__+0x1c>
 5ac:	0d 89       	ldd	r16, Y+21	; 0x15
 5ae:	1e 89       	ldd	r17, Y+22	; 0x16
 5b0:	8f 89       	ldd	r24, Y+23	; 0x17
 5b2:	98 8d       	ldd	r25, Y+24	; 0x18
 5b4:	26 e0       	ldi	r18, 0x06	; 6
 5b6:	2c 83       	std	Y+4, r18	; 0x04
 5b8:	1a 83       	std	Y+2, r17	; 0x02
 5ba:	09 83       	std	Y+1, r16	; 0x01
 5bc:	97 ff       	sbrs	r25, 7
 5be:	02 c0       	rjmp	.+4      	; 0x5c4 <snprintf+0x24>
 5c0:	80 e0       	ldi	r24, 0x00	; 0
 5c2:	90 e8       	ldi	r25, 0x80	; 128
 5c4:	01 97       	sbiw	r24, 0x01	; 1
 5c6:	9e 83       	std	Y+6, r25	; 0x06
 5c8:	8d 83       	std	Y+5, r24	; 0x05
 5ca:	ae 01       	movw	r20, r28
 5cc:	45 5e       	subi	r20, 0xE5	; 229
 5ce:	5f 4f       	sbci	r21, 0xFF	; 255
 5d0:	69 8d       	ldd	r22, Y+25	; 0x19
 5d2:	7a 8d       	ldd	r23, Y+26	; 0x1a
 5d4:	ce 01       	movw	r24, r28
 5d6:	01 96       	adiw	r24, 0x01	; 1
 5d8:	0e 94 00 03 	call	0x600	; 0x600 <vfprintf>
 5dc:	4d 81       	ldd	r20, Y+5	; 0x05
 5de:	5e 81       	ldd	r21, Y+6	; 0x06
 5e0:	57 fd       	sbrc	r21, 7
 5e2:	0a c0       	rjmp	.+20     	; 0x5f8 <snprintf+0x58>
 5e4:	2f 81       	ldd	r18, Y+7	; 0x07
 5e6:	38 85       	ldd	r19, Y+8	; 0x08
 5e8:	42 17       	cp	r20, r18
 5ea:	53 07       	cpc	r21, r19
 5ec:	0c f4       	brge	.+2      	; 0x5f0 <snprintf+0x50>
 5ee:	9a 01       	movw	r18, r20
 5f0:	f8 01       	movw	r30, r16
 5f2:	e2 0f       	add	r30, r18
 5f4:	f3 1f       	adc	r31, r19
 5f6:	10 82       	st	Z, r1
 5f8:	2e 96       	adiw	r28, 0x0e	; 14
 5fa:	e4 e0       	ldi	r30, 0x04	; 4
 5fc:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__epilogue_restores__+0x1c>

00000600 <vfprintf>:
 600:	ab e0       	ldi	r26, 0x0B	; 11
 602:	b0 e0       	ldi	r27, 0x00	; 0
 604:	e6 e0       	ldi	r30, 0x06	; 6
 606:	f3 e0       	ldi	r31, 0x03	; 3
 608:	0c 94 91 05 	jmp	0xb22	; 0xb22 <__prologue_saves__>
 60c:	6c 01       	movw	r12, r24
 60e:	7b 01       	movw	r14, r22
 610:	8a 01       	movw	r16, r20
 612:	fc 01       	movw	r30, r24
 614:	17 82       	std	Z+7, r1	; 0x07
 616:	16 82       	std	Z+6, r1	; 0x06
 618:	83 81       	ldd	r24, Z+3	; 0x03
 61a:	81 ff       	sbrs	r24, 1
 61c:	cc c1       	rjmp	.+920    	; 0x9b6 <__stack+0xb7>
 61e:	ce 01       	movw	r24, r28
 620:	01 96       	adiw	r24, 0x01	; 1
 622:	3c 01       	movw	r6, r24
 624:	f6 01       	movw	r30, r12
 626:	93 81       	ldd	r25, Z+3	; 0x03
 628:	f7 01       	movw	r30, r14
 62a:	93 fd       	sbrc	r25, 3
 62c:	85 91       	lpm	r24, Z+
 62e:	93 ff       	sbrs	r25, 3
 630:	81 91       	ld	r24, Z+
 632:	7f 01       	movw	r14, r30
 634:	88 23       	and	r24, r24
 636:	09 f4       	brne	.+2      	; 0x63a <vfprintf+0x3a>
 638:	ba c1       	rjmp	.+884    	; 0x9ae <__stack+0xaf>
 63a:	85 32       	cpi	r24, 0x25	; 37
 63c:	39 f4       	brne	.+14     	; 0x64c <vfprintf+0x4c>
 63e:	93 fd       	sbrc	r25, 3
 640:	85 91       	lpm	r24, Z+
 642:	93 ff       	sbrs	r25, 3
 644:	81 91       	ld	r24, Z+
 646:	7f 01       	movw	r14, r30
 648:	85 32       	cpi	r24, 0x25	; 37
 64a:	29 f4       	brne	.+10     	; 0x656 <vfprintf+0x56>
 64c:	b6 01       	movw	r22, r12
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	0e 94 f7 04 	call	0x9ee	; 0x9ee <fputc>
 654:	e7 cf       	rjmp	.-50     	; 0x624 <vfprintf+0x24>
 656:	91 2c       	mov	r9, r1
 658:	21 2c       	mov	r2, r1
 65a:	31 2c       	mov	r3, r1
 65c:	ff e1       	ldi	r31, 0x1F	; 31
 65e:	f3 15       	cp	r31, r3
 660:	d8 f0       	brcs	.+54     	; 0x698 <vfprintf+0x98>
 662:	8b 32       	cpi	r24, 0x2B	; 43
 664:	79 f0       	breq	.+30     	; 0x684 <vfprintf+0x84>
 666:	38 f4       	brcc	.+14     	; 0x676 <vfprintf+0x76>
 668:	80 32       	cpi	r24, 0x20	; 32
 66a:	79 f0       	breq	.+30     	; 0x68a <vfprintf+0x8a>
 66c:	83 32       	cpi	r24, 0x23	; 35
 66e:	a1 f4       	brne	.+40     	; 0x698 <vfprintf+0x98>
 670:	23 2d       	mov	r18, r3
 672:	20 61       	ori	r18, 0x10	; 16
 674:	1d c0       	rjmp	.+58     	; 0x6b0 <vfprintf+0xb0>
 676:	8d 32       	cpi	r24, 0x2D	; 45
 678:	61 f0       	breq	.+24     	; 0x692 <vfprintf+0x92>
 67a:	80 33       	cpi	r24, 0x30	; 48
 67c:	69 f4       	brne	.+26     	; 0x698 <vfprintf+0x98>
 67e:	23 2d       	mov	r18, r3
 680:	21 60       	ori	r18, 0x01	; 1
 682:	16 c0       	rjmp	.+44     	; 0x6b0 <vfprintf+0xb0>
 684:	83 2d       	mov	r24, r3
 686:	82 60       	ori	r24, 0x02	; 2
 688:	38 2e       	mov	r3, r24
 68a:	e3 2d       	mov	r30, r3
 68c:	e4 60       	ori	r30, 0x04	; 4
 68e:	3e 2e       	mov	r3, r30
 690:	2a c0       	rjmp	.+84     	; 0x6e6 <vfprintf+0xe6>
 692:	f3 2d       	mov	r31, r3
 694:	f8 60       	ori	r31, 0x08	; 8
 696:	1d c0       	rjmp	.+58     	; 0x6d2 <vfprintf+0xd2>
 698:	37 fc       	sbrc	r3, 7
 69a:	2d c0       	rjmp	.+90     	; 0x6f6 <vfprintf+0xf6>
 69c:	20 ed       	ldi	r18, 0xD0	; 208
 69e:	28 0f       	add	r18, r24
 6a0:	2a 30       	cpi	r18, 0x0A	; 10
 6a2:	40 f0       	brcs	.+16     	; 0x6b4 <vfprintf+0xb4>
 6a4:	8e 32       	cpi	r24, 0x2E	; 46
 6a6:	b9 f4       	brne	.+46     	; 0x6d6 <vfprintf+0xd6>
 6a8:	36 fc       	sbrc	r3, 6
 6aa:	81 c1       	rjmp	.+770    	; 0x9ae <__stack+0xaf>
 6ac:	23 2d       	mov	r18, r3
 6ae:	20 64       	ori	r18, 0x40	; 64
 6b0:	32 2e       	mov	r3, r18
 6b2:	19 c0       	rjmp	.+50     	; 0x6e6 <vfprintf+0xe6>
 6b4:	36 fe       	sbrs	r3, 6
 6b6:	06 c0       	rjmp	.+12     	; 0x6c4 <vfprintf+0xc4>
 6b8:	8a e0       	ldi	r24, 0x0A	; 10
 6ba:	98 9e       	mul	r9, r24
 6bc:	20 0d       	add	r18, r0
 6be:	11 24       	eor	r1, r1
 6c0:	92 2e       	mov	r9, r18
 6c2:	11 c0       	rjmp	.+34     	; 0x6e6 <vfprintf+0xe6>
 6c4:	ea e0       	ldi	r30, 0x0A	; 10
 6c6:	2e 9e       	mul	r2, r30
 6c8:	20 0d       	add	r18, r0
 6ca:	11 24       	eor	r1, r1
 6cc:	22 2e       	mov	r2, r18
 6ce:	f3 2d       	mov	r31, r3
 6d0:	f0 62       	ori	r31, 0x20	; 32
 6d2:	3f 2e       	mov	r3, r31
 6d4:	08 c0       	rjmp	.+16     	; 0x6e6 <vfprintf+0xe6>
 6d6:	8c 36       	cpi	r24, 0x6C	; 108
 6d8:	21 f4       	brne	.+8      	; 0x6e2 <vfprintf+0xe2>
 6da:	83 2d       	mov	r24, r3
 6dc:	80 68       	ori	r24, 0x80	; 128
 6de:	38 2e       	mov	r3, r24
 6e0:	02 c0       	rjmp	.+4      	; 0x6e6 <vfprintf+0xe6>
 6e2:	88 36       	cpi	r24, 0x68	; 104
 6e4:	41 f4       	brne	.+16     	; 0x6f6 <vfprintf+0xf6>
 6e6:	f7 01       	movw	r30, r14
 6e8:	93 fd       	sbrc	r25, 3
 6ea:	85 91       	lpm	r24, Z+
 6ec:	93 ff       	sbrs	r25, 3
 6ee:	81 91       	ld	r24, Z+
 6f0:	7f 01       	movw	r14, r30
 6f2:	81 11       	cpse	r24, r1
 6f4:	b3 cf       	rjmp	.-154    	; 0x65c <vfprintf+0x5c>
 6f6:	98 2f       	mov	r25, r24
 6f8:	9f 7d       	andi	r25, 0xDF	; 223
 6fa:	95 54       	subi	r25, 0x45	; 69
 6fc:	93 30       	cpi	r25, 0x03	; 3
 6fe:	28 f4       	brcc	.+10     	; 0x70a <vfprintf+0x10a>
 700:	0c 5f       	subi	r16, 0xFC	; 252
 702:	1f 4f       	sbci	r17, 0xFF	; 255
 704:	9f e3       	ldi	r25, 0x3F	; 63
 706:	99 83       	std	Y+1, r25	; 0x01
 708:	0d c0       	rjmp	.+26     	; 0x724 <vfprintf+0x124>
 70a:	83 36       	cpi	r24, 0x63	; 99
 70c:	31 f0       	breq	.+12     	; 0x71a <vfprintf+0x11a>
 70e:	83 37       	cpi	r24, 0x73	; 115
 710:	71 f0       	breq	.+28     	; 0x72e <vfprintf+0x12e>
 712:	83 35       	cpi	r24, 0x53	; 83
 714:	09 f0       	breq	.+2      	; 0x718 <vfprintf+0x118>
 716:	59 c0       	rjmp	.+178    	; 0x7ca <vfprintf+0x1ca>
 718:	21 c0       	rjmp	.+66     	; 0x75c <vfprintf+0x15c>
 71a:	f8 01       	movw	r30, r16
 71c:	80 81       	ld	r24, Z
 71e:	89 83       	std	Y+1, r24	; 0x01
 720:	0e 5f       	subi	r16, 0xFE	; 254
 722:	1f 4f       	sbci	r17, 0xFF	; 255
 724:	88 24       	eor	r8, r8
 726:	83 94       	inc	r8
 728:	91 2c       	mov	r9, r1
 72a:	53 01       	movw	r10, r6
 72c:	13 c0       	rjmp	.+38     	; 0x754 <vfprintf+0x154>
 72e:	28 01       	movw	r4, r16
 730:	f2 e0       	ldi	r31, 0x02	; 2
 732:	4f 0e       	add	r4, r31
 734:	51 1c       	adc	r5, r1
 736:	f8 01       	movw	r30, r16
 738:	a0 80       	ld	r10, Z
 73a:	b1 80       	ldd	r11, Z+1	; 0x01
 73c:	36 fe       	sbrs	r3, 6
 73e:	03 c0       	rjmp	.+6      	; 0x746 <vfprintf+0x146>
 740:	69 2d       	mov	r22, r9
 742:	70 e0       	ldi	r23, 0x00	; 0
 744:	02 c0       	rjmp	.+4      	; 0x74a <vfprintf+0x14a>
 746:	6f ef       	ldi	r22, 0xFF	; 255
 748:	7f ef       	ldi	r23, 0xFF	; 255
 74a:	c5 01       	movw	r24, r10
 74c:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <strnlen>
 750:	4c 01       	movw	r8, r24
 752:	82 01       	movw	r16, r4
 754:	f3 2d       	mov	r31, r3
 756:	ff 77       	andi	r31, 0x7F	; 127
 758:	3f 2e       	mov	r3, r31
 75a:	16 c0       	rjmp	.+44     	; 0x788 <vfprintf+0x188>
 75c:	28 01       	movw	r4, r16
 75e:	22 e0       	ldi	r18, 0x02	; 2
 760:	42 0e       	add	r4, r18
 762:	51 1c       	adc	r5, r1
 764:	f8 01       	movw	r30, r16
 766:	a0 80       	ld	r10, Z
 768:	b1 80       	ldd	r11, Z+1	; 0x01
 76a:	36 fe       	sbrs	r3, 6
 76c:	03 c0       	rjmp	.+6      	; 0x774 <vfprintf+0x174>
 76e:	69 2d       	mov	r22, r9
 770:	70 e0       	ldi	r23, 0x00	; 0
 772:	02 c0       	rjmp	.+4      	; 0x778 <vfprintf+0x178>
 774:	6f ef       	ldi	r22, 0xFF	; 255
 776:	7f ef       	ldi	r23, 0xFF	; 255
 778:	c5 01       	movw	r24, r10
 77a:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <strnlen_P>
 77e:	4c 01       	movw	r8, r24
 780:	f3 2d       	mov	r31, r3
 782:	f0 68       	ori	r31, 0x80	; 128
 784:	3f 2e       	mov	r3, r31
 786:	82 01       	movw	r16, r4
 788:	33 fc       	sbrc	r3, 3
 78a:	1b c0       	rjmp	.+54     	; 0x7c2 <vfprintf+0x1c2>
 78c:	82 2d       	mov	r24, r2
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	88 16       	cp	r8, r24
 792:	99 06       	cpc	r9, r25
 794:	b0 f4       	brcc	.+44     	; 0x7c2 <vfprintf+0x1c2>
 796:	b6 01       	movw	r22, r12
 798:	80 e2       	ldi	r24, 0x20	; 32
 79a:	90 e0       	ldi	r25, 0x00	; 0
 79c:	0e 94 f7 04 	call	0x9ee	; 0x9ee <fputc>
 7a0:	2a 94       	dec	r2
 7a2:	f4 cf       	rjmp	.-24     	; 0x78c <vfprintf+0x18c>
 7a4:	f5 01       	movw	r30, r10
 7a6:	37 fc       	sbrc	r3, 7
 7a8:	85 91       	lpm	r24, Z+
 7aa:	37 fe       	sbrs	r3, 7
 7ac:	81 91       	ld	r24, Z+
 7ae:	5f 01       	movw	r10, r30
 7b0:	b6 01       	movw	r22, r12
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	0e 94 f7 04 	call	0x9ee	; 0x9ee <fputc>
 7b8:	21 10       	cpse	r2, r1
 7ba:	2a 94       	dec	r2
 7bc:	21 e0       	ldi	r18, 0x01	; 1
 7be:	82 1a       	sub	r8, r18
 7c0:	91 08       	sbc	r9, r1
 7c2:	81 14       	cp	r8, r1
 7c4:	91 04       	cpc	r9, r1
 7c6:	71 f7       	brne	.-36     	; 0x7a4 <vfprintf+0x1a4>
 7c8:	e8 c0       	rjmp	.+464    	; 0x99a <__stack+0x9b>
 7ca:	84 36       	cpi	r24, 0x64	; 100
 7cc:	11 f0       	breq	.+4      	; 0x7d2 <vfprintf+0x1d2>
 7ce:	89 36       	cpi	r24, 0x69	; 105
 7d0:	41 f5       	brne	.+80     	; 0x822 <vfprintf+0x222>
 7d2:	f8 01       	movw	r30, r16
 7d4:	37 fe       	sbrs	r3, 7
 7d6:	07 c0       	rjmp	.+14     	; 0x7e6 <vfprintf+0x1e6>
 7d8:	60 81       	ld	r22, Z
 7da:	71 81       	ldd	r23, Z+1	; 0x01
 7dc:	82 81       	ldd	r24, Z+2	; 0x02
 7de:	93 81       	ldd	r25, Z+3	; 0x03
 7e0:	0c 5f       	subi	r16, 0xFC	; 252
 7e2:	1f 4f       	sbci	r17, 0xFF	; 255
 7e4:	08 c0       	rjmp	.+16     	; 0x7f6 <vfprintf+0x1f6>
 7e6:	60 81       	ld	r22, Z
 7e8:	71 81       	ldd	r23, Z+1	; 0x01
 7ea:	07 2e       	mov	r0, r23
 7ec:	00 0c       	add	r0, r0
 7ee:	88 0b       	sbc	r24, r24
 7f0:	99 0b       	sbc	r25, r25
 7f2:	0e 5f       	subi	r16, 0xFE	; 254
 7f4:	1f 4f       	sbci	r17, 0xFF	; 255
 7f6:	f3 2d       	mov	r31, r3
 7f8:	ff 76       	andi	r31, 0x6F	; 111
 7fa:	3f 2e       	mov	r3, r31
 7fc:	97 ff       	sbrs	r25, 7
 7fe:	09 c0       	rjmp	.+18     	; 0x812 <vfprintf+0x212>
 800:	90 95       	com	r25
 802:	80 95       	com	r24
 804:	70 95       	com	r23
 806:	61 95       	neg	r22
 808:	7f 4f       	sbci	r23, 0xFF	; 255
 80a:	8f 4f       	sbci	r24, 0xFF	; 255
 80c:	9f 4f       	sbci	r25, 0xFF	; 255
 80e:	f0 68       	ori	r31, 0x80	; 128
 810:	3f 2e       	mov	r3, r31
 812:	2a e0       	ldi	r18, 0x0A	; 10
 814:	30 e0       	ldi	r19, 0x00	; 0
 816:	a3 01       	movw	r20, r6
 818:	0e 94 33 05 	call	0xa66	; 0xa66 <__ultoa_invert>
 81c:	88 2e       	mov	r8, r24
 81e:	86 18       	sub	r8, r6
 820:	45 c0       	rjmp	.+138    	; 0x8ac <vfprintf+0x2ac>
 822:	85 37       	cpi	r24, 0x75	; 117
 824:	31 f4       	brne	.+12     	; 0x832 <vfprintf+0x232>
 826:	23 2d       	mov	r18, r3
 828:	2f 7e       	andi	r18, 0xEF	; 239
 82a:	b2 2e       	mov	r11, r18
 82c:	2a e0       	ldi	r18, 0x0A	; 10
 82e:	30 e0       	ldi	r19, 0x00	; 0
 830:	25 c0       	rjmp	.+74     	; 0x87c <vfprintf+0x27c>
 832:	93 2d       	mov	r25, r3
 834:	99 7f       	andi	r25, 0xF9	; 249
 836:	b9 2e       	mov	r11, r25
 838:	8f 36       	cpi	r24, 0x6F	; 111
 83a:	c1 f0       	breq	.+48     	; 0x86c <vfprintf+0x26c>
 83c:	18 f4       	brcc	.+6      	; 0x844 <vfprintf+0x244>
 83e:	88 35       	cpi	r24, 0x58	; 88
 840:	79 f0       	breq	.+30     	; 0x860 <vfprintf+0x260>
 842:	b5 c0       	rjmp	.+362    	; 0x9ae <__stack+0xaf>
 844:	80 37       	cpi	r24, 0x70	; 112
 846:	19 f0       	breq	.+6      	; 0x84e <vfprintf+0x24e>
 848:	88 37       	cpi	r24, 0x78	; 120
 84a:	21 f0       	breq	.+8      	; 0x854 <vfprintf+0x254>
 84c:	b0 c0       	rjmp	.+352    	; 0x9ae <__stack+0xaf>
 84e:	e9 2f       	mov	r30, r25
 850:	e0 61       	ori	r30, 0x10	; 16
 852:	be 2e       	mov	r11, r30
 854:	b4 fe       	sbrs	r11, 4
 856:	0d c0       	rjmp	.+26     	; 0x872 <vfprintf+0x272>
 858:	fb 2d       	mov	r31, r11
 85a:	f4 60       	ori	r31, 0x04	; 4
 85c:	bf 2e       	mov	r11, r31
 85e:	09 c0       	rjmp	.+18     	; 0x872 <vfprintf+0x272>
 860:	34 fe       	sbrs	r3, 4
 862:	0a c0       	rjmp	.+20     	; 0x878 <vfprintf+0x278>
 864:	29 2f       	mov	r18, r25
 866:	26 60       	ori	r18, 0x06	; 6
 868:	b2 2e       	mov	r11, r18
 86a:	06 c0       	rjmp	.+12     	; 0x878 <vfprintf+0x278>
 86c:	28 e0       	ldi	r18, 0x08	; 8
 86e:	30 e0       	ldi	r19, 0x00	; 0
 870:	05 c0       	rjmp	.+10     	; 0x87c <vfprintf+0x27c>
 872:	20 e1       	ldi	r18, 0x10	; 16
 874:	30 e0       	ldi	r19, 0x00	; 0
 876:	02 c0       	rjmp	.+4      	; 0x87c <vfprintf+0x27c>
 878:	20 e1       	ldi	r18, 0x10	; 16
 87a:	32 e0       	ldi	r19, 0x02	; 2
 87c:	f8 01       	movw	r30, r16
 87e:	b7 fe       	sbrs	r11, 7
 880:	07 c0       	rjmp	.+14     	; 0x890 <vfprintf+0x290>
 882:	60 81       	ld	r22, Z
 884:	71 81       	ldd	r23, Z+1	; 0x01
 886:	82 81       	ldd	r24, Z+2	; 0x02
 888:	93 81       	ldd	r25, Z+3	; 0x03
 88a:	0c 5f       	subi	r16, 0xFC	; 252
 88c:	1f 4f       	sbci	r17, 0xFF	; 255
 88e:	06 c0       	rjmp	.+12     	; 0x89c <vfprintf+0x29c>
 890:	60 81       	ld	r22, Z
 892:	71 81       	ldd	r23, Z+1	; 0x01
 894:	80 e0       	ldi	r24, 0x00	; 0
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	0e 5f       	subi	r16, 0xFE	; 254
 89a:	1f 4f       	sbci	r17, 0xFF	; 255
 89c:	a3 01       	movw	r20, r6
 89e:	0e 94 33 05 	call	0xa66	; 0xa66 <__ultoa_invert>
 8a2:	88 2e       	mov	r8, r24
 8a4:	86 18       	sub	r8, r6
 8a6:	fb 2d       	mov	r31, r11
 8a8:	ff 77       	andi	r31, 0x7F	; 127
 8aa:	3f 2e       	mov	r3, r31
 8ac:	36 fe       	sbrs	r3, 6
 8ae:	0d c0       	rjmp	.+26     	; 0x8ca <vfprintf+0x2ca>
 8b0:	23 2d       	mov	r18, r3
 8b2:	2e 7f       	andi	r18, 0xFE	; 254
 8b4:	a2 2e       	mov	r10, r18
 8b6:	89 14       	cp	r8, r9
 8b8:	58 f4       	brcc	.+22     	; 0x8d0 <vfprintf+0x2d0>
 8ba:	34 fe       	sbrs	r3, 4
 8bc:	0b c0       	rjmp	.+22     	; 0x8d4 <vfprintf+0x2d4>
 8be:	32 fc       	sbrc	r3, 2
 8c0:	09 c0       	rjmp	.+18     	; 0x8d4 <vfprintf+0x2d4>
 8c2:	83 2d       	mov	r24, r3
 8c4:	8e 7e       	andi	r24, 0xEE	; 238
 8c6:	a8 2e       	mov	r10, r24
 8c8:	05 c0       	rjmp	.+10     	; 0x8d4 <vfprintf+0x2d4>
 8ca:	b8 2c       	mov	r11, r8
 8cc:	a3 2c       	mov	r10, r3
 8ce:	03 c0       	rjmp	.+6      	; 0x8d6 <vfprintf+0x2d6>
 8d0:	b8 2c       	mov	r11, r8
 8d2:	01 c0       	rjmp	.+2      	; 0x8d6 <vfprintf+0x2d6>
 8d4:	b9 2c       	mov	r11, r9
 8d6:	a4 fe       	sbrs	r10, 4
 8d8:	0f c0       	rjmp	.+30     	; 0x8f8 <vfprintf+0x2f8>
 8da:	fe 01       	movw	r30, r28
 8dc:	e8 0d       	add	r30, r8
 8de:	f1 1d       	adc	r31, r1
 8e0:	80 81       	ld	r24, Z
 8e2:	80 33       	cpi	r24, 0x30	; 48
 8e4:	21 f4       	brne	.+8      	; 0x8ee <vfprintf+0x2ee>
 8e6:	9a 2d       	mov	r25, r10
 8e8:	99 7e       	andi	r25, 0xE9	; 233
 8ea:	a9 2e       	mov	r10, r25
 8ec:	09 c0       	rjmp	.+18     	; 0x900 <__stack+0x1>
 8ee:	a2 fe       	sbrs	r10, 2
 8f0:	06 c0       	rjmp	.+12     	; 0x8fe <vfprintf+0x2fe>
 8f2:	b3 94       	inc	r11
 8f4:	b3 94       	inc	r11
 8f6:	04 c0       	rjmp	.+8      	; 0x900 <__stack+0x1>
 8f8:	8a 2d       	mov	r24, r10
 8fa:	86 78       	andi	r24, 0x86	; 134
 8fc:	09 f0       	breq	.+2      	; 0x900 <__stack+0x1>
 8fe:	b3 94       	inc	r11
 900:	a3 fc       	sbrc	r10, 3
 902:	11 c0       	rjmp	.+34     	; 0x926 <__stack+0x27>
 904:	a0 fe       	sbrs	r10, 0
 906:	06 c0       	rjmp	.+12     	; 0x914 <__stack+0x15>
 908:	b2 14       	cp	r11, r2
 90a:	88 f4       	brcc	.+34     	; 0x92e <__stack+0x2f>
 90c:	28 0c       	add	r2, r8
 90e:	92 2c       	mov	r9, r2
 910:	9b 18       	sub	r9, r11
 912:	0e c0       	rjmp	.+28     	; 0x930 <__stack+0x31>
 914:	b2 14       	cp	r11, r2
 916:	60 f4       	brcc	.+24     	; 0x930 <__stack+0x31>
 918:	b6 01       	movw	r22, r12
 91a:	80 e2       	ldi	r24, 0x20	; 32
 91c:	90 e0       	ldi	r25, 0x00	; 0
 91e:	0e 94 f7 04 	call	0x9ee	; 0x9ee <fputc>
 922:	b3 94       	inc	r11
 924:	f7 cf       	rjmp	.-18     	; 0x914 <__stack+0x15>
 926:	b2 14       	cp	r11, r2
 928:	18 f4       	brcc	.+6      	; 0x930 <__stack+0x31>
 92a:	2b 18       	sub	r2, r11
 92c:	02 c0       	rjmp	.+4      	; 0x932 <__stack+0x33>
 92e:	98 2c       	mov	r9, r8
 930:	21 2c       	mov	r2, r1
 932:	a4 fe       	sbrs	r10, 4
 934:	10 c0       	rjmp	.+32     	; 0x956 <__stack+0x57>
 936:	b6 01       	movw	r22, r12
 938:	80 e3       	ldi	r24, 0x30	; 48
 93a:	90 e0       	ldi	r25, 0x00	; 0
 93c:	0e 94 f7 04 	call	0x9ee	; 0x9ee <fputc>
 940:	a2 fe       	sbrs	r10, 2
 942:	17 c0       	rjmp	.+46     	; 0x972 <__stack+0x73>
 944:	a1 fc       	sbrc	r10, 1
 946:	03 c0       	rjmp	.+6      	; 0x94e <__stack+0x4f>
 948:	88 e7       	ldi	r24, 0x78	; 120
 94a:	90 e0       	ldi	r25, 0x00	; 0
 94c:	02 c0       	rjmp	.+4      	; 0x952 <__stack+0x53>
 94e:	88 e5       	ldi	r24, 0x58	; 88
 950:	90 e0       	ldi	r25, 0x00	; 0
 952:	b6 01       	movw	r22, r12
 954:	0c c0       	rjmp	.+24     	; 0x96e <__stack+0x6f>
 956:	8a 2d       	mov	r24, r10
 958:	86 78       	andi	r24, 0x86	; 134
 95a:	59 f0       	breq	.+22     	; 0x972 <__stack+0x73>
 95c:	a1 fe       	sbrs	r10, 1
 95e:	02 c0       	rjmp	.+4      	; 0x964 <__stack+0x65>
 960:	8b e2       	ldi	r24, 0x2B	; 43
 962:	01 c0       	rjmp	.+2      	; 0x966 <__stack+0x67>
 964:	80 e2       	ldi	r24, 0x20	; 32
 966:	a7 fc       	sbrc	r10, 7
 968:	8d e2       	ldi	r24, 0x2D	; 45
 96a:	b6 01       	movw	r22, r12
 96c:	90 e0       	ldi	r25, 0x00	; 0
 96e:	0e 94 f7 04 	call	0x9ee	; 0x9ee <fputc>
 972:	89 14       	cp	r8, r9
 974:	38 f4       	brcc	.+14     	; 0x984 <__stack+0x85>
 976:	b6 01       	movw	r22, r12
 978:	80 e3       	ldi	r24, 0x30	; 48
 97a:	90 e0       	ldi	r25, 0x00	; 0
 97c:	0e 94 f7 04 	call	0x9ee	; 0x9ee <fputc>
 980:	9a 94       	dec	r9
 982:	f7 cf       	rjmp	.-18     	; 0x972 <__stack+0x73>
 984:	8a 94       	dec	r8
 986:	f3 01       	movw	r30, r6
 988:	e8 0d       	add	r30, r8
 98a:	f1 1d       	adc	r31, r1
 98c:	80 81       	ld	r24, Z
 98e:	b6 01       	movw	r22, r12
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	0e 94 f7 04 	call	0x9ee	; 0x9ee <fputc>
 996:	81 10       	cpse	r8, r1
 998:	f5 cf       	rjmp	.-22     	; 0x984 <__stack+0x85>
 99a:	22 20       	and	r2, r2
 99c:	09 f4       	brne	.+2      	; 0x9a0 <__stack+0xa1>
 99e:	42 ce       	rjmp	.-892    	; 0x624 <vfprintf+0x24>
 9a0:	b6 01       	movw	r22, r12
 9a2:	80 e2       	ldi	r24, 0x20	; 32
 9a4:	90 e0       	ldi	r25, 0x00	; 0
 9a6:	0e 94 f7 04 	call	0x9ee	; 0x9ee <fputc>
 9aa:	2a 94       	dec	r2
 9ac:	f6 cf       	rjmp	.-20     	; 0x99a <__stack+0x9b>
 9ae:	f6 01       	movw	r30, r12
 9b0:	86 81       	ldd	r24, Z+6	; 0x06
 9b2:	97 81       	ldd	r25, Z+7	; 0x07
 9b4:	02 c0       	rjmp	.+4      	; 0x9ba <__stack+0xbb>
 9b6:	8f ef       	ldi	r24, 0xFF	; 255
 9b8:	9f ef       	ldi	r25, 0xFF	; 255
 9ba:	2b 96       	adiw	r28, 0x0b	; 11
 9bc:	e2 e1       	ldi	r30, 0x12	; 18
 9be:	0c 94 ad 05 	jmp	0xb5a	; 0xb5a <__epilogue_restores__>

000009c2 <strnlen_P>:
 9c2:	fc 01       	movw	r30, r24
 9c4:	05 90       	lpm	r0, Z+
 9c6:	61 50       	subi	r22, 0x01	; 1
 9c8:	70 40       	sbci	r23, 0x00	; 0
 9ca:	01 10       	cpse	r0, r1
 9cc:	d8 f7       	brcc	.-10     	; 0x9c4 <strnlen_P+0x2>
 9ce:	80 95       	com	r24
 9d0:	90 95       	com	r25
 9d2:	8e 0f       	add	r24, r30
 9d4:	9f 1f       	adc	r25, r31
 9d6:	08 95       	ret

000009d8 <strnlen>:
 9d8:	fc 01       	movw	r30, r24
 9da:	61 50       	subi	r22, 0x01	; 1
 9dc:	70 40       	sbci	r23, 0x00	; 0
 9de:	01 90       	ld	r0, Z+
 9e0:	01 10       	cpse	r0, r1
 9e2:	d8 f7       	brcc	.-10     	; 0x9da <strnlen+0x2>
 9e4:	80 95       	com	r24
 9e6:	90 95       	com	r25
 9e8:	8e 0f       	add	r24, r30
 9ea:	9f 1f       	adc	r25, r31
 9ec:	08 95       	ret

000009ee <fputc>:
 9ee:	0f 93       	push	r16
 9f0:	1f 93       	push	r17
 9f2:	cf 93       	push	r28
 9f4:	df 93       	push	r29
 9f6:	fb 01       	movw	r30, r22
 9f8:	23 81       	ldd	r18, Z+3	; 0x03
 9fa:	21 fd       	sbrc	r18, 1
 9fc:	03 c0       	rjmp	.+6      	; 0xa04 <fputc+0x16>
 9fe:	8f ef       	ldi	r24, 0xFF	; 255
 a00:	9f ef       	ldi	r25, 0xFF	; 255
 a02:	2c c0       	rjmp	.+88     	; 0xa5c <fputc+0x6e>
 a04:	22 ff       	sbrs	r18, 2
 a06:	16 c0       	rjmp	.+44     	; 0xa34 <fputc+0x46>
 a08:	46 81       	ldd	r20, Z+6	; 0x06
 a0a:	57 81       	ldd	r21, Z+7	; 0x07
 a0c:	24 81       	ldd	r18, Z+4	; 0x04
 a0e:	35 81       	ldd	r19, Z+5	; 0x05
 a10:	42 17       	cp	r20, r18
 a12:	53 07       	cpc	r21, r19
 a14:	44 f4       	brge	.+16     	; 0xa26 <fputc+0x38>
 a16:	a0 81       	ld	r26, Z
 a18:	b1 81       	ldd	r27, Z+1	; 0x01
 a1a:	9d 01       	movw	r18, r26
 a1c:	2f 5f       	subi	r18, 0xFF	; 255
 a1e:	3f 4f       	sbci	r19, 0xFF	; 255
 a20:	31 83       	std	Z+1, r19	; 0x01
 a22:	20 83       	st	Z, r18
 a24:	8c 93       	st	X, r24
 a26:	26 81       	ldd	r18, Z+6	; 0x06
 a28:	37 81       	ldd	r19, Z+7	; 0x07
 a2a:	2f 5f       	subi	r18, 0xFF	; 255
 a2c:	3f 4f       	sbci	r19, 0xFF	; 255
 a2e:	37 83       	std	Z+7, r19	; 0x07
 a30:	26 83       	std	Z+6, r18	; 0x06
 a32:	14 c0       	rjmp	.+40     	; 0xa5c <fputc+0x6e>
 a34:	8b 01       	movw	r16, r22
 a36:	ec 01       	movw	r28, r24
 a38:	fb 01       	movw	r30, r22
 a3a:	00 84       	ldd	r0, Z+8	; 0x08
 a3c:	f1 85       	ldd	r31, Z+9	; 0x09
 a3e:	e0 2d       	mov	r30, r0
 a40:	09 95       	icall
 a42:	89 2b       	or	r24, r25
 a44:	e1 f6       	brne	.-72     	; 0x9fe <fputc+0x10>
 a46:	d8 01       	movw	r26, r16
 a48:	16 96       	adiw	r26, 0x06	; 6
 a4a:	8d 91       	ld	r24, X+
 a4c:	9c 91       	ld	r25, X
 a4e:	17 97       	sbiw	r26, 0x07	; 7
 a50:	01 96       	adiw	r24, 0x01	; 1
 a52:	17 96       	adiw	r26, 0x07	; 7
 a54:	9c 93       	st	X, r25
 a56:	8e 93       	st	-X, r24
 a58:	16 97       	sbiw	r26, 0x06	; 6
 a5a:	ce 01       	movw	r24, r28
 a5c:	df 91       	pop	r29
 a5e:	cf 91       	pop	r28
 a60:	1f 91       	pop	r17
 a62:	0f 91       	pop	r16
 a64:	08 95       	ret

00000a66 <__ultoa_invert>:
 a66:	fa 01       	movw	r30, r20
 a68:	aa 27       	eor	r26, r26
 a6a:	28 30       	cpi	r18, 0x08	; 8
 a6c:	51 f1       	breq	.+84     	; 0xac2 <__ultoa_invert+0x5c>
 a6e:	20 31       	cpi	r18, 0x10	; 16
 a70:	81 f1       	breq	.+96     	; 0xad2 <__ultoa_invert+0x6c>
 a72:	e8 94       	clt
 a74:	6f 93       	push	r22
 a76:	6e 7f       	andi	r22, 0xFE	; 254
 a78:	6e 5f       	subi	r22, 0xFE	; 254
 a7a:	7f 4f       	sbci	r23, 0xFF	; 255
 a7c:	8f 4f       	sbci	r24, 0xFF	; 255
 a7e:	9f 4f       	sbci	r25, 0xFF	; 255
 a80:	af 4f       	sbci	r26, 0xFF	; 255
 a82:	b1 e0       	ldi	r27, 0x01	; 1
 a84:	3e d0       	rcall	.+124    	; 0xb02 <__ultoa_invert+0x9c>
 a86:	b4 e0       	ldi	r27, 0x04	; 4
 a88:	3c d0       	rcall	.+120    	; 0xb02 <__ultoa_invert+0x9c>
 a8a:	67 0f       	add	r22, r23
 a8c:	78 1f       	adc	r23, r24
 a8e:	89 1f       	adc	r24, r25
 a90:	9a 1f       	adc	r25, r26
 a92:	a1 1d       	adc	r26, r1
 a94:	68 0f       	add	r22, r24
 a96:	79 1f       	adc	r23, r25
 a98:	8a 1f       	adc	r24, r26
 a9a:	91 1d       	adc	r25, r1
 a9c:	a1 1d       	adc	r26, r1
 a9e:	6a 0f       	add	r22, r26
 aa0:	71 1d       	adc	r23, r1
 aa2:	81 1d       	adc	r24, r1
 aa4:	91 1d       	adc	r25, r1
 aa6:	a1 1d       	adc	r26, r1
 aa8:	20 d0       	rcall	.+64     	; 0xaea <__ultoa_invert+0x84>
 aaa:	09 f4       	brne	.+2      	; 0xaae <__ultoa_invert+0x48>
 aac:	68 94       	set
 aae:	3f 91       	pop	r19
 ab0:	2a e0       	ldi	r18, 0x0A	; 10
 ab2:	26 9f       	mul	r18, r22
 ab4:	11 24       	eor	r1, r1
 ab6:	30 19       	sub	r19, r0
 ab8:	30 5d       	subi	r19, 0xD0	; 208
 aba:	31 93       	st	Z+, r19
 abc:	de f6       	brtc	.-74     	; 0xa74 <__ultoa_invert+0xe>
 abe:	cf 01       	movw	r24, r30
 ac0:	08 95       	ret
 ac2:	46 2f       	mov	r20, r22
 ac4:	47 70       	andi	r20, 0x07	; 7
 ac6:	40 5d       	subi	r20, 0xD0	; 208
 ac8:	41 93       	st	Z+, r20
 aca:	b3 e0       	ldi	r27, 0x03	; 3
 acc:	0f d0       	rcall	.+30     	; 0xaec <__ultoa_invert+0x86>
 ace:	c9 f7       	brne	.-14     	; 0xac2 <__ultoa_invert+0x5c>
 ad0:	f6 cf       	rjmp	.-20     	; 0xabe <__ultoa_invert+0x58>
 ad2:	46 2f       	mov	r20, r22
 ad4:	4f 70       	andi	r20, 0x0F	; 15
 ad6:	40 5d       	subi	r20, 0xD0	; 208
 ad8:	4a 33       	cpi	r20, 0x3A	; 58
 ada:	18 f0       	brcs	.+6      	; 0xae2 <__ultoa_invert+0x7c>
 adc:	49 5d       	subi	r20, 0xD9	; 217
 ade:	31 fd       	sbrc	r19, 1
 ae0:	40 52       	subi	r20, 0x20	; 32
 ae2:	41 93       	st	Z+, r20
 ae4:	02 d0       	rcall	.+4      	; 0xaea <__ultoa_invert+0x84>
 ae6:	a9 f7       	brne	.-22     	; 0xad2 <__ultoa_invert+0x6c>
 ae8:	ea cf       	rjmp	.-44     	; 0xabe <__ultoa_invert+0x58>
 aea:	b4 e0       	ldi	r27, 0x04	; 4
 aec:	a6 95       	lsr	r26
 aee:	97 95       	ror	r25
 af0:	87 95       	ror	r24
 af2:	77 95       	ror	r23
 af4:	67 95       	ror	r22
 af6:	ba 95       	dec	r27
 af8:	c9 f7       	brne	.-14     	; 0xaec <__ultoa_invert+0x86>
 afa:	00 97       	sbiw	r24, 0x00	; 0
 afc:	61 05       	cpc	r22, r1
 afe:	71 05       	cpc	r23, r1
 b00:	08 95       	ret
 b02:	9b 01       	movw	r18, r22
 b04:	ac 01       	movw	r20, r24
 b06:	0a 2e       	mov	r0, r26
 b08:	06 94       	lsr	r0
 b0a:	57 95       	ror	r21
 b0c:	47 95       	ror	r20
 b0e:	37 95       	ror	r19
 b10:	27 95       	ror	r18
 b12:	ba 95       	dec	r27
 b14:	c9 f7       	brne	.-14     	; 0xb08 <__ultoa_invert+0xa2>
 b16:	62 0f       	add	r22, r18
 b18:	73 1f       	adc	r23, r19
 b1a:	84 1f       	adc	r24, r20
 b1c:	95 1f       	adc	r25, r21
 b1e:	a0 1d       	adc	r26, r0
 b20:	08 95       	ret

00000b22 <__prologue_saves__>:
 b22:	2f 92       	push	r2
 b24:	3f 92       	push	r3
 b26:	4f 92       	push	r4
 b28:	5f 92       	push	r5
 b2a:	6f 92       	push	r6
 b2c:	7f 92       	push	r7
 b2e:	8f 92       	push	r8
 b30:	9f 92       	push	r9
 b32:	af 92       	push	r10
 b34:	bf 92       	push	r11
 b36:	cf 92       	push	r12
 b38:	df 92       	push	r13
 b3a:	ef 92       	push	r14
 b3c:	ff 92       	push	r15
 b3e:	0f 93       	push	r16
 b40:	1f 93       	push	r17
 b42:	cf 93       	push	r28
 b44:	df 93       	push	r29
 b46:	cd b7       	in	r28, 0x3d	; 61
 b48:	de b7       	in	r29, 0x3e	; 62
 b4a:	ca 1b       	sub	r28, r26
 b4c:	db 0b       	sbc	r29, r27
 b4e:	0f b6       	in	r0, 0x3f	; 63
 b50:	f8 94       	cli
 b52:	de bf       	out	0x3e, r29	; 62
 b54:	0f be       	out	0x3f, r0	; 63
 b56:	cd bf       	out	0x3d, r28	; 61
 b58:	09 94       	ijmp

00000b5a <__epilogue_restores__>:
 b5a:	2a 88       	ldd	r2, Y+18	; 0x12
 b5c:	39 88       	ldd	r3, Y+17	; 0x11
 b5e:	48 88       	ldd	r4, Y+16	; 0x10
 b60:	5f 84       	ldd	r5, Y+15	; 0x0f
 b62:	6e 84       	ldd	r6, Y+14	; 0x0e
 b64:	7d 84       	ldd	r7, Y+13	; 0x0d
 b66:	8c 84       	ldd	r8, Y+12	; 0x0c
 b68:	9b 84       	ldd	r9, Y+11	; 0x0b
 b6a:	aa 84       	ldd	r10, Y+10	; 0x0a
 b6c:	b9 84       	ldd	r11, Y+9	; 0x09
 b6e:	c8 84       	ldd	r12, Y+8	; 0x08
 b70:	df 80       	ldd	r13, Y+7	; 0x07
 b72:	ee 80       	ldd	r14, Y+6	; 0x06
 b74:	fd 80       	ldd	r15, Y+5	; 0x05
 b76:	0c 81       	ldd	r16, Y+4	; 0x04
 b78:	1b 81       	ldd	r17, Y+3	; 0x03
 b7a:	aa 81       	ldd	r26, Y+2	; 0x02
 b7c:	b9 81       	ldd	r27, Y+1	; 0x01
 b7e:	ce 0f       	add	r28, r30
 b80:	d1 1d       	adc	r29, r1
 b82:	0f b6       	in	r0, 0x3f	; 63
 b84:	f8 94       	cli
 b86:	de bf       	out	0x3e, r29	; 62
 b88:	0f be       	out	0x3f, r0	; 63
 b8a:	cd bf       	out	0x3d, r28	; 61
 b8c:	ed 01       	movw	r28, r26
 b8e:	08 95       	ret

00000b90 <_exit>:
 b90:	f8 94       	cli

00000b92 <__stop_program>:
 b92:	ff cf       	rjmp	.-2      	; 0xb92 <__stop_program>
