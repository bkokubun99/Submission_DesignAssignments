
DesignAssignment_5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000176  00800100  000012ce  00001362  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000041  00800276  00800276  000014d8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014d8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001534  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00001574  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ca5  00000000  00000000  0000166c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000de7  00000000  00000000  00003311  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b27  00000000  00000000  000040f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002a0  00000000  00000000  00004c20  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006ec  00000000  00000000  00004ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009fb  00000000  00000000  000055ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00005fa7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
       4:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__vector_1>
       8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
      b4:	11 24       	eor	r1, r1
      b6:	1f be       	out	0x3f, r1	; 63
      b8:	cf ef       	ldi	r28, 0xFF	; 255
      ba:	d8 e0       	ldi	r29, 0x08	; 8
      bc:	de bf       	out	0x3e, r29	; 62
      be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
      c0:	12 e0       	ldi	r17, 0x02	; 2
      c2:	a0 e0       	ldi	r26, 0x00	; 0
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	ee ec       	ldi	r30, 0xCE	; 206
      c8:	f2 e1       	ldi	r31, 0x12	; 18
      ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
      cc:	05 90       	lpm	r0, Z+
      ce:	0d 92       	st	X+, r0
      d0:	a6 37       	cpi	r26, 0x76	; 118
      d2:	b1 07       	cpc	r27, r17
      d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
      d6:	22 e0       	ldi	r18, 0x02	; 2
      d8:	a6 e7       	ldi	r26, 0x76	; 118
      da:	b2 e0       	ldi	r27, 0x02	; 2
      dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
      de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
      e0:	a7 3b       	cpi	r26, 0xB7	; 183
      e2:	b2 07       	cpc	r27, r18
      e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
      e6:	0e 94 af 01 	call	0x35e	; 0x35e <main>
      ea:	0c 94 65 09 	jmp	0x12ca	; 0x12ca <_exit>

000000ee <__bad_interrupt>:
      ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <__vector_1>:
*							FUNCTION DEFINITIONS 							  *
******************************************************************************/

//Interrupt SUBROUTINE FOR IRQ PIN
ISR(INT0_vect)
{
      f2:	1f 92       	push	r1
      f4:	0f 92       	push	r0
      f6:	0f b6       	in	r0, 0x3f	; 63
      f8:	0f 92       	push	r0
      fa:	11 24       	eor	r1, r1
      fc:	8f 93       	push	r24
	message_received = true;
      fe:	81 e0       	ldi	r24, 0x01	; 1
     100:	80 93 77 02 	sts	0x0277, r24	; 0x800277 <message_received>
}
     104:	8f 91       	pop	r24
     106:	0f 90       	pop	r0
     108:	0f be       	out	0x3f, r0	; 63
     10a:	0f 90       	pop	r0
     10c:	1f 90       	pop	r1
     10e:	18 95       	reti

00000110 <adc_init>:

//FUNCTION TO INITIALIZE ADC
void adc_init(void)
{
	ADMUX =  (0<<REFS1) | //REFERENCE SELECTION BITS
     110:	84 e4       	ldi	r24, 0x44	; 68
     112:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(0<<ADLAR) | //ADC LEFT ADJUST RESULT
	(1<<MUX2)  | //ANALOG CHANNEL SELECTION BITS
	(0<<MUX1)  | //ADC0 (PC4) CHANNEL 4
	(0<<MUX0);
	
	ADCSRA = (1<<ADEN)  | //ADC ENABLE
     116:	85 e8       	ldi	r24, 0x85	; 133
     118:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     11c:	08 95       	ret

0000011e <USART_init>:
	(1<<ADPS0);
}

//FUNCTION TO INITIALIZE USART (RS-232) 
void USART_init(unsigned int ubrr){
	UBRR0H = (unsigned char)(ubrr >> 8);
     11e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
     122:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << TXEN0); 			//ENABLE TRANSMISSION 
     126:	88 e0       	ldi	r24, 0x08	; 8
     128:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); //5-bit characters
     12c:	86 e0       	ldi	r24, 0x06	; 6
     12e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     132:	08 95       	ret

00000134 <read_adc>:
}

//FUNCTION THAT READS ADC PINS
void read_adc(void)
{
     134:	bf 92       	push	r11
     136:	cf 92       	push	r12
     138:	df 92       	push	r13
     13a:	ef 92       	push	r14
     13c:	ff 92       	push	r15
     13e:	0f 93       	push	r16
     140:	1f 93       	push	r17
     142:	cf 93       	push	r28
     144:	df 93       	push	r29
	unsigned char i = 10;		   	 //Variable for sample amounts
	adc_value = 0;			       	 //Initialize adc_value
     146:	10 92 98 02 	sts	0x0298, r1	; 0x800298 <adc_value>
     14a:	10 92 99 02 	sts	0x0299, r1	; 0x800299 <adc_value+0x1>
     14e:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <adc_value+0x2>
     152:	10 92 9b 02 	sts	0x029B, r1	; 0x80029b <adc_value+0x3>
     156:	0f 2e       	mov	r0, r31
     158:	fa e0       	ldi	r31, 0x0A	; 10
     15a:	bf 2e       	mov	r11, r31
     15c:	f0 2d       	mov	r31, r0
	while(i--)
	{
		ADCSRA |= (1<<ADSC);	     //Enable Start Conversion
     15e:	ca e7       	ldi	r28, 0x7A	; 122
     160:	d0 e0       	ldi	r29, 0x00	; 0
		while(ADCSRA & (1<<ADSC));   //Wait until enable & start conversion
		adc_value += ADC;            //PC4 value added & stored into adc_value
     162:	08 e7       	ldi	r16, 0x78	; 120
     164:	10 e0       	ldi	r17, 0x00	; 0
{
	unsigned char i = 10;		   	 //Variable for sample amounts
	adc_value = 0;			       	 //Initialize adc_value
	while(i--)
	{
		ADCSRA |= (1<<ADSC);	     //Enable Start Conversion
     166:	88 81       	ld	r24, Y
     168:	80 64       	ori	r24, 0x40	; 64
     16a:	88 83       	st	Y, r24
		while(ADCSRA & (1<<ADSC));   //Wait until enable & start conversion
     16c:	88 81       	ld	r24, Y
     16e:	86 fd       	sbrc	r24, 6
     170:	fd cf       	rjmp	.-6      	; 0x16c <read_adc+0x38>
		adc_value += ADC;            //PC4 value added & stored into adc_value
     172:	f8 01       	movw	r30, r16
     174:	60 81       	ld	r22, Z
     176:	71 81       	ldd	r23, Z+1	; 0x01
     178:	c0 90 98 02 	lds	r12, 0x0298	; 0x800298 <adc_value>
     17c:	d0 90 99 02 	lds	r13, 0x0299	; 0x800299 <adc_value+0x1>
     180:	e0 90 9a 02 	lds	r14, 0x029A	; 0x80029a <adc_value+0x2>
     184:	f0 90 9b 02 	lds	r15, 0x029B	; 0x80029b <adc_value+0x3>
     188:	80 e0       	ldi	r24, 0x00	; 0
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	0e 94 92 05 	call	0xb24	; 0xb24 <__floatunsisf>
     190:	a7 01       	movw	r20, r14
     192:	96 01       	movw	r18, r12
     194:	0e 94 b4 04 	call	0x968	; 0x968 <__addsf3>
     198:	60 93 98 02 	sts	0x0298, r22	; 0x800298 <adc_value>
     19c:	70 93 99 02 	sts	0x0299, r23	; 0x800299 <adc_value+0x1>
     1a0:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <adc_value+0x2>
     1a4:	90 93 9b 02 	sts	0x029B, r25	; 0x80029b <adc_value+0x3>
     1a8:	ba 94       	dec	r11
//FUNCTION THAT READS ADC PINS
void read_adc(void)
{
	unsigned char i = 10;		   	 //Variable for sample amounts
	adc_value = 0;			       	 //Initialize adc_value
	while(i--)
     1aa:	b1 10       	cpse	r11, r1
     1ac:	dc cf       	rjmp	.-72     	; 0x166 <read_adc+0x32>
	{
		ADCSRA |= (1<<ADSC);	     //Enable Start Conversion
		while(ADCSRA & (1<<ADSC));   //Wait until enable & start conversion
		adc_value += ADC;            //PC4 value added & stored into adc_value
	}
	adc_value = adc_value/10;	     //Average of values
     1ae:	60 91 98 02 	lds	r22, 0x0298	; 0x800298 <adc_value>
     1b2:	70 91 99 02 	lds	r23, 0x0299	; 0x800299 <adc_value+0x1>
     1b6:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <adc_value+0x2>
     1ba:	90 91 9b 02 	lds	r25, 0x029B	; 0x80029b <adc_value+0x3>
     1be:	20 e0       	ldi	r18, 0x00	; 0
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e2       	ldi	r20, 0x20	; 32
     1c4:	51 e4       	ldi	r21, 0x41	; 65
     1c6:	0e 94 20 05 	call	0xa40	; 0xa40 <__divsf3>
     1ca:	60 93 98 02 	sts	0x0298, r22	; 0x800298 <adc_value>
     1ce:	70 93 99 02 	sts	0x0299, r23	; 0x800299 <adc_value+0x1>
     1d2:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <adc_value+0x2>
     1d6:	90 93 9b 02 	sts	0x029B, r25	; 0x80029b <adc_value+0x3>
}
     1da:	df 91       	pop	r29
     1dc:	cf 91       	pop	r28
     1de:	1f 91       	pop	r17
     1e0:	0f 91       	pop	r16
     1e2:	ff 90       	pop	r15
     1e4:	ef 90       	pop	r14
     1e6:	df 90       	pop	r13
     1e8:	cf 90       	pop	r12
     1ea:	bf 90       	pop	r11
     1ec:	08 95       	ret

000001ee <USART_tx_string>:


//FUNCTION THAT READS IN 1 CHAR AT A TIME 
void USART_tx_string(char*data)
{
     1ee:	cf 93       	push	r28
     1f0:	df 93       	push	r29
	//CONTROL ENTERS WHILE DATA REG NOT EMPTY
	while((*data!='\0'))
     1f2:	fc 01       	movw	r30, r24
     1f4:	20 81       	ld	r18, Z
     1f6:	22 23       	and	r18, r18
     1f8:	69 f0       	breq	.+26     	; 0x214 <USART_tx_string+0x26>
     1fa:	dc 01       	movw	r26, r24
     1fc:	11 96       	adiw	r26, 0x01	; 1
	{
		//WAIT FOR BUFFER REGISTER TO CLEAR
		while(!(UCSR0A & (1 << UDRE0)));
     1fe:	e0 ec       	ldi	r30, 0xC0	; 192
     200:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;			//REGESTER EQUALS DATA
     202:	c6 ec       	ldi	r28, 0xC6	; 198
     204:	d0 e0       	ldi	r29, 0x00	; 0
{
	//CONTROL ENTERS WHILE DATA REG NOT EMPTY
	while((*data!='\0'))
	{
		//WAIT FOR BUFFER REGISTER TO CLEAR
		while(!(UCSR0A & (1 << UDRE0)));
     206:	90 81       	ld	r25, Z
     208:	95 ff       	sbrs	r25, 5
     20a:	fd cf       	rjmp	.-6      	; 0x206 <USART_tx_string+0x18>
		UDR0 = *data;			//REGESTER EQUALS DATA
     20c:	28 83       	st	Y, r18

//FUNCTION THAT READS IN 1 CHAR AT A TIME 
void USART_tx_string(char*data)
{
	//CONTROL ENTERS WHILE DATA REG NOT EMPTY
	while((*data!='\0'))
     20e:	2d 91       	ld	r18, X+
     210:	21 11       	cpse	r18, r1
     212:	f9 cf       	rjmp	.-14     	; 0x206 <USART_tx_string+0x18>
		//WAIT FOR BUFFER REGISTER TO CLEAR
		while(!(UCSR0A & (1 << UDRE0)));
		UDR0 = *data;			//REGESTER EQUALS DATA
		data++;					//DATA MOVES POSITION
	}
}
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	08 95       	ret

0000021a <print_config>:

//FUNCTION TO PRINT DATA/CONFIGURATIONS TO TERMINAL 
void print_config(void)
{
     21a:	cf 93       	push	r28
     21c:	df 93       	push	r29
     21e:	1f 92       	push	r1
     220:	cd b7       	in	r28, 0x3d	; 61
     222:	de b7       	in	r29, 0x3e	; 62
	uint8_t data;
	printf("Startup successful\n\n nRF24L01+ configured as:\n");
     224:	8a e0       	ldi	r24, 0x0A	; 10
     226:	91 e0       	ldi	r25, 0x01	; 1
     228:	0e 94 3d 06 	call	0xc7a	; 0xc7a <puts>
	printf("-------------------------------------------\n");
     22c:	88 e3       	ldi	r24, 0x38	; 56
     22e:	91 e0       	ldi	r25, 0x01	; 1
     230:	0e 94 3d 06 	call	0xc7a	; 0xc7a <puts>
	nrf24_read(CONFIG,&data,1);
     234:	41 e0       	ldi	r20, 0x01	; 1
     236:	50 e0       	ldi	r21, 0x00	; 0
     238:	be 01       	movw	r22, r28
     23a:	6f 5f       	subi	r22, 0xFF	; 255
     23c:	7f 4f       	sbci	r23, 0xFF	; 255
     23e:	80 e0       	ldi	r24, 0x00	; 0
     240:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
	printf("CONFIG		0x%x\n",data);
     244:	89 81       	ldd	r24, Y+1	; 0x01
     246:	1f 92       	push	r1
     248:	8f 93       	push	r24
     24a:	84 e6       	ldi	r24, 0x64	; 100
     24c:	91 e0       	ldi	r25, 0x01	; 1
     24e:	9f 93       	push	r25
     250:	8f 93       	push	r24
     252:	0e 94 27 06 	call	0xc4e	; 0xc4e <printf>
	nrf24_read(EN_AA,&data,1);
     256:	41 e0       	ldi	r20, 0x01	; 1
     258:	50 e0       	ldi	r21, 0x00	; 0
     25a:	be 01       	movw	r22, r28
     25c:	6f 5f       	subi	r22, 0xFF	; 255
     25e:	7f 4f       	sbci	r23, 0xFF	; 255
     260:	81 e0       	ldi	r24, 0x01	; 1
     262:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
	printf("EN_AA			0x%x\n",data);
     266:	89 81       	ldd	r24, Y+1	; 0x01
     268:	1f 92       	push	r1
     26a:	8f 93       	push	r24
     26c:	82 e7       	ldi	r24, 0x72	; 114
     26e:	91 e0       	ldi	r25, 0x01	; 1
     270:	9f 93       	push	r25
     272:	8f 93       	push	r24
     274:	0e 94 27 06 	call	0xc4e	; 0xc4e <printf>
	nrf24_read(EN_RXADDR,&data,1);
     278:	41 e0       	ldi	r20, 0x01	; 1
     27a:	50 e0       	ldi	r21, 0x00	; 0
     27c:	be 01       	movw	r22, r28
     27e:	6f 5f       	subi	r22, 0xFF	; 255
     280:	7f 4f       	sbci	r23, 0xFF	; 255
     282:	82 e0       	ldi	r24, 0x02	; 2
     284:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
	printf("EN_RXADDR		0x%x\n",data);
     288:	89 81       	ldd	r24, Y+1	; 0x01
     28a:	1f 92       	push	r1
     28c:	8f 93       	push	r24
     28e:	80 e8       	ldi	r24, 0x80	; 128
     290:	91 e0       	ldi	r25, 0x01	; 1
     292:	9f 93       	push	r25
     294:	8f 93       	push	r24
     296:	0e 94 27 06 	call	0xc4e	; 0xc4e <printf>
	nrf24_read(SETUP_RETR,&data,1);
     29a:	41 e0       	ldi	r20, 0x01	; 1
     29c:	50 e0       	ldi	r21, 0x00	; 0
     29e:	be 01       	movw	r22, r28
     2a0:	6f 5f       	subi	r22, 0xFF	; 255
     2a2:	7f 4f       	sbci	r23, 0xFF	; 255
     2a4:	84 e0       	ldi	r24, 0x04	; 4
     2a6:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
	printf("SETUP_RETR		0x%x\n",data);
     2aa:	89 81       	ldd	r24, Y+1	; 0x01
     2ac:	1f 92       	push	r1
     2ae:	8f 93       	push	r24
     2b0:	81 e9       	ldi	r24, 0x91	; 145
     2b2:	91 e0       	ldi	r25, 0x01	; 1
     2b4:	9f 93       	push	r25
     2b6:	8f 93       	push	r24
     2b8:	0e 94 27 06 	call	0xc4e	; 0xc4e <printf>
	nrf24_read(RF_CH,&data,1);
     2bc:	41 e0       	ldi	r20, 0x01	; 1
     2be:	50 e0       	ldi	r21, 0x00	; 0
     2c0:	be 01       	movw	r22, r28
     2c2:	6f 5f       	subi	r22, 0xFF	; 255
     2c4:	7f 4f       	sbci	r23, 0xFF	; 255
     2c6:	85 e0       	ldi	r24, 0x05	; 5
     2c8:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
	printf("RF_CH			0x%x\n",data);
     2cc:	89 81       	ldd	r24, Y+1	; 0x01
     2ce:	1f 92       	push	r1
     2d0:	8f 93       	push	r24
     2d2:	83 ea       	ldi	r24, 0xA3	; 163
     2d4:	91 e0       	ldi	r25, 0x01	; 1
     2d6:	9f 93       	push	r25
     2d8:	8f 93       	push	r24
     2da:	0e 94 27 06 	call	0xc4e	; 0xc4e <printf>
	nrf24_read(RF_SETUP,&data,1);
     2de:	41 e0       	ldi	r20, 0x01	; 1
     2e0:	50 e0       	ldi	r21, 0x00	; 0
     2e2:	be 01       	movw	r22, r28
     2e4:	6f 5f       	subi	r22, 0xFF	; 255
     2e6:	7f 4f       	sbci	r23, 0xFF	; 255
     2e8:	86 e0       	ldi	r24, 0x06	; 6
     2ea:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
	printf("RF_SETUP		0x%x\n",data);
     2ee:	89 81       	ldd	r24, Y+1	; 0x01
     2f0:	1f 92       	push	r1
     2f2:	8f 93       	push	r24
     2f4:	81 eb       	ldi	r24, 0xB1	; 177
     2f6:	91 e0       	ldi	r25, 0x01	; 1
     2f8:	9f 93       	push	r25
     2fa:	8f 93       	push	r24
     2fc:	0e 94 27 06 	call	0xc4e	; 0xc4e <printf>
	nrf24_read(STATUS,&data,1);
     300:	41 e0       	ldi	r20, 0x01	; 1
     302:	50 e0       	ldi	r21, 0x00	; 0
     304:	be 01       	movw	r22, r28
     306:	6f 5f       	subi	r22, 0xFF	; 255
     308:	7f 4f       	sbci	r23, 0xFF	; 255
     30a:	87 e0       	ldi	r24, 0x07	; 7
     30c:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
	printf("STATUS		0x%x\n",data);
     310:	89 81       	ldd	r24, Y+1	; 0x01
     312:	1f 92       	push	r1
     314:	8f 93       	push	r24
     316:	81 ec       	ldi	r24, 0xC1	; 193
     318:	91 e0       	ldi	r25, 0x01	; 1
     31a:	9f 93       	push	r25
     31c:	8f 93       	push	r24
     31e:	0e 94 27 06 	call	0xc4e	; 0xc4e <printf>
	nrf24_read(FEATURE,&data,1);
     322:	41 e0       	ldi	r20, 0x01	; 1
     324:	50 e0       	ldi	r21, 0x00	; 0
     326:	be 01       	movw	r22, r28
     328:	6f 5f       	subi	r22, 0xFF	; 255
     32a:	7f 4f       	sbci	r23, 0xFF	; 255
     32c:	8d e1       	ldi	r24, 0x1D	; 29
     32e:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
	printf("FEATURE		0x%x\n",data);
     332:	89 81       	ldd	r24, Y+1	; 0x01
     334:	1f 92       	push	r1
     336:	8f 93       	push	r24
     338:	8f ec       	ldi	r24, 0xCF	; 207
     33a:	91 e0       	ldi	r25, 0x01	; 1
     33c:	9f 93       	push	r25
     33e:	8f 93       	push	r24
     340:	0e 94 27 06 	call	0xc4e	; 0xc4e <printf>
	printf("-------------------------------------------\n\n");
     344:	0f b6       	in	r0, 0x3f	; 63
     346:	f8 94       	cli
     348:	de bf       	out	0x3e, r29	; 62
     34a:	0f be       	out	0x3f, r0	; 63
     34c:	cd bf       	out	0x3d, r28	; 61
     34e:	8e ed       	ldi	r24, 0xDE	; 222
     350:	91 e0       	ldi	r25, 0x01	; 1
     352:	0e 94 3d 06 	call	0xc7a	; 0xc7a <puts>
}
     356:	0f 90       	pop	r0
     358:	df 91       	pop	r29
     35a:	cf 91       	pop	r28
     35c:	08 95       	ret

0000035e <main>:

/******************************************************************************
*							INT MAIN 										  *
******************************************************************************/
int main(void)
{
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
     362:	cd b7       	in	r28, 0x3d	; 61
     364:	de b7       	in	r29, 0x3e	; 62
     366:	a0 97       	sbiw	r28, 0x20	; 32
     368:	0f b6       	in	r0, 0x3f	; 63
     36a:	f8 94       	cli
     36c:	de bf       	out	0x3e, r29	; 62
     36e:	0f be       	out	0x3f, r0	; 63
     370:	cd bf       	out	0x3d, r28	; 61
	adc_init();							//INITIALIZE ADC 
     372:	0e 94 88 00 	call	0x110	; 0x110 <adc_init>
	USART_init(UBRR_9600);				//INITIALIZE USART
     376:	87 e6       	ldi	r24, 0x67	; 103
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	0e 94 8f 00 	call	0x11e	; 0x11e <USART_init>
	USART_tx_string("Hello there!\n");  //PRINT TO TERMINAL 
     37e:	8b e0       	ldi	r24, 0x0B	; 11
     380:	92 e0       	ldi	r25, 0x02	; 2
     382:	0e 94 f7 00 	call	0x1ee	; 0x1ee <USART_tx_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     386:	2f ef       	ldi	r18, 0xFF	; 255
     388:	89 e6       	ldi	r24, 0x69	; 105
     38a:	98 e1       	ldi	r25, 0x18	; 24
     38c:	21 50       	subi	r18, 0x01	; 1
     38e:	80 40       	sbci	r24, 0x00	; 0
     390:	90 40       	sbci	r25, 0x00	; 0
     392:	e1 f7       	brne	.-8      	; 0x38c <main+0x2e>
     394:	00 c0       	rjmp	.+0      	; 0x396 <main+0x38>
     396:	00 00       	nop
	_delay_ms(500);

	//Message To Send 
	char tx_message[32];				// Define string array
	strcpy(tx_message,"Hello World!");	// Copy string into array
     398:	8d e0       	ldi	r24, 0x0D	; 13
     39a:	e9 e1       	ldi	r30, 0x19	; 25
     39c:	f2 e0       	ldi	r31, 0x02	; 2
     39e:	de 01       	movw	r26, r28
     3a0:	11 96       	adiw	r26, 0x01	; 1
     3a2:	01 90       	ld	r0, Z+
     3a4:	0d 92       	st	X+, r0
     3a6:	8a 95       	dec	r24
     3a8:	e1 f7       	brne	.-8      	; 0x3a2 <main+0x44>
	
	USART_init();						//INITIALIZE USART 
     3aa:	0e 94 8f 00 	call	0x11e	; 0x11e <USART_init>
	nrf24_init();						//INITIALIZE nRF24L01
     3ae:	0e 94 79 02 	call	0x4f2	; 0x4f2 <nrf24_init>
	print_config();						//INITIALIZE PRINT 
     3b2:	0e 94 0d 01 	call	0x21a	; 0x21a <print_config>
	
	//WAIT FOR RECIEVE DATA
	nrf24_start_listening();
     3b6:	0e 94 9e 03 	call	0x73c	; 0x73c <nrf24_start_listening>
		//CHECK IF MESSAGE RECEIVED 
		if (message_received)
		{
			message_received = false;
			//PRINT MESSAGE 
			printf("Received Temperature: %s\n",nrf24_read_message());
     3ba:	0f 2e       	mov	r0, r31
     3bc:	f6 e2       	ldi	r31, 0x26	; 38
     3be:	cf 2e       	mov	r12, r31
     3c0:	f2 e0       	ldi	r31, 0x02	; 2
     3c2:	df 2e       	mov	r13, r31
     3c4:	f0 2d       	mov	r31, r0
			_delay_ms(500);
			//Send RESPONSE MESSAGE 
			status = nrf24_send_message(tx_message);
     3c6:	88 24       	eor	r8, r8
     3c8:	83 94       	inc	r8
			//CHECK STATUS/PRINT TEMPERATURE 
			if (status == true) printf("Transmitted Temperature");
     3ca:	0f 2e       	mov	r0, r31
     3cc:	f0 e4       	ldi	r31, 0x40	; 64
     3ce:	af 2e       	mov	r10, r31
     3d0:	f2 e0       	ldi	r31, 0x02	; 2
     3d2:	bf 2e       	mov	r11, r31
     3d4:	f0 2d       	mov	r31, r0
		}
		
		read_adc();								//READ ADC VALUE
		snprintf(ar, sizeof(ar),"%f\r\n",adc_value);	//PRINT
     3d6:	0f 2e       	mov	r0, r31
     3d8:	f8 e5       	ldi	r31, 0x58	; 88
     3da:	ef 2e       	mov	r14, r31
     3dc:	f2 e0       	ldi	r31, 0x02	; 2
     3de:	ff 2e       	mov	r15, r31
     3e0:	f0 2d       	mov	r31, r0
     3e2:	0f 2e       	mov	r0, r31
     3e4:	f4 e1       	ldi	r31, 0x14	; 20
     3e6:	9f 2e       	mov	r9, r31
     3e8:	f0 2d       	mov	r31, r0
     3ea:	0c e9       	ldi	r16, 0x9C	; 156
     3ec:	12 e0       	ldi	r17, 0x02	; 2
	nrf24_start_listening();
	
	while (1)
	{
		//CHECK IF MESSAGE RECEIVED 
		if (message_received)
     3ee:	80 91 77 02 	lds	r24, 0x0277	; 0x800277 <message_received>
     3f2:	88 23       	and	r24, r24
     3f4:	59 f1       	breq	.+86     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
		{
			message_received = false;
     3f6:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <message_received>
			//PRINT MESSAGE 
			printf("Received Temperature: %s\n",nrf24_read_message());
     3fa:	0e 94 66 04 	call	0x8cc	; 0x8cc <nrf24_read_message>
     3fe:	9f 93       	push	r25
     400:	8f 93       	push	r24
     402:	df 92       	push	r13
     404:	cf 92       	push	r12
     406:	0e 94 27 06 	call	0xc4e	; 0xc4e <printf>
     40a:	2f ef       	ldi	r18, 0xFF	; 255
     40c:	89 e6       	ldi	r24, 0x69	; 105
     40e:	98 e1       	ldi	r25, 0x18	; 24
     410:	21 50       	subi	r18, 0x01	; 1
     412:	80 40       	sbci	r24, 0x00	; 0
     414:	90 40       	sbci	r25, 0x00	; 0
     416:	e1 f7       	brne	.-8      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     418:	00 c0       	rjmp	.+0      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     41a:	00 00       	nop
			_delay_ms(500);
			//Send RESPONSE MESSAGE 
			status = nrf24_send_message(tx_message);
     41c:	ce 01       	movw	r24, r28
     41e:	01 96       	adiw	r24, 0x01	; 1
     420:	0e 94 a9 03 	call	0x752	; 0x752 <nrf24_send_message>
     424:	98 2d       	mov	r25, r8
     426:	0f 90       	pop	r0
     428:	0f 90       	pop	r0
     42a:	0f 90       	pop	r0
     42c:	0f 90       	pop	r0
     42e:	81 11       	cpse	r24, r1
     430:	01 c0       	rjmp	.+2      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	90 93 76 02 	sts	0x0276, r25	; 0x800276 <__data_end>
			//CHECK STATUS/PRINT TEMPERATURE 
			if (status == true) printf("Transmitted Temperature");
     438:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <__data_end>
     43c:	88 23       	and	r24, r24
     43e:	31 f0       	breq	.+12     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     440:	bf 92       	push	r11
     442:	af 92       	push	r10
     444:	0e 94 27 06 	call	0xc4e	; 0xc4e <printf>
     448:	0f 90       	pop	r0
     44a:	0f 90       	pop	r0
		}
		
		read_adc();								//READ ADC VALUE
     44c:	0e 94 9a 00 	call	0x134	; 0x134 <read_adc>
		snprintf(ar, sizeof(ar),"%f\r\n",adc_value);	//PRINT
     450:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <adc_value>
     454:	90 91 99 02 	lds	r25, 0x0299	; 0x800299 <adc_value+0x1>
     458:	a0 91 9a 02 	lds	r26, 0x029A	; 0x80029a <adc_value+0x2>
     45c:	b0 91 9b 02 	lds	r27, 0x029B	; 0x80029b <adc_value+0x3>
     460:	bf 93       	push	r27
     462:	af 93       	push	r26
     464:	9f 93       	push	r25
     466:	8f 93       	push	r24
     468:	ff 92       	push	r15
     46a:	ef 92       	push	r14
     46c:	1f 92       	push	r1
     46e:	9f 92       	push	r9
     470:	1f 93       	push	r17
     472:	0f 93       	push	r16
     474:	0e 94 6d 06 	call	0xcda	; 0xcda <snprintf>
		USART_tx_string(ar);
     478:	c8 01       	movw	r24, r16
     47a:	0e 94 f7 00 	call	0x1ee	; 0x1ee <USART_tx_string>
     47e:	2f ef       	ldi	r18, 0xFF	; 255
     480:	83 ed       	ldi	r24, 0xD3	; 211
     482:	90 e3       	ldi	r25, 0x30	; 48
     484:	21 50       	subi	r18, 0x01	; 1
     486:	80 40       	sbci	r24, 0x00	; 0
     488:	90 40       	sbci	r25, 0x00	; 0
     48a:	e1 f7       	brne	.-8      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
     48c:	00 c0       	rjmp	.+0      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     48e:	00 00       	nop
     490:	0f b6       	in	r0, 0x3f	; 63
     492:	f8 94       	cli
     494:	de bf       	out	0x3e, r29	; 62
     496:	0f be       	out	0x3f, r0	; 63
     498:	cd bf       	out	0x3d, r28	; 61
     49a:	a9 cf       	rjmp	.-174    	; 0x3ee <main+0x90>

0000049c <nrf24_send_spi>:
{
	uint8_t config_register;
	nrf24_read(FIFO_STATUS,&config_register,1);
	if (!(config_register & (1 << RX_EMPTY))) return 1;
	return 0;
}
     49c:	df 92       	push	r13
     49e:	ef 92       	push	r14
     4a0:	ff 92       	push	r15
     4a2:	0f 93       	push	r16
     4a4:	1f 93       	push	r17
     4a6:	cf 93       	push	r28
     4a8:	df 93       	push	r29
     4aa:	7b 01       	movw	r14, r22
     4ac:	8a 01       	movw	r16, r20
     4ae:	2a 98       	cbi	0x05, 2	; 5
     4b0:	0e 94 ad 04 	call	0x95a	; 0x95a <spi_exchange>
     4b4:	d8 2e       	mov	r13, r24
     4b6:	01 15       	cp	r16, r1
     4b8:	11 05       	cpc	r17, r1
     4ba:	51 f0       	breq	.+20     	; 0x4d0 <nrf24_send_spi+0x34>
     4bc:	e7 01       	movw	r28, r14
     4be:	0e 0d       	add	r16, r14
     4c0:	1f 1d       	adc	r17, r15
     4c2:	88 81       	ld	r24, Y
     4c4:	0e 94 ad 04 	call	0x95a	; 0x95a <spi_exchange>
     4c8:	89 93       	st	Y+, r24
     4ca:	c0 17       	cp	r28, r16
     4cc:	d1 07       	cpc	r29, r17
     4ce:	c9 f7       	brne	.-14     	; 0x4c2 <nrf24_send_spi+0x26>
     4d0:	2a 9a       	sbi	0x05, 2	; 5
     4d2:	8d 2d       	mov	r24, r13
     4d4:	df 91       	pop	r29
     4d6:	cf 91       	pop	r28
     4d8:	1f 91       	pop	r17
     4da:	0f 91       	pop	r16
     4dc:	ff 90       	pop	r15
     4de:	ef 90       	pop	r14
     4e0:	df 90       	pop	r13
     4e2:	08 95       	ret

000004e4 <nrf24_write>:
     4e4:	80 62       	ori	r24, 0x20	; 32
     4e6:	0e 94 4e 02 	call	0x49c	; 0x49c <nrf24_send_spi>
     4ea:	08 95       	ret

000004ec <nrf24_read>:
     4ec:	0e 94 4e 02 	call	0x49c	; 0x49c <nrf24_send_spi>
     4f0:	08 95       	ret

000004f2 <nrf24_init>:
     4f2:	0f 93       	push	r16
     4f4:	1f 93       	push	r17
     4f6:	cf 93       	push	r28
     4f8:	df 93       	push	r29
     4fa:	1f 92       	push	r1
     4fc:	cd b7       	in	r28, 0x3d	; 61
     4fe:	de b7       	in	r29, 0x3e	; 62
     500:	f8 94       	cli
     502:	e9 e6       	ldi	r30, 0x69	; 105
     504:	f0 e0       	ldi	r31, 0x00	; 0
     506:	80 81       	ld	r24, Z
     508:	82 60       	ori	r24, 0x02	; 2
     50a:	80 83       	st	Z, r24
     50c:	e8 9a       	sbi	0x1d, 0	; 29
     50e:	78 94       	sei
     510:	21 9a       	sbi	0x04, 1	; 4
     512:	22 9a       	sbi	0x04, 2	; 4
     514:	2a 9a       	sbi	0x05, 2	; 5
     516:	29 98       	cbi	0x05, 1	; 5
     518:	0e 94 9e 04 	call	0x93c	; 0x93c <spi_master_init>
     51c:	2f ef       	ldi	r18, 0xFF	; 255
     51e:	81 ee       	ldi	r24, 0xE1	; 225
     520:	94 e0       	ldi	r25, 0x04	; 4
     522:	21 50       	subi	r18, 0x01	; 1
     524:	80 40       	sbci	r24, 0x00	; 0
     526:	90 40       	sbci	r25, 0x00	; 0
     528:	e1 f7       	brne	.-8      	; 0x522 <nrf24_init+0x30>
     52a:	00 c0       	rjmp	.+0      	; 0x52c <nrf24_init+0x3a>
     52c:	00 00       	nop
     52e:	0f e3       	ldi	r16, 0x3F	; 63
     530:	00 93 b0 02 	sts	0x02B0, r16	; 0x8002b0 <data>
     534:	41 e0       	ldi	r20, 0x01	; 1
     536:	50 e0       	ldi	r21, 0x00	; 0
     538:	60 eb       	ldi	r22, 0xB0	; 176
     53a:	72 e0       	ldi	r23, 0x02	; 2
     53c:	80 e0       	ldi	r24, 0x00	; 0
     53e:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     542:	10 92 b0 02 	sts	0x02B0, r1	; 0x8002b0 <data>
     546:	41 e0       	ldi	r20, 0x01	; 1
     548:	50 e0       	ldi	r21, 0x00	; 0
     54a:	60 eb       	ldi	r22, 0xB0	; 176
     54c:	72 e0       	ldi	r23, 0x02	; 2
     54e:	81 e0       	ldi	r24, 0x01	; 1
     550:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     554:	80 ef       	ldi	r24, 0xF0	; 240
     556:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
     55a:	41 e0       	ldi	r20, 0x01	; 1
     55c:	50 e0       	ldi	r21, 0x00	; 0
     55e:	60 eb       	ldi	r22, 0xB0	; 176
     560:	72 e0       	ldi	r23, 0x02	; 2
     562:	84 e0       	ldi	r24, 0x04	; 4
     564:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     568:	10 92 b0 02 	sts	0x02B0, r1	; 0x8002b0 <data>
     56c:	41 e0       	ldi	r20, 0x01	; 1
     56e:	50 e0       	ldi	r21, 0x00	; 0
     570:	60 eb       	ldi	r22, 0xB0	; 176
     572:	72 e0       	ldi	r23, 0x02	; 2
     574:	82 e0       	ldi	r24, 0x02	; 2
     576:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     57a:	84 e7       	ldi	r24, 0x74	; 116
     57c:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
     580:	41 e0       	ldi	r20, 0x01	; 1
     582:	50 e0       	ldi	r21, 0x00	; 0
     584:	60 eb       	ldi	r22, 0xB0	; 176
     586:	72 e0       	ldi	r23, 0x02	; 2
     588:	85 e0       	ldi	r24, 0x05	; 5
     58a:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     58e:	8e e0       	ldi	r24, 0x0E	; 14
     590:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
     594:	41 e0       	ldi	r20, 0x01	; 1
     596:	50 e0       	ldi	r21, 0x00	; 0
     598:	60 eb       	ldi	r22, 0xB0	; 176
     59a:	72 e0       	ldi	r23, 0x02	; 2
     59c:	86 e0       	ldi	r24, 0x06	; 6
     59e:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     5a2:	10 e7       	ldi	r17, 0x70	; 112
     5a4:	10 93 b0 02 	sts	0x02B0, r17	; 0x8002b0 <data>
     5a8:	41 e0       	ldi	r20, 0x01	; 1
     5aa:	50 e0       	ldi	r21, 0x00	; 0
     5ac:	60 eb       	ldi	r22, 0xB0	; 176
     5ae:	72 e0       	ldi	r23, 0x02	; 2
     5b0:	87 e0       	ldi	r24, 0x07	; 7
     5b2:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     5b6:	00 93 b0 02 	sts	0x02B0, r16	; 0x8002b0 <data>
     5ba:	41 e0       	ldi	r20, 0x01	; 1
     5bc:	50 e0       	ldi	r21, 0x00	; 0
     5be:	60 eb       	ldi	r22, 0xB0	; 176
     5c0:	72 e0       	ldi	r23, 0x02	; 2
     5c2:	8c e1       	ldi	r24, 0x1C	; 28
     5c4:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     5c8:	84 e0       	ldi	r24, 0x04	; 4
     5ca:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
     5ce:	41 e0       	ldi	r20, 0x01	; 1
     5d0:	50 e0       	ldi	r21, 0x00	; 0
     5d2:	60 eb       	ldi	r22, 0xB0	; 176
     5d4:	72 e0       	ldi	r23, 0x02	; 2
     5d6:	8d e1       	ldi	r24, 0x1D	; 29
     5d8:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     5dc:	19 83       	std	Y+1, r17	; 0x01
     5de:	40 e0       	ldi	r20, 0x00	; 0
     5e0:	50 e0       	ldi	r21, 0x00	; 0
     5e2:	60 e0       	ldi	r22, 0x00	; 0
     5e4:	70 e0       	ldi	r23, 0x00	; 0
     5e6:	82 ee       	ldi	r24, 0xE2	; 226
     5e8:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     5ec:	40 e0       	ldi	r20, 0x00	; 0
     5ee:	50 e0       	ldi	r21, 0x00	; 0
     5f0:	60 e0       	ldi	r22, 0x00	; 0
     5f2:	70 e0       	ldi	r23, 0x00	; 0
     5f4:	81 ee       	ldi	r24, 0xE1	; 225
     5f6:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     5fa:	45 e0       	ldi	r20, 0x05	; 5
     5fc:	50 e0       	ldi	r21, 0x00	; 0
     5fe:	65 e0       	ldi	r22, 0x05	; 5
     600:	71 e0       	ldi	r23, 0x01	; 1
     602:	8a e0       	ldi	r24, 0x0A	; 10
     604:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     608:	45 e0       	ldi	r20, 0x05	; 5
     60a:	50 e0       	ldi	r21, 0x00	; 0
     60c:	60 e0       	ldi	r22, 0x00	; 0
     60e:	71 e0       	ldi	r23, 0x01	; 1
     610:	80 e1       	ldi	r24, 0x10	; 16
     612:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     616:	41 e0       	ldi	r20, 0x01	; 1
     618:	50 e0       	ldi	r21, 0x00	; 0
     61a:	be 01       	movw	r22, r28
     61c:	6f 5f       	subi	r22, 0xFF	; 255
     61e:	7f 4f       	sbci	r23, 0xFF	; 255
     620:	82 e0       	ldi	r24, 0x02	; 2
     622:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     626:	89 81       	ldd	r24, Y+1	; 0x01
     628:	81 60       	ori	r24, 0x01	; 1
     62a:	89 83       	std	Y+1, r24	; 0x01
     62c:	41 e0       	ldi	r20, 0x01	; 1
     62e:	50 e0       	ldi	r21, 0x00	; 0
     630:	be 01       	movw	r22, r28
     632:	6f 5f       	subi	r22, 0xFF	; 255
     634:	7f 4f       	sbci	r23, 0xFF	; 255
     636:	82 e0       	ldi	r24, 0x02	; 2
     638:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     63c:	0f 90       	pop	r0
     63e:	df 91       	pop	r29
     640:	cf 91       	pop	r28
     642:	1f 91       	pop	r17
     644:	0f 91       	pop	r16
     646:	08 95       	ret

00000648 <nrf24_state>:
     648:	1f 93       	push	r17
     64a:	cf 93       	push	r28
     64c:	df 93       	push	r29
     64e:	1f 92       	push	r1
     650:	cd b7       	in	r28, 0x3d	; 61
     652:	de b7       	in	r29, 0x3e	; 62
     654:	18 2f       	mov	r17, r24
     656:	41 e0       	ldi	r20, 0x01	; 1
     658:	50 e0       	ldi	r21, 0x00	; 0
     65a:	be 01       	movw	r22, r28
     65c:	6f 5f       	subi	r22, 0xFF	; 255
     65e:	7f 4f       	sbci	r23, 0xFF	; 255
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
     666:	13 30       	cpi	r17, 0x03	; 3
     668:	71 f1       	breq	.+92     	; 0x6c6 <nrf24_state+0x7e>
     66a:	28 f4       	brcc	.+10     	; 0x676 <nrf24_state+0x2e>
     66c:	11 30       	cpi	r17, 0x01	; 1
     66e:	59 f0       	breq	.+22     	; 0x686 <nrf24_state+0x3e>
     670:	12 30       	cpi	r17, 0x02	; 2
     672:	e9 f0       	breq	.+58     	; 0x6ae <nrf24_state+0x66>
     674:	5e c0       	rjmp	.+188    	; 0x732 <nrf24_state+0xea>
     676:	15 30       	cpi	r17, 0x05	; 5
     678:	09 f4       	brne	.+2      	; 0x67c <nrf24_state+0x34>
     67a:	47 c0       	rjmp	.+142    	; 0x70a <nrf24_state+0xc2>
     67c:	d0 f1       	brcs	.+116    	; 0x6f2 <nrf24_state+0xaa>
     67e:	16 30       	cpi	r17, 0x06	; 6
     680:	09 f4       	brne	.+2      	; 0x684 <nrf24_state+0x3c>
     682:	45 c0       	rjmp	.+138    	; 0x70e <nrf24_state+0xc6>
     684:	56 c0       	rjmp	.+172    	; 0x732 <nrf24_state+0xea>
     686:	89 81       	ldd	r24, Y+1	; 0x01
     688:	81 fd       	sbrc	r24, 1
     68a:	53 c0       	rjmp	.+166    	; 0x732 <nrf24_state+0xea>
     68c:	82 60       	ori	r24, 0x02	; 2
     68e:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
     692:	41 e0       	ldi	r20, 0x01	; 1
     694:	50 e0       	ldi	r21, 0x00	; 0
     696:	60 eb       	ldi	r22, 0xB0	; 176
     698:	72 e0       	ldi	r23, 0x02	; 2
     69a:	80 e0       	ldi	r24, 0x00	; 0
     69c:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     6a0:	8f e3       	ldi	r24, 0x3F	; 63
     6a2:	9f e1       	ldi	r25, 0x1F	; 31
     6a4:	01 97       	sbiw	r24, 0x01	; 1
     6a6:	f1 f7       	brne	.-4      	; 0x6a4 <nrf24_state+0x5c>
     6a8:	00 c0       	rjmp	.+0      	; 0x6aa <nrf24_state+0x62>
     6aa:	00 00       	nop
     6ac:	42 c0       	rjmp	.+132    	; 0x732 <nrf24_state+0xea>
     6ae:	89 81       	ldd	r24, Y+1	; 0x01
     6b0:	8d 7f       	andi	r24, 0xFD	; 253
     6b2:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
     6b6:	41 e0       	ldi	r20, 0x01	; 1
     6b8:	50 e0       	ldi	r21, 0x00	; 0
     6ba:	60 eb       	ldi	r22, 0xB0	; 176
     6bc:	72 e0       	ldi	r23, 0x02	; 2
     6be:	80 e0       	ldi	r24, 0x00	; 0
     6c0:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     6c4:	36 c0       	rjmp	.+108    	; 0x732 <nrf24_state+0xea>
     6c6:	89 81       	ldd	r24, Y+1	; 0x01
     6c8:	81 60       	ori	r24, 0x01	; 1
     6ca:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
     6ce:	41 e0       	ldi	r20, 0x01	; 1
     6d0:	50 e0       	ldi	r21, 0x00	; 0
     6d2:	60 eb       	ldi	r22, 0xB0	; 176
     6d4:	72 e0       	ldi	r23, 0x02	; 2
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     6dc:	80 e7       	ldi	r24, 0x70	; 112
     6de:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
     6e2:	41 e0       	ldi	r20, 0x01	; 1
     6e4:	50 e0       	ldi	r21, 0x00	; 0
     6e6:	60 eb       	ldi	r22, 0xB0	; 176
     6e8:	72 e0       	ldi	r23, 0x02	; 2
     6ea:	87 e0       	ldi	r24, 0x07	; 7
     6ec:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     6f0:	20 c0       	rjmp	.+64     	; 0x732 <nrf24_state+0xea>
     6f2:	89 81       	ldd	r24, Y+1	; 0x01
     6f4:	8e 7f       	andi	r24, 0xFE	; 254
     6f6:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
     6fa:	41 e0       	ldi	r20, 0x01	; 1
     6fc:	50 e0       	ldi	r21, 0x00	; 0
     6fe:	60 eb       	ldi	r22, 0xB0	; 176
     700:	72 e0       	ldi	r23, 0x02	; 2
     702:	80 e0       	ldi	r24, 0x00	; 0
     704:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     708:	14 c0       	rjmp	.+40     	; 0x732 <nrf24_state+0xea>
     70a:	29 98       	cbi	0x05, 1	; 5
     70c:	12 c0       	rjmp	.+36     	; 0x732 <nrf24_state+0xea>
     70e:	89 81       	ldd	r24, Y+1	; 0x01
     710:	8e 7f       	andi	r24, 0xFE	; 254
     712:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
     716:	41 e0       	ldi	r20, 0x01	; 1
     718:	50 e0       	ldi	r21, 0x00	; 0
     71a:	60 eb       	ldi	r22, 0xB0	; 176
     71c:	72 e0       	ldi	r23, 0x02	; 2
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     724:	29 9a       	sbi	0x05, 1	; 5
     726:	87 e5       	ldi	r24, 0x57	; 87
     728:	92 e0       	ldi	r25, 0x02	; 2
     72a:	01 97       	sbiw	r24, 0x01	; 1
     72c:	f1 f7       	brne	.-4      	; 0x72a <nrf24_state+0xe2>
     72e:	00 c0       	rjmp	.+0      	; 0x730 <nrf24_state+0xe8>
     730:	00 00       	nop
     732:	0f 90       	pop	r0
     734:	df 91       	pop	r29
     736:	cf 91       	pop	r28
     738:	1f 91       	pop	r17
     73a:	08 95       	ret

0000073c <nrf24_start_listening>:
     73c:	83 e0       	ldi	r24, 0x03	; 3
     73e:	0e 94 24 03 	call	0x648	; 0x648 <nrf24_state>
     742:	29 9a       	sbi	0x05, 1	; 5
     744:	87 e5       	ldi	r24, 0x57	; 87
     746:	92 e0       	ldi	r25, 0x02	; 2
     748:	01 97       	sbiw	r24, 0x01	; 1
     74a:	f1 f7       	brne	.-4      	; 0x748 <nrf24_start_listening+0xc>
     74c:	00 c0       	rjmp	.+0      	; 0x74e <nrf24_start_listening+0x12>
     74e:	00 00       	nop
     750:	08 95       	ret

00000752 <nrf24_send_message>:
     752:	cf 92       	push	r12
     754:	df 92       	push	r13
     756:	ef 92       	push	r14
     758:	ff 92       	push	r15
     75a:	0f 93       	push	r16
     75c:	1f 93       	push	r17
     75e:	cf 93       	push	r28
     760:	df 93       	push	r29
     762:	cd b7       	in	r28, 0x3d	; 61
     764:	de b7       	in	r29, 0x3e	; 62
     766:	a0 97       	sbiw	r28, 0x20	; 32
     768:	0f b6       	in	r0, 0x3f	; 63
     76a:	f8 94       	cli
     76c:	de bf       	out	0x3e, r29	; 62
     76e:	0f be       	out	0x3f, r0	; 63
     770:	cd bf       	out	0x3d, r28	; 61
     772:	6c 01       	movw	r12, r24
     774:	68 94       	set
     776:	ff 24       	eor	r15, r15
     778:	f5 f8       	bld	r15, 5
     77a:	ce 01       	movw	r24, r28
     77c:	01 96       	adiw	r24, 0x01	; 1
     77e:	fc 01       	movw	r30, r24
     780:	2f 2d       	mov	r18, r15
     782:	11 92       	st	Z+, r1
     784:	2a 95       	dec	r18
     786:	e9 f7       	brne	.-6      	; 0x782 <nrf24_send_message+0x30>
     788:	b6 01       	movw	r22, r12
     78a:	0e 94 20 06 	call	0xc40	; 0xc40 <strcpy>
     78e:	f6 01       	movw	r30, r12
     790:	01 90       	ld	r0, Z+
     792:	00 20       	and	r0, r0
     794:	e9 f7       	brne	.-6      	; 0x790 <nrf24_send_message+0x3e>
     796:	31 97       	sbiw	r30, 0x01	; 1
     798:	8f 01       	movw	r16, r30
     79a:	0c 19       	sub	r16, r12
     79c:	1d 09       	sbc	r17, r13
     79e:	84 e0       	ldi	r24, 0x04	; 4
     7a0:	0e 94 24 03 	call	0x648	; 0x648 <nrf24_state>
     7a4:	40 e0       	ldi	r20, 0x00	; 0
     7a6:	50 e0       	ldi	r21, 0x00	; 0
     7a8:	60 e0       	ldi	r22, 0x00	; 0
     7aa:	70 e0       	ldi	r23, 0x00	; 0
     7ac:	82 ee       	ldi	r24, 0xE2	; 226
     7ae:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     7b2:	40 e0       	ldi	r20, 0x00	; 0
     7b4:	50 e0       	ldi	r21, 0x00	; 0
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	70 e0       	ldi	r23, 0x00	; 0
     7ba:	81 ee       	ldi	r24, 0xE1	; 225
     7bc:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     7c0:	f0 92 b0 02 	sts	0x02B0, r15	; 0x8002b0 <data>
     7c4:	41 e0       	ldi	r20, 0x01	; 1
     7c6:	50 e0       	ldi	r21, 0x00	; 0
     7c8:	60 eb       	ldi	r22, 0xB0	; 176
     7ca:	72 e0       	ldi	r23, 0x02	; 2
     7cc:	87 e0       	ldi	r24, 0x07	; 7
     7ce:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     7d2:	41 e0       	ldi	r20, 0x01	; 1
     7d4:	50 e0       	ldi	r21, 0x00	; 0
     7d6:	60 eb       	ldi	r22, 0xB0	; 176
     7d8:	72 e0       	ldi	r23, 0x02	; 2
     7da:	80 e0       	ldi	r24, 0x00	; 0
     7dc:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
     7e0:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <data>
     7e4:	80 64       	ori	r24, 0x40	; 64
     7e6:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
     7ea:	41 e0       	ldi	r20, 0x01	; 1
     7ec:	50 e0       	ldi	r21, 0x00	; 0
     7ee:	60 eb       	ldi	r22, 0xB0	; 176
     7f0:	72 e0       	ldi	r23, 0x02	; 2
     7f2:	80 e0       	ldi	r24, 0x00	; 0
     7f4:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     7f8:	2a 98       	cbi	0x05, 2	; 5
     7fa:	80 eb       	ldi	r24, 0xB0	; 176
     7fc:	0e 94 a8 04 	call	0x950	; 0x950 <spi_send>
     800:	ef ef       	ldi	r30, 0xFF	; 255
     802:	e0 0f       	add	r30, r16
     804:	00 23       	and	r16, r16
     806:	81 f0       	breq	.+32     	; 0x828 <nrf24_send_message+0xd6>
     808:	86 01       	movw	r16, r12
     80a:	ee 2e       	mov	r14, r30
     80c:	f1 2c       	mov	r15, r1
     80e:	f7 01       	movw	r30, r14
     810:	31 96       	adiw	r30, 0x01	; 1
     812:	76 01       	movw	r14, r12
     814:	ee 0e       	add	r14, r30
     816:	ff 1e       	adc	r15, r31
     818:	f8 01       	movw	r30, r16
     81a:	81 91       	ld	r24, Z+
     81c:	8f 01       	movw	r16, r30
     81e:	0e 94 a8 04 	call	0x950	; 0x950 <spi_send>
     822:	0e 15       	cp	r16, r14
     824:	1f 05       	cpc	r17, r15
     826:	c1 f7       	brne	.-16     	; 0x818 <nrf24_send_message+0xc6>
     828:	80 e0       	ldi	r24, 0x00	; 0
     82a:	0e 94 a8 04 	call	0x950	; 0x950 <spi_send>
     82e:	2a 9a       	sbi	0x05, 2	; 5
     830:	29 9a       	sbi	0x05, 1	; 5
     832:	f0 e5       	ldi	r31, 0x50	; 80
     834:	fa 95       	dec	r31
     836:	f1 f7       	brne	.-4      	; 0x834 <nrf24_send_message+0xe2>
     838:	29 98       	cbi	0x05, 1	; 5
     83a:	41 e0       	ldi	r20, 0x01	; 1
     83c:	50 e0       	ldi	r21, 0x00	; 0
     83e:	60 eb       	ldi	r22, 0xB0	; 176
     840:	72 e0       	ldi	r23, 0x02	; 2
     842:	87 e0       	ldi	r24, 0x07	; 7
     844:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
     848:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <data>
     84c:	85 fd       	sbrc	r24, 5
     84e:	0b c0       	rjmp	.+22     	; 0x866 <nrf24_send_message+0x114>
     850:	41 e0       	ldi	r20, 0x01	; 1
     852:	50 e0       	ldi	r21, 0x00	; 0
     854:	60 eb       	ldi	r22, 0xB0	; 176
     856:	72 e0       	ldi	r23, 0x02	; 2
     858:	87 e0       	ldi	r24, 0x07	; 7
     85a:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
     85e:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <data>
     862:	85 ff       	sbrs	r24, 5
     864:	f5 cf       	rjmp	.-22     	; 0x850 <nrf24_send_message+0xfe>
     866:	ce 01       	movw	r24, r28
     868:	01 96       	adiw	r24, 0x01	; 1
     86a:	9f 93       	push	r25
     86c:	8f 93       	push	r24
     86e:	8d e5       	ldi	r24, 0x5D	; 93
     870:	92 e0       	ldi	r25, 0x02	; 2
     872:	9f 93       	push	r25
     874:	8f 93       	push	r24
     876:	0e 94 27 06 	call	0xc4e	; 0xc4e <printf>
     87a:	41 e0       	ldi	r20, 0x01	; 1
     87c:	50 e0       	ldi	r21, 0x00	; 0
     87e:	60 eb       	ldi	r22, 0xB0	; 176
     880:	72 e0       	ldi	r23, 0x02	; 2
     882:	80 e0       	ldi	r24, 0x00	; 0
     884:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
     888:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <data>
     88c:	8f 7b       	andi	r24, 0xBF	; 191
     88e:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
     892:	41 e0       	ldi	r20, 0x01	; 1
     894:	50 e0       	ldi	r21, 0x00	; 0
     896:	60 eb       	ldi	r22, 0xB0	; 176
     898:	72 e0       	ldi	r23, 0x02	; 2
     89a:	80 e0       	ldi	r24, 0x00	; 0
     89c:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
     8a0:	0e 94 9e 03 	call	0x73c	; 0x73c <nrf24_start_listening>
     8a4:	0f 90       	pop	r0
     8a6:	0f 90       	pop	r0
     8a8:	0f 90       	pop	r0
     8aa:	0f 90       	pop	r0
     8ac:	81 e0       	ldi	r24, 0x01	; 1
     8ae:	a0 96       	adiw	r28, 0x20	; 32
     8b0:	0f b6       	in	r0, 0x3f	; 63
     8b2:	f8 94       	cli
     8b4:	de bf       	out	0x3e, r29	; 62
     8b6:	0f be       	out	0x3f, r0	; 63
     8b8:	cd bf       	out	0x3d, r28	; 61
     8ba:	df 91       	pop	r29
     8bc:	cf 91       	pop	r28
     8be:	1f 91       	pop	r17
     8c0:	0f 91       	pop	r16
     8c2:	ff 90       	pop	r15
     8c4:	ef 90       	pop	r14
     8c6:	df 90       	pop	r13
     8c8:	cf 90       	pop	r12
     8ca:	08 95       	ret

000008cc <nrf24_read_message>:

const char * nrf24_read_message(void)
{
	// Message placeholder
	static char rx_message[32];
	memset(rx_message,0,32);
     8cc:	80 e2       	ldi	r24, 0x20	; 32
     8ce:	e8 e7       	ldi	r30, 0x78	; 120
     8d0:	f2 e0       	ldi	r31, 0x02	; 2
     8d2:	df 01       	movw	r26, r30
     8d4:	1d 92       	st	X+, r1
     8d6:	8a 95       	dec	r24
     8d8:	e9 f7       	brne	.-6      	; 0x8d4 <nrf24_read_message+0x8>
	
	// Write ACK message
	if (AUTO_ACK) nrf24_write_ack();
	
	// Get length of incoming message
	nrf24_read(R_RX_PL_WID,&data,1);
     8da:	41 e0       	ldi	r20, 0x01	; 1
     8dc:	50 e0       	ldi	r21, 0x00	; 0
     8de:	60 eb       	ldi	r22, 0xB0	; 176
     8e0:	72 e0       	ldi	r23, 0x02	; 2
     8e2:	80 e6       	ldi	r24, 0x60	; 96
     8e4:	0e 94 76 02 	call	0x4ec	; 0x4ec <nrf24_read>
	
	// Read message
	if (data > 0) nrf24_send_spi(R_RX_PAYLOAD,&rx_message,data+1);
     8e8:	40 91 b0 02 	lds	r20, 0x02B0	; 0x8002b0 <data>
     8ec:	44 23       	and	r20, r20
     8ee:	41 f0       	breq	.+16     	; 0x900 <__stack+0x1>
     8f0:	50 e0       	ldi	r21, 0x00	; 0
     8f2:	4f 5f       	subi	r20, 0xFF	; 255
     8f4:	5f 4f       	sbci	r21, 0xFF	; 255
     8f6:	68 e7       	ldi	r22, 0x78	; 120
     8f8:	72 e0       	ldi	r23, 0x02	; 2
     8fa:	81 e6       	ldi	r24, 0x61	; 97
     8fc:	0e 94 4e 02 	call	0x49c	; 0x49c <nrf24_send_spi>

	// Check if there is message in array
	if (strlen(rx_message) > 0)
     900:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <rx_message.2167>
     904:	88 23       	and	r24, r24
     906:	69 f0       	breq	.+26     	; 0x922 <__stack+0x23>
	{
		// Clear RX interrupt
		data = (1 << RX_DR);
     908:	80 e4       	ldi	r24, 0x40	; 64
     90a:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
		nrf24_write(STATUS,&data,1);
     90e:	41 e0       	ldi	r20, 0x01	; 1
     910:	50 e0       	ldi	r21, 0x00	; 0
     912:	60 eb       	ldi	r22, 0xB0	; 176
     914:	72 e0       	ldi	r23, 0x02	; 2
     916:	87 e0       	ldi	r24, 0x07	; 7
     918:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
		
		return rx_message;
     91c:	88 e7       	ldi	r24, 0x78	; 120
     91e:	92 e0       	ldi	r25, 0x02	; 2
     920:	08 95       	ret
	}
	
	// Clear RX interrupt
	data = (1 << RX_DR);
     922:	80 e4       	ldi	r24, 0x40	; 64
     924:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <data>
	nrf24_write(STATUS,&data,1);
     928:	41 e0       	ldi	r20, 0x01	; 1
     92a:	50 e0       	ldi	r21, 0x00	; 0
     92c:	60 eb       	ldi	r22, 0xB0	; 176
     92e:	72 e0       	ldi	r23, 0x02	; 2
     930:	87 e0       	ldi	r24, 0x07	; 7
     932:	0e 94 72 02 	call	0x4e4	; 0x4e4 <nrf24_write>
	
	return "failed";
     936:	8f e6       	ldi	r24, 0x6F	; 111
     938:	92 e0       	ldi	r25, 0x02	; 2
}
     93a:	08 95       	ret

0000093c <spi_master_init>:
	loop_until_bit_is_set(SPSR0, SPIF);
}

void spi_bulk_exchange( uint8_t *send_buffer, uint8_t *receive_buffer, uint8_t count )
{
	while ( count-- ) {
     93c:	24 98       	cbi	0x04, 4	; 4
     93e:	84 b1       	in	r24, 0x04	; 4
     940:	88 62       	ori	r24, 0x28	; 40
     942:	84 b9       	out	0x04, r24	; 4
     944:	80 e5       	ldi	r24, 0x50	; 80
     946:	8c bd       	out	0x2c, r24	; 44
     948:	8d b5       	in	r24, 0x2d	; 45
     94a:	81 60       	ori	r24, 0x01	; 1
     94c:	8d bd       	out	0x2d, r24	; 45
     94e:	08 95       	ret

00000950 <spi_send>:
     950:	8e bd       	out	0x2e, r24	; 46
     952:	0d b4       	in	r0, 0x2d	; 45
     954:	07 fe       	sbrs	r0, 7
     956:	fd cf       	rjmp	.-6      	; 0x952 <spi_send+0x2>
     958:	08 95       	ret

0000095a <spi_exchange>:
	}
}

uint8_t spi_exchange( uint8_t send_data )
{
	SPDR0 = send_data;
     95a:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR0, SPIF);
     95c:	0d b4       	in	r0, 0x2d	; 45
     95e:	07 fe       	sbrs	r0, 7
     960:	fd cf       	rjmp	.-6      	; 0x95c <spi_exchange+0x2>
	return SPDR0;
     962:	8e b5       	in	r24, 0x2e	; 46
}
     964:	08 95       	ret

00000966 <__subsf3>:
     966:	50 58       	subi	r21, 0x80	; 128

00000968 <__addsf3>:
     968:	bb 27       	eor	r27, r27
     96a:	aa 27       	eor	r26, r26
     96c:	0e 94 cb 04 	call	0x996	; 0x996 <__addsf3x>
     970:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <__fp_round>
     974:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__fp_pscA>
     978:	38 f0       	brcs	.+14     	; 0x988 <__addsf3+0x20>
     97a:	0e 94 df 05 	call	0xbbe	; 0xbbe <__fp_pscB>
     97e:	20 f0       	brcs	.+8      	; 0x988 <__addsf3+0x20>
     980:	39 f4       	brne	.+14     	; 0x990 <__addsf3+0x28>
     982:	9f 3f       	cpi	r25, 0xFF	; 255
     984:	19 f4       	brne	.+6      	; 0x98c <__addsf3+0x24>
     986:	26 f4       	brtc	.+8      	; 0x990 <__addsf3+0x28>
     988:	0c 94 d5 05 	jmp	0xbaa	; 0xbaa <__fp_nan>
     98c:	0e f4       	brtc	.+2      	; 0x990 <__addsf3+0x28>
     98e:	e0 95       	com	r30
     990:	e7 fb       	bst	r30, 7
     992:	0c 94 cf 05 	jmp	0xb9e	; 0xb9e <__fp_inf>

00000996 <__addsf3x>:
     996:	e9 2f       	mov	r30, r25
     998:	0e 94 f7 05 	call	0xbee	; 0xbee <__fp_split3>
     99c:	58 f3       	brcs	.-42     	; 0x974 <__addsf3+0xc>
     99e:	ba 17       	cp	r27, r26
     9a0:	62 07       	cpc	r22, r18
     9a2:	73 07       	cpc	r23, r19
     9a4:	84 07       	cpc	r24, r20
     9a6:	95 07       	cpc	r25, r21
     9a8:	20 f0       	brcs	.+8      	; 0x9b2 <__addsf3x+0x1c>
     9aa:	79 f4       	brne	.+30     	; 0x9ca <__addsf3x+0x34>
     9ac:	a6 f5       	brtc	.+104    	; 0xa16 <__addsf3x+0x80>
     9ae:	0c 94 19 06 	jmp	0xc32	; 0xc32 <__fp_zero>
     9b2:	0e f4       	brtc	.+2      	; 0x9b6 <__addsf3x+0x20>
     9b4:	e0 95       	com	r30
     9b6:	0b 2e       	mov	r0, r27
     9b8:	ba 2f       	mov	r27, r26
     9ba:	a0 2d       	mov	r26, r0
     9bc:	0b 01       	movw	r0, r22
     9be:	b9 01       	movw	r22, r18
     9c0:	90 01       	movw	r18, r0
     9c2:	0c 01       	movw	r0, r24
     9c4:	ca 01       	movw	r24, r20
     9c6:	a0 01       	movw	r20, r0
     9c8:	11 24       	eor	r1, r1
     9ca:	ff 27       	eor	r31, r31
     9cc:	59 1b       	sub	r21, r25
     9ce:	99 f0       	breq	.+38     	; 0x9f6 <__addsf3x+0x60>
     9d0:	59 3f       	cpi	r21, 0xF9	; 249
     9d2:	50 f4       	brcc	.+20     	; 0x9e8 <__addsf3x+0x52>
     9d4:	50 3e       	cpi	r21, 0xE0	; 224
     9d6:	68 f1       	brcs	.+90     	; 0xa32 <__addsf3x+0x9c>
     9d8:	1a 16       	cp	r1, r26
     9da:	f0 40       	sbci	r31, 0x00	; 0
     9dc:	a2 2f       	mov	r26, r18
     9de:	23 2f       	mov	r18, r19
     9e0:	34 2f       	mov	r19, r20
     9e2:	44 27       	eor	r20, r20
     9e4:	58 5f       	subi	r21, 0xF8	; 248
     9e6:	f3 cf       	rjmp	.-26     	; 0x9ce <__addsf3x+0x38>
     9e8:	46 95       	lsr	r20
     9ea:	37 95       	ror	r19
     9ec:	27 95       	ror	r18
     9ee:	a7 95       	ror	r26
     9f0:	f0 40       	sbci	r31, 0x00	; 0
     9f2:	53 95       	inc	r21
     9f4:	c9 f7       	brne	.-14     	; 0x9e8 <__addsf3x+0x52>
     9f6:	7e f4       	brtc	.+30     	; 0xa16 <__addsf3x+0x80>
     9f8:	1f 16       	cp	r1, r31
     9fa:	ba 0b       	sbc	r27, r26
     9fc:	62 0b       	sbc	r22, r18
     9fe:	73 0b       	sbc	r23, r19
     a00:	84 0b       	sbc	r24, r20
     a02:	ba f0       	brmi	.+46     	; 0xa32 <__addsf3x+0x9c>
     a04:	91 50       	subi	r25, 0x01	; 1
     a06:	a1 f0       	breq	.+40     	; 0xa30 <__addsf3x+0x9a>
     a08:	ff 0f       	add	r31, r31
     a0a:	bb 1f       	adc	r27, r27
     a0c:	66 1f       	adc	r22, r22
     a0e:	77 1f       	adc	r23, r23
     a10:	88 1f       	adc	r24, r24
     a12:	c2 f7       	brpl	.-16     	; 0xa04 <__addsf3x+0x6e>
     a14:	0e c0       	rjmp	.+28     	; 0xa32 <__addsf3x+0x9c>
     a16:	ba 0f       	add	r27, r26
     a18:	62 1f       	adc	r22, r18
     a1a:	73 1f       	adc	r23, r19
     a1c:	84 1f       	adc	r24, r20
     a1e:	48 f4       	brcc	.+18     	; 0xa32 <__addsf3x+0x9c>
     a20:	87 95       	ror	r24
     a22:	77 95       	ror	r23
     a24:	67 95       	ror	r22
     a26:	b7 95       	ror	r27
     a28:	f7 95       	ror	r31
     a2a:	9e 3f       	cpi	r25, 0xFE	; 254
     a2c:	08 f0       	brcs	.+2      	; 0xa30 <__addsf3x+0x9a>
     a2e:	b0 cf       	rjmp	.-160    	; 0x990 <__addsf3+0x28>
     a30:	93 95       	inc	r25
     a32:	88 0f       	add	r24, r24
     a34:	08 f0       	brcs	.+2      	; 0xa38 <__addsf3x+0xa2>
     a36:	99 27       	eor	r25, r25
     a38:	ee 0f       	add	r30, r30
     a3a:	97 95       	ror	r25
     a3c:	87 95       	ror	r24
     a3e:	08 95       	ret

00000a40 <__divsf3>:
     a40:	0e 94 34 05 	call	0xa68	; 0xa68 <__divsf3x>
     a44:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <__fp_round>
     a48:	0e 94 df 05 	call	0xbbe	; 0xbbe <__fp_pscB>
     a4c:	58 f0       	brcs	.+22     	; 0xa64 <__divsf3+0x24>
     a4e:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__fp_pscA>
     a52:	40 f0       	brcs	.+16     	; 0xa64 <__divsf3+0x24>
     a54:	29 f4       	brne	.+10     	; 0xa60 <__divsf3+0x20>
     a56:	5f 3f       	cpi	r21, 0xFF	; 255
     a58:	29 f0       	breq	.+10     	; 0xa64 <__divsf3+0x24>
     a5a:	0c 94 cf 05 	jmp	0xb9e	; 0xb9e <__fp_inf>
     a5e:	51 11       	cpse	r21, r1
     a60:	0c 94 1a 06 	jmp	0xc34	; 0xc34 <__fp_szero>
     a64:	0c 94 d5 05 	jmp	0xbaa	; 0xbaa <__fp_nan>

00000a68 <__divsf3x>:
     a68:	0e 94 f7 05 	call	0xbee	; 0xbee <__fp_split3>
     a6c:	68 f3       	brcs	.-38     	; 0xa48 <__divsf3+0x8>

00000a6e <__divsf3_pse>:
     a6e:	99 23       	and	r25, r25
     a70:	b1 f3       	breq	.-20     	; 0xa5e <__divsf3+0x1e>
     a72:	55 23       	and	r21, r21
     a74:	91 f3       	breq	.-28     	; 0xa5a <__divsf3+0x1a>
     a76:	95 1b       	sub	r25, r21
     a78:	55 0b       	sbc	r21, r21
     a7a:	bb 27       	eor	r27, r27
     a7c:	aa 27       	eor	r26, r26
     a7e:	62 17       	cp	r22, r18
     a80:	73 07       	cpc	r23, r19
     a82:	84 07       	cpc	r24, r20
     a84:	38 f0       	brcs	.+14     	; 0xa94 <__divsf3_pse+0x26>
     a86:	9f 5f       	subi	r25, 0xFF	; 255
     a88:	5f 4f       	sbci	r21, 0xFF	; 255
     a8a:	22 0f       	add	r18, r18
     a8c:	33 1f       	adc	r19, r19
     a8e:	44 1f       	adc	r20, r20
     a90:	aa 1f       	adc	r26, r26
     a92:	a9 f3       	breq	.-22     	; 0xa7e <__divsf3_pse+0x10>
     a94:	35 d0       	rcall	.+106    	; 0xb00 <__divsf3_pse+0x92>
     a96:	0e 2e       	mov	r0, r30
     a98:	3a f0       	brmi	.+14     	; 0xaa8 <__divsf3_pse+0x3a>
     a9a:	e0 e8       	ldi	r30, 0x80	; 128
     a9c:	32 d0       	rcall	.+100    	; 0xb02 <__divsf3_pse+0x94>
     a9e:	91 50       	subi	r25, 0x01	; 1
     aa0:	50 40       	sbci	r21, 0x00	; 0
     aa2:	e6 95       	lsr	r30
     aa4:	00 1c       	adc	r0, r0
     aa6:	ca f7       	brpl	.-14     	; 0xa9a <__divsf3_pse+0x2c>
     aa8:	2b d0       	rcall	.+86     	; 0xb00 <__divsf3_pse+0x92>
     aaa:	fe 2f       	mov	r31, r30
     aac:	29 d0       	rcall	.+82     	; 0xb00 <__divsf3_pse+0x92>
     aae:	66 0f       	add	r22, r22
     ab0:	77 1f       	adc	r23, r23
     ab2:	88 1f       	adc	r24, r24
     ab4:	bb 1f       	adc	r27, r27
     ab6:	26 17       	cp	r18, r22
     ab8:	37 07       	cpc	r19, r23
     aba:	48 07       	cpc	r20, r24
     abc:	ab 07       	cpc	r26, r27
     abe:	b0 e8       	ldi	r27, 0x80	; 128
     ac0:	09 f0       	breq	.+2      	; 0xac4 <__divsf3_pse+0x56>
     ac2:	bb 0b       	sbc	r27, r27
     ac4:	80 2d       	mov	r24, r0
     ac6:	bf 01       	movw	r22, r30
     ac8:	ff 27       	eor	r31, r31
     aca:	93 58       	subi	r25, 0x83	; 131
     acc:	5f 4f       	sbci	r21, 0xFF	; 255
     ace:	3a f0       	brmi	.+14     	; 0xade <__divsf3_pse+0x70>
     ad0:	9e 3f       	cpi	r25, 0xFE	; 254
     ad2:	51 05       	cpc	r21, r1
     ad4:	78 f0       	brcs	.+30     	; 0xaf4 <__divsf3_pse+0x86>
     ad6:	0c 94 cf 05 	jmp	0xb9e	; 0xb9e <__fp_inf>
     ada:	0c 94 1a 06 	jmp	0xc34	; 0xc34 <__fp_szero>
     ade:	5f 3f       	cpi	r21, 0xFF	; 255
     ae0:	e4 f3       	brlt	.-8      	; 0xada <__divsf3_pse+0x6c>
     ae2:	98 3e       	cpi	r25, 0xE8	; 232
     ae4:	d4 f3       	brlt	.-12     	; 0xada <__divsf3_pse+0x6c>
     ae6:	86 95       	lsr	r24
     ae8:	77 95       	ror	r23
     aea:	67 95       	ror	r22
     aec:	b7 95       	ror	r27
     aee:	f7 95       	ror	r31
     af0:	9f 5f       	subi	r25, 0xFF	; 255
     af2:	c9 f7       	brne	.-14     	; 0xae6 <__divsf3_pse+0x78>
     af4:	88 0f       	add	r24, r24
     af6:	91 1d       	adc	r25, r1
     af8:	96 95       	lsr	r25
     afa:	87 95       	ror	r24
     afc:	97 f9       	bld	r25, 7
     afe:	08 95       	ret
     b00:	e1 e0       	ldi	r30, 0x01	; 1
     b02:	66 0f       	add	r22, r22
     b04:	77 1f       	adc	r23, r23
     b06:	88 1f       	adc	r24, r24
     b08:	bb 1f       	adc	r27, r27
     b0a:	62 17       	cp	r22, r18
     b0c:	73 07       	cpc	r23, r19
     b0e:	84 07       	cpc	r24, r20
     b10:	ba 07       	cpc	r27, r26
     b12:	20 f0       	brcs	.+8      	; 0xb1c <__divsf3_pse+0xae>
     b14:	62 1b       	sub	r22, r18
     b16:	73 0b       	sbc	r23, r19
     b18:	84 0b       	sbc	r24, r20
     b1a:	ba 0b       	sbc	r27, r26
     b1c:	ee 1f       	adc	r30, r30
     b1e:	88 f7       	brcc	.-30     	; 0xb02 <__divsf3_pse+0x94>
     b20:	e0 95       	com	r30
     b22:	08 95       	ret

00000b24 <__floatunsisf>:
     b24:	e8 94       	clt
     b26:	09 c0       	rjmp	.+18     	; 0xb3a <__floatsisf+0x12>

00000b28 <__floatsisf>:
     b28:	97 fb       	bst	r25, 7
     b2a:	3e f4       	brtc	.+14     	; 0xb3a <__floatsisf+0x12>
     b2c:	90 95       	com	r25
     b2e:	80 95       	com	r24
     b30:	70 95       	com	r23
     b32:	61 95       	neg	r22
     b34:	7f 4f       	sbci	r23, 0xFF	; 255
     b36:	8f 4f       	sbci	r24, 0xFF	; 255
     b38:	9f 4f       	sbci	r25, 0xFF	; 255
     b3a:	99 23       	and	r25, r25
     b3c:	a9 f0       	breq	.+42     	; 0xb68 <__floatsisf+0x40>
     b3e:	f9 2f       	mov	r31, r25
     b40:	96 e9       	ldi	r25, 0x96	; 150
     b42:	bb 27       	eor	r27, r27
     b44:	93 95       	inc	r25
     b46:	f6 95       	lsr	r31
     b48:	87 95       	ror	r24
     b4a:	77 95       	ror	r23
     b4c:	67 95       	ror	r22
     b4e:	b7 95       	ror	r27
     b50:	f1 11       	cpse	r31, r1
     b52:	f8 cf       	rjmp	.-16     	; 0xb44 <__floatsisf+0x1c>
     b54:	fa f4       	brpl	.+62     	; 0xb94 <__floatsisf+0x6c>
     b56:	bb 0f       	add	r27, r27
     b58:	11 f4       	brne	.+4      	; 0xb5e <__floatsisf+0x36>
     b5a:	60 ff       	sbrs	r22, 0
     b5c:	1b c0       	rjmp	.+54     	; 0xb94 <__floatsisf+0x6c>
     b5e:	6f 5f       	subi	r22, 0xFF	; 255
     b60:	7f 4f       	sbci	r23, 0xFF	; 255
     b62:	8f 4f       	sbci	r24, 0xFF	; 255
     b64:	9f 4f       	sbci	r25, 0xFF	; 255
     b66:	16 c0       	rjmp	.+44     	; 0xb94 <__floatsisf+0x6c>
     b68:	88 23       	and	r24, r24
     b6a:	11 f0       	breq	.+4      	; 0xb70 <__floatsisf+0x48>
     b6c:	96 e9       	ldi	r25, 0x96	; 150
     b6e:	11 c0       	rjmp	.+34     	; 0xb92 <__floatsisf+0x6a>
     b70:	77 23       	and	r23, r23
     b72:	21 f0       	breq	.+8      	; 0xb7c <__floatsisf+0x54>
     b74:	9e e8       	ldi	r25, 0x8E	; 142
     b76:	87 2f       	mov	r24, r23
     b78:	76 2f       	mov	r23, r22
     b7a:	05 c0       	rjmp	.+10     	; 0xb86 <__floatsisf+0x5e>
     b7c:	66 23       	and	r22, r22
     b7e:	71 f0       	breq	.+28     	; 0xb9c <__floatsisf+0x74>
     b80:	96 e8       	ldi	r25, 0x86	; 134
     b82:	86 2f       	mov	r24, r22
     b84:	70 e0       	ldi	r23, 0x00	; 0
     b86:	60 e0       	ldi	r22, 0x00	; 0
     b88:	2a f0       	brmi	.+10     	; 0xb94 <__floatsisf+0x6c>
     b8a:	9a 95       	dec	r25
     b8c:	66 0f       	add	r22, r22
     b8e:	77 1f       	adc	r23, r23
     b90:	88 1f       	adc	r24, r24
     b92:	da f7       	brpl	.-10     	; 0xb8a <__floatsisf+0x62>
     b94:	88 0f       	add	r24, r24
     b96:	96 95       	lsr	r25
     b98:	87 95       	ror	r24
     b9a:	97 f9       	bld	r25, 7
     b9c:	08 95       	ret

00000b9e <__fp_inf>:
     b9e:	97 f9       	bld	r25, 7
     ba0:	9f 67       	ori	r25, 0x7F	; 127
     ba2:	80 e8       	ldi	r24, 0x80	; 128
     ba4:	70 e0       	ldi	r23, 0x00	; 0
     ba6:	60 e0       	ldi	r22, 0x00	; 0
     ba8:	08 95       	ret

00000baa <__fp_nan>:
     baa:	9f ef       	ldi	r25, 0xFF	; 255
     bac:	80 ec       	ldi	r24, 0xC0	; 192
     bae:	08 95       	ret

00000bb0 <__fp_pscA>:
     bb0:	00 24       	eor	r0, r0
     bb2:	0a 94       	dec	r0
     bb4:	16 16       	cp	r1, r22
     bb6:	17 06       	cpc	r1, r23
     bb8:	18 06       	cpc	r1, r24
     bba:	09 06       	cpc	r0, r25
     bbc:	08 95       	ret

00000bbe <__fp_pscB>:
     bbe:	00 24       	eor	r0, r0
     bc0:	0a 94       	dec	r0
     bc2:	12 16       	cp	r1, r18
     bc4:	13 06       	cpc	r1, r19
     bc6:	14 06       	cpc	r1, r20
     bc8:	05 06       	cpc	r0, r21
     bca:	08 95       	ret

00000bcc <__fp_round>:
     bcc:	09 2e       	mov	r0, r25
     bce:	03 94       	inc	r0
     bd0:	00 0c       	add	r0, r0
     bd2:	11 f4       	brne	.+4      	; 0xbd8 <__fp_round+0xc>
     bd4:	88 23       	and	r24, r24
     bd6:	52 f0       	brmi	.+20     	; 0xbec <__fp_round+0x20>
     bd8:	bb 0f       	add	r27, r27
     bda:	40 f4       	brcc	.+16     	; 0xbec <__fp_round+0x20>
     bdc:	bf 2b       	or	r27, r31
     bde:	11 f4       	brne	.+4      	; 0xbe4 <__fp_round+0x18>
     be0:	60 ff       	sbrs	r22, 0
     be2:	04 c0       	rjmp	.+8      	; 0xbec <__fp_round+0x20>
     be4:	6f 5f       	subi	r22, 0xFF	; 255
     be6:	7f 4f       	sbci	r23, 0xFF	; 255
     be8:	8f 4f       	sbci	r24, 0xFF	; 255
     bea:	9f 4f       	sbci	r25, 0xFF	; 255
     bec:	08 95       	ret

00000bee <__fp_split3>:
     bee:	57 fd       	sbrc	r21, 7
     bf0:	90 58       	subi	r25, 0x80	; 128
     bf2:	44 0f       	add	r20, r20
     bf4:	55 1f       	adc	r21, r21
     bf6:	59 f0       	breq	.+22     	; 0xc0e <__fp_splitA+0x10>
     bf8:	5f 3f       	cpi	r21, 0xFF	; 255
     bfa:	71 f0       	breq	.+28     	; 0xc18 <__fp_splitA+0x1a>
     bfc:	47 95       	ror	r20

00000bfe <__fp_splitA>:
     bfe:	88 0f       	add	r24, r24
     c00:	97 fb       	bst	r25, 7
     c02:	99 1f       	adc	r25, r25
     c04:	61 f0       	breq	.+24     	; 0xc1e <__fp_splitA+0x20>
     c06:	9f 3f       	cpi	r25, 0xFF	; 255
     c08:	79 f0       	breq	.+30     	; 0xc28 <__fp_splitA+0x2a>
     c0a:	87 95       	ror	r24
     c0c:	08 95       	ret
     c0e:	12 16       	cp	r1, r18
     c10:	13 06       	cpc	r1, r19
     c12:	14 06       	cpc	r1, r20
     c14:	55 1f       	adc	r21, r21
     c16:	f2 cf       	rjmp	.-28     	; 0xbfc <__fp_split3+0xe>
     c18:	46 95       	lsr	r20
     c1a:	f1 df       	rcall	.-30     	; 0xbfe <__fp_splitA>
     c1c:	08 c0       	rjmp	.+16     	; 0xc2e <__fp_splitA+0x30>
     c1e:	16 16       	cp	r1, r22
     c20:	17 06       	cpc	r1, r23
     c22:	18 06       	cpc	r1, r24
     c24:	99 1f       	adc	r25, r25
     c26:	f1 cf       	rjmp	.-30     	; 0xc0a <__fp_splitA+0xc>
     c28:	86 95       	lsr	r24
     c2a:	71 05       	cpc	r23, r1
     c2c:	61 05       	cpc	r22, r1
     c2e:	08 94       	sec
     c30:	08 95       	ret

00000c32 <__fp_zero>:
     c32:	e8 94       	clt

00000c34 <__fp_szero>:
     c34:	bb 27       	eor	r27, r27
     c36:	66 27       	eor	r22, r22
     c38:	77 27       	eor	r23, r23
     c3a:	cb 01       	movw	r24, r22
     c3c:	97 f9       	bld	r25, 7
     c3e:	08 95       	ret

00000c40 <strcpy>:
     c40:	fb 01       	movw	r30, r22
     c42:	dc 01       	movw	r26, r24
     c44:	01 90       	ld	r0, Z+
     c46:	0d 92       	st	X+, r0
     c48:	00 20       	and	r0, r0
     c4a:	e1 f7       	brne	.-8      	; 0xc44 <strcpy+0x4>
     c4c:	08 95       	ret

00000c4e <printf>:
     c4e:	a0 e0       	ldi	r26, 0x00	; 0
     c50:	b0 e0       	ldi	r27, 0x00	; 0
     c52:	ed e2       	ldi	r30, 0x2D	; 45
     c54:	f6 e0       	ldi	r31, 0x06	; 6
     c56:	0c 94 3e 09 	jmp	0x127c	; 0x127c <__prologue_saves__+0x20>
     c5a:	ae 01       	movw	r20, r28
     c5c:	4b 5f       	subi	r20, 0xFB	; 251
     c5e:	5f 4f       	sbci	r21, 0xFF	; 255
     c60:	fa 01       	movw	r30, r20
     c62:	61 91       	ld	r22, Z+
     c64:	71 91       	ld	r23, Z+
     c66:	af 01       	movw	r20, r30
     c68:	80 91 b3 02 	lds	r24, 0x02B3	; 0x8002b3 <__iob+0x2>
     c6c:	90 91 b4 02 	lds	r25, 0x02B4	; 0x8002b4 <__iob+0x3>
     c70:	0e 94 9d 06 	call	0xd3a	; 0xd3a <vfprintf>
     c74:	e2 e0       	ldi	r30, 0x02	; 2
     c76:	0c 94 5a 09 	jmp	0x12b4	; 0x12b4 <__epilogue_restores__+0x20>

00000c7a <puts>:
     c7a:	0f 93       	push	r16
     c7c:	1f 93       	push	r17
     c7e:	cf 93       	push	r28
     c80:	df 93       	push	r29
     c82:	e0 91 b3 02 	lds	r30, 0x02B3	; 0x8002b3 <__iob+0x2>
     c86:	f0 91 b4 02 	lds	r31, 0x02B4	; 0x8002b4 <__iob+0x3>
     c8a:	23 81       	ldd	r18, Z+3	; 0x03
     c8c:	21 ff       	sbrs	r18, 1
     c8e:	1b c0       	rjmp	.+54     	; 0xcc6 <puts+0x4c>
     c90:	8c 01       	movw	r16, r24
     c92:	d0 e0       	ldi	r29, 0x00	; 0
     c94:	c0 e0       	ldi	r28, 0x00	; 0
     c96:	f8 01       	movw	r30, r16
     c98:	81 91       	ld	r24, Z+
     c9a:	8f 01       	movw	r16, r30
     c9c:	60 91 b3 02 	lds	r22, 0x02B3	; 0x8002b3 <__iob+0x2>
     ca0:	70 91 b4 02 	lds	r23, 0x02B4	; 0x8002b4 <__iob+0x3>
     ca4:	db 01       	movw	r26, r22
     ca6:	18 96       	adiw	r26, 0x08	; 8
     ca8:	ed 91       	ld	r30, X+
     caa:	fc 91       	ld	r31, X
     cac:	19 97       	sbiw	r26, 0x09	; 9
     cae:	88 23       	and	r24, r24
     cb0:	31 f0       	breq	.+12     	; 0xcbe <puts+0x44>
     cb2:	09 95       	icall
     cb4:	89 2b       	or	r24, r25
     cb6:	79 f3       	breq	.-34     	; 0xc96 <puts+0x1c>
     cb8:	df ef       	ldi	r29, 0xFF	; 255
     cba:	cf ef       	ldi	r28, 0xFF	; 255
     cbc:	ec cf       	rjmp	.-40     	; 0xc96 <puts+0x1c>
     cbe:	8a e0       	ldi	r24, 0x0A	; 10
     cc0:	09 95       	icall
     cc2:	89 2b       	or	r24, r25
     cc4:	19 f0       	breq	.+6      	; 0xccc <puts+0x52>
     cc6:	8f ef       	ldi	r24, 0xFF	; 255
     cc8:	9f ef       	ldi	r25, 0xFF	; 255
     cca:	02 c0       	rjmp	.+4      	; 0xcd0 <puts+0x56>
     ccc:	8d 2f       	mov	r24, r29
     cce:	9c 2f       	mov	r25, r28
     cd0:	df 91       	pop	r29
     cd2:	cf 91       	pop	r28
     cd4:	1f 91       	pop	r17
     cd6:	0f 91       	pop	r16
     cd8:	08 95       	ret

00000cda <snprintf>:
     cda:	ae e0       	ldi	r26, 0x0E	; 14
     cdc:	b0 e0       	ldi	r27, 0x00	; 0
     cde:	e3 e7       	ldi	r30, 0x73	; 115
     ce0:	f6 e0       	ldi	r31, 0x06	; 6
     ce2:	0c 94 3c 09 	jmp	0x1278	; 0x1278 <__prologue_saves__+0x1c>
     ce6:	0d 89       	ldd	r16, Y+21	; 0x15
     ce8:	1e 89       	ldd	r17, Y+22	; 0x16
     cea:	8f 89       	ldd	r24, Y+23	; 0x17
     cec:	98 8d       	ldd	r25, Y+24	; 0x18
     cee:	26 e0       	ldi	r18, 0x06	; 6
     cf0:	2c 83       	std	Y+4, r18	; 0x04
     cf2:	1a 83       	std	Y+2, r17	; 0x02
     cf4:	09 83       	std	Y+1, r16	; 0x01
     cf6:	97 ff       	sbrs	r25, 7
     cf8:	02 c0       	rjmp	.+4      	; 0xcfe <snprintf+0x24>
     cfa:	80 e0       	ldi	r24, 0x00	; 0
     cfc:	90 e8       	ldi	r25, 0x80	; 128
     cfe:	01 97       	sbiw	r24, 0x01	; 1
     d00:	9e 83       	std	Y+6, r25	; 0x06
     d02:	8d 83       	std	Y+5, r24	; 0x05
     d04:	ae 01       	movw	r20, r28
     d06:	45 5e       	subi	r20, 0xE5	; 229
     d08:	5f 4f       	sbci	r21, 0xFF	; 255
     d0a:	69 8d       	ldd	r22, Y+25	; 0x19
     d0c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     d0e:	ce 01       	movw	r24, r28
     d10:	01 96       	adiw	r24, 0x01	; 1
     d12:	0e 94 9d 06 	call	0xd3a	; 0xd3a <vfprintf>
     d16:	4d 81       	ldd	r20, Y+5	; 0x05
     d18:	5e 81       	ldd	r21, Y+6	; 0x06
     d1a:	57 fd       	sbrc	r21, 7
     d1c:	0a c0       	rjmp	.+20     	; 0xd32 <snprintf+0x58>
     d1e:	2f 81       	ldd	r18, Y+7	; 0x07
     d20:	38 85       	ldd	r19, Y+8	; 0x08
     d22:	42 17       	cp	r20, r18
     d24:	53 07       	cpc	r21, r19
     d26:	0c f4       	brge	.+2      	; 0xd2a <snprintf+0x50>
     d28:	9a 01       	movw	r18, r20
     d2a:	f8 01       	movw	r30, r16
     d2c:	e2 0f       	add	r30, r18
     d2e:	f3 1f       	adc	r31, r19
     d30:	10 82       	st	Z, r1
     d32:	2e 96       	adiw	r28, 0x0e	; 14
     d34:	e4 e0       	ldi	r30, 0x04	; 4
     d36:	0c 94 58 09 	jmp	0x12b0	; 0x12b0 <__epilogue_restores__+0x1c>

00000d3a <vfprintf>:
     d3a:	ab e0       	ldi	r26, 0x0B	; 11
     d3c:	b0 e0       	ldi	r27, 0x00	; 0
     d3e:	e3 ea       	ldi	r30, 0xA3	; 163
     d40:	f6 e0       	ldi	r31, 0x06	; 6
     d42:	0c 94 2e 09 	jmp	0x125c	; 0x125c <__prologue_saves__>
     d46:	6c 01       	movw	r12, r24
     d48:	7b 01       	movw	r14, r22
     d4a:	8a 01       	movw	r16, r20
     d4c:	fc 01       	movw	r30, r24
     d4e:	17 82       	std	Z+7, r1	; 0x07
     d50:	16 82       	std	Z+6, r1	; 0x06
     d52:	83 81       	ldd	r24, Z+3	; 0x03
     d54:	81 ff       	sbrs	r24, 1
     d56:	cc c1       	rjmp	.+920    	; 0x10f0 <vfprintf+0x3b6>
     d58:	ce 01       	movw	r24, r28
     d5a:	01 96       	adiw	r24, 0x01	; 1
     d5c:	3c 01       	movw	r6, r24
     d5e:	f6 01       	movw	r30, r12
     d60:	93 81       	ldd	r25, Z+3	; 0x03
     d62:	f7 01       	movw	r30, r14
     d64:	93 fd       	sbrc	r25, 3
     d66:	85 91       	lpm	r24, Z+
     d68:	93 ff       	sbrs	r25, 3
     d6a:	81 91       	ld	r24, Z+
     d6c:	7f 01       	movw	r14, r30
     d6e:	88 23       	and	r24, r24
     d70:	09 f4       	brne	.+2      	; 0xd74 <vfprintf+0x3a>
     d72:	ba c1       	rjmp	.+884    	; 0x10e8 <vfprintf+0x3ae>
     d74:	85 32       	cpi	r24, 0x25	; 37
     d76:	39 f4       	brne	.+14     	; 0xd86 <vfprintf+0x4c>
     d78:	93 fd       	sbrc	r25, 3
     d7a:	85 91       	lpm	r24, Z+
     d7c:	93 ff       	sbrs	r25, 3
     d7e:	81 91       	ld	r24, Z+
     d80:	7f 01       	movw	r14, r30
     d82:	85 32       	cpi	r24, 0x25	; 37
     d84:	29 f4       	brne	.+10     	; 0xd90 <vfprintf+0x56>
     d86:	b6 01       	movw	r22, r12
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	0e 94 94 08 	call	0x1128	; 0x1128 <fputc>
     d8e:	e7 cf       	rjmp	.-50     	; 0xd5e <vfprintf+0x24>
     d90:	91 2c       	mov	r9, r1
     d92:	21 2c       	mov	r2, r1
     d94:	31 2c       	mov	r3, r1
     d96:	ff e1       	ldi	r31, 0x1F	; 31
     d98:	f3 15       	cp	r31, r3
     d9a:	d8 f0       	brcs	.+54     	; 0xdd2 <vfprintf+0x98>
     d9c:	8b 32       	cpi	r24, 0x2B	; 43
     d9e:	79 f0       	breq	.+30     	; 0xdbe <vfprintf+0x84>
     da0:	38 f4       	brcc	.+14     	; 0xdb0 <vfprintf+0x76>
     da2:	80 32       	cpi	r24, 0x20	; 32
     da4:	79 f0       	breq	.+30     	; 0xdc4 <vfprintf+0x8a>
     da6:	83 32       	cpi	r24, 0x23	; 35
     da8:	a1 f4       	brne	.+40     	; 0xdd2 <vfprintf+0x98>
     daa:	23 2d       	mov	r18, r3
     dac:	20 61       	ori	r18, 0x10	; 16
     dae:	1d c0       	rjmp	.+58     	; 0xdea <vfprintf+0xb0>
     db0:	8d 32       	cpi	r24, 0x2D	; 45
     db2:	61 f0       	breq	.+24     	; 0xdcc <vfprintf+0x92>
     db4:	80 33       	cpi	r24, 0x30	; 48
     db6:	69 f4       	brne	.+26     	; 0xdd2 <vfprintf+0x98>
     db8:	23 2d       	mov	r18, r3
     dba:	21 60       	ori	r18, 0x01	; 1
     dbc:	16 c0       	rjmp	.+44     	; 0xdea <vfprintf+0xb0>
     dbe:	83 2d       	mov	r24, r3
     dc0:	82 60       	ori	r24, 0x02	; 2
     dc2:	38 2e       	mov	r3, r24
     dc4:	e3 2d       	mov	r30, r3
     dc6:	e4 60       	ori	r30, 0x04	; 4
     dc8:	3e 2e       	mov	r3, r30
     dca:	2a c0       	rjmp	.+84     	; 0xe20 <vfprintf+0xe6>
     dcc:	f3 2d       	mov	r31, r3
     dce:	f8 60       	ori	r31, 0x08	; 8
     dd0:	1d c0       	rjmp	.+58     	; 0xe0c <vfprintf+0xd2>
     dd2:	37 fc       	sbrc	r3, 7
     dd4:	2d c0       	rjmp	.+90     	; 0xe30 <vfprintf+0xf6>
     dd6:	20 ed       	ldi	r18, 0xD0	; 208
     dd8:	28 0f       	add	r18, r24
     dda:	2a 30       	cpi	r18, 0x0A	; 10
     ddc:	40 f0       	brcs	.+16     	; 0xdee <vfprintf+0xb4>
     dde:	8e 32       	cpi	r24, 0x2E	; 46
     de0:	b9 f4       	brne	.+46     	; 0xe10 <vfprintf+0xd6>
     de2:	36 fc       	sbrc	r3, 6
     de4:	81 c1       	rjmp	.+770    	; 0x10e8 <vfprintf+0x3ae>
     de6:	23 2d       	mov	r18, r3
     de8:	20 64       	ori	r18, 0x40	; 64
     dea:	32 2e       	mov	r3, r18
     dec:	19 c0       	rjmp	.+50     	; 0xe20 <vfprintf+0xe6>
     dee:	36 fe       	sbrs	r3, 6
     df0:	06 c0       	rjmp	.+12     	; 0xdfe <vfprintf+0xc4>
     df2:	8a e0       	ldi	r24, 0x0A	; 10
     df4:	98 9e       	mul	r9, r24
     df6:	20 0d       	add	r18, r0
     df8:	11 24       	eor	r1, r1
     dfa:	92 2e       	mov	r9, r18
     dfc:	11 c0       	rjmp	.+34     	; 0xe20 <vfprintf+0xe6>
     dfe:	ea e0       	ldi	r30, 0x0A	; 10
     e00:	2e 9e       	mul	r2, r30
     e02:	20 0d       	add	r18, r0
     e04:	11 24       	eor	r1, r1
     e06:	22 2e       	mov	r2, r18
     e08:	f3 2d       	mov	r31, r3
     e0a:	f0 62       	ori	r31, 0x20	; 32
     e0c:	3f 2e       	mov	r3, r31
     e0e:	08 c0       	rjmp	.+16     	; 0xe20 <vfprintf+0xe6>
     e10:	8c 36       	cpi	r24, 0x6C	; 108
     e12:	21 f4       	brne	.+8      	; 0xe1c <vfprintf+0xe2>
     e14:	83 2d       	mov	r24, r3
     e16:	80 68       	ori	r24, 0x80	; 128
     e18:	38 2e       	mov	r3, r24
     e1a:	02 c0       	rjmp	.+4      	; 0xe20 <vfprintf+0xe6>
     e1c:	88 36       	cpi	r24, 0x68	; 104
     e1e:	41 f4       	brne	.+16     	; 0xe30 <vfprintf+0xf6>
     e20:	f7 01       	movw	r30, r14
     e22:	93 fd       	sbrc	r25, 3
     e24:	85 91       	lpm	r24, Z+
     e26:	93 ff       	sbrs	r25, 3
     e28:	81 91       	ld	r24, Z+
     e2a:	7f 01       	movw	r14, r30
     e2c:	81 11       	cpse	r24, r1
     e2e:	b3 cf       	rjmp	.-154    	; 0xd96 <vfprintf+0x5c>
     e30:	98 2f       	mov	r25, r24
     e32:	9f 7d       	andi	r25, 0xDF	; 223
     e34:	95 54       	subi	r25, 0x45	; 69
     e36:	93 30       	cpi	r25, 0x03	; 3
     e38:	28 f4       	brcc	.+10     	; 0xe44 <vfprintf+0x10a>
     e3a:	0c 5f       	subi	r16, 0xFC	; 252
     e3c:	1f 4f       	sbci	r17, 0xFF	; 255
     e3e:	9f e3       	ldi	r25, 0x3F	; 63
     e40:	99 83       	std	Y+1, r25	; 0x01
     e42:	0d c0       	rjmp	.+26     	; 0xe5e <vfprintf+0x124>
     e44:	83 36       	cpi	r24, 0x63	; 99
     e46:	31 f0       	breq	.+12     	; 0xe54 <vfprintf+0x11a>
     e48:	83 37       	cpi	r24, 0x73	; 115
     e4a:	71 f0       	breq	.+28     	; 0xe68 <vfprintf+0x12e>
     e4c:	83 35       	cpi	r24, 0x53	; 83
     e4e:	09 f0       	breq	.+2      	; 0xe52 <vfprintf+0x118>
     e50:	59 c0       	rjmp	.+178    	; 0xf04 <vfprintf+0x1ca>
     e52:	21 c0       	rjmp	.+66     	; 0xe96 <vfprintf+0x15c>
     e54:	f8 01       	movw	r30, r16
     e56:	80 81       	ld	r24, Z
     e58:	89 83       	std	Y+1, r24	; 0x01
     e5a:	0e 5f       	subi	r16, 0xFE	; 254
     e5c:	1f 4f       	sbci	r17, 0xFF	; 255
     e5e:	88 24       	eor	r8, r8
     e60:	83 94       	inc	r8
     e62:	91 2c       	mov	r9, r1
     e64:	53 01       	movw	r10, r6
     e66:	13 c0       	rjmp	.+38     	; 0xe8e <vfprintf+0x154>
     e68:	28 01       	movw	r4, r16
     e6a:	f2 e0       	ldi	r31, 0x02	; 2
     e6c:	4f 0e       	add	r4, r31
     e6e:	51 1c       	adc	r5, r1
     e70:	f8 01       	movw	r30, r16
     e72:	a0 80       	ld	r10, Z
     e74:	b1 80       	ldd	r11, Z+1	; 0x01
     e76:	36 fe       	sbrs	r3, 6
     e78:	03 c0       	rjmp	.+6      	; 0xe80 <vfprintf+0x146>
     e7a:	69 2d       	mov	r22, r9
     e7c:	70 e0       	ldi	r23, 0x00	; 0
     e7e:	02 c0       	rjmp	.+4      	; 0xe84 <vfprintf+0x14a>
     e80:	6f ef       	ldi	r22, 0xFF	; 255
     e82:	7f ef       	ldi	r23, 0xFF	; 255
     e84:	c5 01       	movw	r24, r10
     e86:	0e 94 89 08 	call	0x1112	; 0x1112 <strnlen>
     e8a:	4c 01       	movw	r8, r24
     e8c:	82 01       	movw	r16, r4
     e8e:	f3 2d       	mov	r31, r3
     e90:	ff 77       	andi	r31, 0x7F	; 127
     e92:	3f 2e       	mov	r3, r31
     e94:	16 c0       	rjmp	.+44     	; 0xec2 <vfprintf+0x188>
     e96:	28 01       	movw	r4, r16
     e98:	22 e0       	ldi	r18, 0x02	; 2
     e9a:	42 0e       	add	r4, r18
     e9c:	51 1c       	adc	r5, r1
     e9e:	f8 01       	movw	r30, r16
     ea0:	a0 80       	ld	r10, Z
     ea2:	b1 80       	ldd	r11, Z+1	; 0x01
     ea4:	36 fe       	sbrs	r3, 6
     ea6:	03 c0       	rjmp	.+6      	; 0xeae <vfprintf+0x174>
     ea8:	69 2d       	mov	r22, r9
     eaa:	70 e0       	ldi	r23, 0x00	; 0
     eac:	02 c0       	rjmp	.+4      	; 0xeb2 <vfprintf+0x178>
     eae:	6f ef       	ldi	r22, 0xFF	; 255
     eb0:	7f ef       	ldi	r23, 0xFF	; 255
     eb2:	c5 01       	movw	r24, r10
     eb4:	0e 94 7e 08 	call	0x10fc	; 0x10fc <strnlen_P>
     eb8:	4c 01       	movw	r8, r24
     eba:	f3 2d       	mov	r31, r3
     ebc:	f0 68       	ori	r31, 0x80	; 128
     ebe:	3f 2e       	mov	r3, r31
     ec0:	82 01       	movw	r16, r4
     ec2:	33 fc       	sbrc	r3, 3
     ec4:	1b c0       	rjmp	.+54     	; 0xefc <vfprintf+0x1c2>
     ec6:	82 2d       	mov	r24, r2
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	88 16       	cp	r8, r24
     ecc:	99 06       	cpc	r9, r25
     ece:	b0 f4       	brcc	.+44     	; 0xefc <vfprintf+0x1c2>
     ed0:	b6 01       	movw	r22, r12
     ed2:	80 e2       	ldi	r24, 0x20	; 32
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	0e 94 94 08 	call	0x1128	; 0x1128 <fputc>
     eda:	2a 94       	dec	r2
     edc:	f4 cf       	rjmp	.-24     	; 0xec6 <vfprintf+0x18c>
     ede:	f5 01       	movw	r30, r10
     ee0:	37 fc       	sbrc	r3, 7
     ee2:	85 91       	lpm	r24, Z+
     ee4:	37 fe       	sbrs	r3, 7
     ee6:	81 91       	ld	r24, Z+
     ee8:	5f 01       	movw	r10, r30
     eea:	b6 01       	movw	r22, r12
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	0e 94 94 08 	call	0x1128	; 0x1128 <fputc>
     ef2:	21 10       	cpse	r2, r1
     ef4:	2a 94       	dec	r2
     ef6:	21 e0       	ldi	r18, 0x01	; 1
     ef8:	82 1a       	sub	r8, r18
     efa:	91 08       	sbc	r9, r1
     efc:	81 14       	cp	r8, r1
     efe:	91 04       	cpc	r9, r1
     f00:	71 f7       	brne	.-36     	; 0xede <vfprintf+0x1a4>
     f02:	e8 c0       	rjmp	.+464    	; 0x10d4 <vfprintf+0x39a>
     f04:	84 36       	cpi	r24, 0x64	; 100
     f06:	11 f0       	breq	.+4      	; 0xf0c <vfprintf+0x1d2>
     f08:	89 36       	cpi	r24, 0x69	; 105
     f0a:	41 f5       	brne	.+80     	; 0xf5c <vfprintf+0x222>
     f0c:	f8 01       	movw	r30, r16
     f0e:	37 fe       	sbrs	r3, 7
     f10:	07 c0       	rjmp	.+14     	; 0xf20 <vfprintf+0x1e6>
     f12:	60 81       	ld	r22, Z
     f14:	71 81       	ldd	r23, Z+1	; 0x01
     f16:	82 81       	ldd	r24, Z+2	; 0x02
     f18:	93 81       	ldd	r25, Z+3	; 0x03
     f1a:	0c 5f       	subi	r16, 0xFC	; 252
     f1c:	1f 4f       	sbci	r17, 0xFF	; 255
     f1e:	08 c0       	rjmp	.+16     	; 0xf30 <vfprintf+0x1f6>
     f20:	60 81       	ld	r22, Z
     f22:	71 81       	ldd	r23, Z+1	; 0x01
     f24:	07 2e       	mov	r0, r23
     f26:	00 0c       	add	r0, r0
     f28:	88 0b       	sbc	r24, r24
     f2a:	99 0b       	sbc	r25, r25
     f2c:	0e 5f       	subi	r16, 0xFE	; 254
     f2e:	1f 4f       	sbci	r17, 0xFF	; 255
     f30:	f3 2d       	mov	r31, r3
     f32:	ff 76       	andi	r31, 0x6F	; 111
     f34:	3f 2e       	mov	r3, r31
     f36:	97 ff       	sbrs	r25, 7
     f38:	09 c0       	rjmp	.+18     	; 0xf4c <vfprintf+0x212>
     f3a:	90 95       	com	r25
     f3c:	80 95       	com	r24
     f3e:	70 95       	com	r23
     f40:	61 95       	neg	r22
     f42:	7f 4f       	sbci	r23, 0xFF	; 255
     f44:	8f 4f       	sbci	r24, 0xFF	; 255
     f46:	9f 4f       	sbci	r25, 0xFF	; 255
     f48:	f0 68       	ori	r31, 0x80	; 128
     f4a:	3f 2e       	mov	r3, r31
     f4c:	2a e0       	ldi	r18, 0x0A	; 10
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	a3 01       	movw	r20, r6
     f52:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <__ultoa_invert>
     f56:	88 2e       	mov	r8, r24
     f58:	86 18       	sub	r8, r6
     f5a:	45 c0       	rjmp	.+138    	; 0xfe6 <vfprintf+0x2ac>
     f5c:	85 37       	cpi	r24, 0x75	; 117
     f5e:	31 f4       	brne	.+12     	; 0xf6c <vfprintf+0x232>
     f60:	23 2d       	mov	r18, r3
     f62:	2f 7e       	andi	r18, 0xEF	; 239
     f64:	b2 2e       	mov	r11, r18
     f66:	2a e0       	ldi	r18, 0x0A	; 10
     f68:	30 e0       	ldi	r19, 0x00	; 0
     f6a:	25 c0       	rjmp	.+74     	; 0xfb6 <vfprintf+0x27c>
     f6c:	93 2d       	mov	r25, r3
     f6e:	99 7f       	andi	r25, 0xF9	; 249
     f70:	b9 2e       	mov	r11, r25
     f72:	8f 36       	cpi	r24, 0x6F	; 111
     f74:	c1 f0       	breq	.+48     	; 0xfa6 <vfprintf+0x26c>
     f76:	18 f4       	brcc	.+6      	; 0xf7e <vfprintf+0x244>
     f78:	88 35       	cpi	r24, 0x58	; 88
     f7a:	79 f0       	breq	.+30     	; 0xf9a <vfprintf+0x260>
     f7c:	b5 c0       	rjmp	.+362    	; 0x10e8 <vfprintf+0x3ae>
     f7e:	80 37       	cpi	r24, 0x70	; 112
     f80:	19 f0       	breq	.+6      	; 0xf88 <vfprintf+0x24e>
     f82:	88 37       	cpi	r24, 0x78	; 120
     f84:	21 f0       	breq	.+8      	; 0xf8e <vfprintf+0x254>
     f86:	b0 c0       	rjmp	.+352    	; 0x10e8 <vfprintf+0x3ae>
     f88:	e9 2f       	mov	r30, r25
     f8a:	e0 61       	ori	r30, 0x10	; 16
     f8c:	be 2e       	mov	r11, r30
     f8e:	b4 fe       	sbrs	r11, 4
     f90:	0d c0       	rjmp	.+26     	; 0xfac <vfprintf+0x272>
     f92:	fb 2d       	mov	r31, r11
     f94:	f4 60       	ori	r31, 0x04	; 4
     f96:	bf 2e       	mov	r11, r31
     f98:	09 c0       	rjmp	.+18     	; 0xfac <vfprintf+0x272>
     f9a:	34 fe       	sbrs	r3, 4
     f9c:	0a c0       	rjmp	.+20     	; 0xfb2 <vfprintf+0x278>
     f9e:	29 2f       	mov	r18, r25
     fa0:	26 60       	ori	r18, 0x06	; 6
     fa2:	b2 2e       	mov	r11, r18
     fa4:	06 c0       	rjmp	.+12     	; 0xfb2 <vfprintf+0x278>
     fa6:	28 e0       	ldi	r18, 0x08	; 8
     fa8:	30 e0       	ldi	r19, 0x00	; 0
     faa:	05 c0       	rjmp	.+10     	; 0xfb6 <vfprintf+0x27c>
     fac:	20 e1       	ldi	r18, 0x10	; 16
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	02 c0       	rjmp	.+4      	; 0xfb6 <vfprintf+0x27c>
     fb2:	20 e1       	ldi	r18, 0x10	; 16
     fb4:	32 e0       	ldi	r19, 0x02	; 2
     fb6:	f8 01       	movw	r30, r16
     fb8:	b7 fe       	sbrs	r11, 7
     fba:	07 c0       	rjmp	.+14     	; 0xfca <vfprintf+0x290>
     fbc:	60 81       	ld	r22, Z
     fbe:	71 81       	ldd	r23, Z+1	; 0x01
     fc0:	82 81       	ldd	r24, Z+2	; 0x02
     fc2:	93 81       	ldd	r25, Z+3	; 0x03
     fc4:	0c 5f       	subi	r16, 0xFC	; 252
     fc6:	1f 4f       	sbci	r17, 0xFF	; 255
     fc8:	06 c0       	rjmp	.+12     	; 0xfd6 <vfprintf+0x29c>
     fca:	60 81       	ld	r22, Z
     fcc:	71 81       	ldd	r23, Z+1	; 0x01
     fce:	80 e0       	ldi	r24, 0x00	; 0
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	0e 5f       	subi	r16, 0xFE	; 254
     fd4:	1f 4f       	sbci	r17, 0xFF	; 255
     fd6:	a3 01       	movw	r20, r6
     fd8:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <__ultoa_invert>
     fdc:	88 2e       	mov	r8, r24
     fde:	86 18       	sub	r8, r6
     fe0:	fb 2d       	mov	r31, r11
     fe2:	ff 77       	andi	r31, 0x7F	; 127
     fe4:	3f 2e       	mov	r3, r31
     fe6:	36 fe       	sbrs	r3, 6
     fe8:	0d c0       	rjmp	.+26     	; 0x1004 <vfprintf+0x2ca>
     fea:	23 2d       	mov	r18, r3
     fec:	2e 7f       	andi	r18, 0xFE	; 254
     fee:	a2 2e       	mov	r10, r18
     ff0:	89 14       	cp	r8, r9
     ff2:	58 f4       	brcc	.+22     	; 0x100a <vfprintf+0x2d0>
     ff4:	34 fe       	sbrs	r3, 4
     ff6:	0b c0       	rjmp	.+22     	; 0x100e <vfprintf+0x2d4>
     ff8:	32 fc       	sbrc	r3, 2
     ffa:	09 c0       	rjmp	.+18     	; 0x100e <vfprintf+0x2d4>
     ffc:	83 2d       	mov	r24, r3
     ffe:	8e 7e       	andi	r24, 0xEE	; 238
    1000:	a8 2e       	mov	r10, r24
    1002:	05 c0       	rjmp	.+10     	; 0x100e <vfprintf+0x2d4>
    1004:	b8 2c       	mov	r11, r8
    1006:	a3 2c       	mov	r10, r3
    1008:	03 c0       	rjmp	.+6      	; 0x1010 <vfprintf+0x2d6>
    100a:	b8 2c       	mov	r11, r8
    100c:	01 c0       	rjmp	.+2      	; 0x1010 <vfprintf+0x2d6>
    100e:	b9 2c       	mov	r11, r9
    1010:	a4 fe       	sbrs	r10, 4
    1012:	0f c0       	rjmp	.+30     	; 0x1032 <vfprintf+0x2f8>
    1014:	fe 01       	movw	r30, r28
    1016:	e8 0d       	add	r30, r8
    1018:	f1 1d       	adc	r31, r1
    101a:	80 81       	ld	r24, Z
    101c:	80 33       	cpi	r24, 0x30	; 48
    101e:	21 f4       	brne	.+8      	; 0x1028 <vfprintf+0x2ee>
    1020:	9a 2d       	mov	r25, r10
    1022:	99 7e       	andi	r25, 0xE9	; 233
    1024:	a9 2e       	mov	r10, r25
    1026:	09 c0       	rjmp	.+18     	; 0x103a <vfprintf+0x300>
    1028:	a2 fe       	sbrs	r10, 2
    102a:	06 c0       	rjmp	.+12     	; 0x1038 <vfprintf+0x2fe>
    102c:	b3 94       	inc	r11
    102e:	b3 94       	inc	r11
    1030:	04 c0       	rjmp	.+8      	; 0x103a <vfprintf+0x300>
    1032:	8a 2d       	mov	r24, r10
    1034:	86 78       	andi	r24, 0x86	; 134
    1036:	09 f0       	breq	.+2      	; 0x103a <vfprintf+0x300>
    1038:	b3 94       	inc	r11
    103a:	a3 fc       	sbrc	r10, 3
    103c:	11 c0       	rjmp	.+34     	; 0x1060 <vfprintf+0x326>
    103e:	a0 fe       	sbrs	r10, 0
    1040:	06 c0       	rjmp	.+12     	; 0x104e <vfprintf+0x314>
    1042:	b2 14       	cp	r11, r2
    1044:	88 f4       	brcc	.+34     	; 0x1068 <vfprintf+0x32e>
    1046:	28 0c       	add	r2, r8
    1048:	92 2c       	mov	r9, r2
    104a:	9b 18       	sub	r9, r11
    104c:	0e c0       	rjmp	.+28     	; 0x106a <vfprintf+0x330>
    104e:	b2 14       	cp	r11, r2
    1050:	60 f4       	brcc	.+24     	; 0x106a <vfprintf+0x330>
    1052:	b6 01       	movw	r22, r12
    1054:	80 e2       	ldi	r24, 0x20	; 32
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	0e 94 94 08 	call	0x1128	; 0x1128 <fputc>
    105c:	b3 94       	inc	r11
    105e:	f7 cf       	rjmp	.-18     	; 0x104e <vfprintf+0x314>
    1060:	b2 14       	cp	r11, r2
    1062:	18 f4       	brcc	.+6      	; 0x106a <vfprintf+0x330>
    1064:	2b 18       	sub	r2, r11
    1066:	02 c0       	rjmp	.+4      	; 0x106c <vfprintf+0x332>
    1068:	98 2c       	mov	r9, r8
    106a:	21 2c       	mov	r2, r1
    106c:	a4 fe       	sbrs	r10, 4
    106e:	10 c0       	rjmp	.+32     	; 0x1090 <vfprintf+0x356>
    1070:	b6 01       	movw	r22, r12
    1072:	80 e3       	ldi	r24, 0x30	; 48
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	0e 94 94 08 	call	0x1128	; 0x1128 <fputc>
    107a:	a2 fe       	sbrs	r10, 2
    107c:	17 c0       	rjmp	.+46     	; 0x10ac <vfprintf+0x372>
    107e:	a1 fc       	sbrc	r10, 1
    1080:	03 c0       	rjmp	.+6      	; 0x1088 <vfprintf+0x34e>
    1082:	88 e7       	ldi	r24, 0x78	; 120
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	02 c0       	rjmp	.+4      	; 0x108c <vfprintf+0x352>
    1088:	88 e5       	ldi	r24, 0x58	; 88
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	b6 01       	movw	r22, r12
    108e:	0c c0       	rjmp	.+24     	; 0x10a8 <vfprintf+0x36e>
    1090:	8a 2d       	mov	r24, r10
    1092:	86 78       	andi	r24, 0x86	; 134
    1094:	59 f0       	breq	.+22     	; 0x10ac <vfprintf+0x372>
    1096:	a1 fe       	sbrs	r10, 1
    1098:	02 c0       	rjmp	.+4      	; 0x109e <vfprintf+0x364>
    109a:	8b e2       	ldi	r24, 0x2B	; 43
    109c:	01 c0       	rjmp	.+2      	; 0x10a0 <vfprintf+0x366>
    109e:	80 e2       	ldi	r24, 0x20	; 32
    10a0:	a7 fc       	sbrc	r10, 7
    10a2:	8d e2       	ldi	r24, 0x2D	; 45
    10a4:	b6 01       	movw	r22, r12
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	0e 94 94 08 	call	0x1128	; 0x1128 <fputc>
    10ac:	89 14       	cp	r8, r9
    10ae:	38 f4       	brcc	.+14     	; 0x10be <vfprintf+0x384>
    10b0:	b6 01       	movw	r22, r12
    10b2:	80 e3       	ldi	r24, 0x30	; 48
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	0e 94 94 08 	call	0x1128	; 0x1128 <fputc>
    10ba:	9a 94       	dec	r9
    10bc:	f7 cf       	rjmp	.-18     	; 0x10ac <vfprintf+0x372>
    10be:	8a 94       	dec	r8
    10c0:	f3 01       	movw	r30, r6
    10c2:	e8 0d       	add	r30, r8
    10c4:	f1 1d       	adc	r31, r1
    10c6:	80 81       	ld	r24, Z
    10c8:	b6 01       	movw	r22, r12
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	0e 94 94 08 	call	0x1128	; 0x1128 <fputc>
    10d0:	81 10       	cpse	r8, r1
    10d2:	f5 cf       	rjmp	.-22     	; 0x10be <vfprintf+0x384>
    10d4:	22 20       	and	r2, r2
    10d6:	09 f4       	brne	.+2      	; 0x10da <vfprintf+0x3a0>
    10d8:	42 ce       	rjmp	.-892    	; 0xd5e <vfprintf+0x24>
    10da:	b6 01       	movw	r22, r12
    10dc:	80 e2       	ldi	r24, 0x20	; 32
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	0e 94 94 08 	call	0x1128	; 0x1128 <fputc>
    10e4:	2a 94       	dec	r2
    10e6:	f6 cf       	rjmp	.-20     	; 0x10d4 <vfprintf+0x39a>
    10e8:	f6 01       	movw	r30, r12
    10ea:	86 81       	ldd	r24, Z+6	; 0x06
    10ec:	97 81       	ldd	r25, Z+7	; 0x07
    10ee:	02 c0       	rjmp	.+4      	; 0x10f4 <vfprintf+0x3ba>
    10f0:	8f ef       	ldi	r24, 0xFF	; 255
    10f2:	9f ef       	ldi	r25, 0xFF	; 255
    10f4:	2b 96       	adiw	r28, 0x0b	; 11
    10f6:	e2 e1       	ldi	r30, 0x12	; 18
    10f8:	0c 94 4a 09 	jmp	0x1294	; 0x1294 <__epilogue_restores__>

000010fc <strnlen_P>:
    10fc:	fc 01       	movw	r30, r24
    10fe:	05 90       	lpm	r0, Z+
    1100:	61 50       	subi	r22, 0x01	; 1
    1102:	70 40       	sbci	r23, 0x00	; 0
    1104:	01 10       	cpse	r0, r1
    1106:	d8 f7       	brcc	.-10     	; 0x10fe <strnlen_P+0x2>
    1108:	80 95       	com	r24
    110a:	90 95       	com	r25
    110c:	8e 0f       	add	r24, r30
    110e:	9f 1f       	adc	r25, r31
    1110:	08 95       	ret

00001112 <strnlen>:
    1112:	fc 01       	movw	r30, r24
    1114:	61 50       	subi	r22, 0x01	; 1
    1116:	70 40       	sbci	r23, 0x00	; 0
    1118:	01 90       	ld	r0, Z+
    111a:	01 10       	cpse	r0, r1
    111c:	d8 f7       	brcc	.-10     	; 0x1114 <strnlen+0x2>
    111e:	80 95       	com	r24
    1120:	90 95       	com	r25
    1122:	8e 0f       	add	r24, r30
    1124:	9f 1f       	adc	r25, r31
    1126:	08 95       	ret

00001128 <fputc>:
    1128:	0f 93       	push	r16
    112a:	1f 93       	push	r17
    112c:	cf 93       	push	r28
    112e:	df 93       	push	r29
    1130:	fb 01       	movw	r30, r22
    1132:	23 81       	ldd	r18, Z+3	; 0x03
    1134:	21 fd       	sbrc	r18, 1
    1136:	03 c0       	rjmp	.+6      	; 0x113e <fputc+0x16>
    1138:	8f ef       	ldi	r24, 0xFF	; 255
    113a:	9f ef       	ldi	r25, 0xFF	; 255
    113c:	2c c0       	rjmp	.+88     	; 0x1196 <fputc+0x6e>
    113e:	22 ff       	sbrs	r18, 2
    1140:	16 c0       	rjmp	.+44     	; 0x116e <fputc+0x46>
    1142:	46 81       	ldd	r20, Z+6	; 0x06
    1144:	57 81       	ldd	r21, Z+7	; 0x07
    1146:	24 81       	ldd	r18, Z+4	; 0x04
    1148:	35 81       	ldd	r19, Z+5	; 0x05
    114a:	42 17       	cp	r20, r18
    114c:	53 07       	cpc	r21, r19
    114e:	44 f4       	brge	.+16     	; 0x1160 <fputc+0x38>
    1150:	a0 81       	ld	r26, Z
    1152:	b1 81       	ldd	r27, Z+1	; 0x01
    1154:	9d 01       	movw	r18, r26
    1156:	2f 5f       	subi	r18, 0xFF	; 255
    1158:	3f 4f       	sbci	r19, 0xFF	; 255
    115a:	31 83       	std	Z+1, r19	; 0x01
    115c:	20 83       	st	Z, r18
    115e:	8c 93       	st	X, r24
    1160:	26 81       	ldd	r18, Z+6	; 0x06
    1162:	37 81       	ldd	r19, Z+7	; 0x07
    1164:	2f 5f       	subi	r18, 0xFF	; 255
    1166:	3f 4f       	sbci	r19, 0xFF	; 255
    1168:	37 83       	std	Z+7, r19	; 0x07
    116a:	26 83       	std	Z+6, r18	; 0x06
    116c:	14 c0       	rjmp	.+40     	; 0x1196 <fputc+0x6e>
    116e:	8b 01       	movw	r16, r22
    1170:	ec 01       	movw	r28, r24
    1172:	fb 01       	movw	r30, r22
    1174:	00 84       	ldd	r0, Z+8	; 0x08
    1176:	f1 85       	ldd	r31, Z+9	; 0x09
    1178:	e0 2d       	mov	r30, r0
    117a:	09 95       	icall
    117c:	89 2b       	or	r24, r25
    117e:	e1 f6       	brne	.-72     	; 0x1138 <fputc+0x10>
    1180:	d8 01       	movw	r26, r16
    1182:	16 96       	adiw	r26, 0x06	; 6
    1184:	8d 91       	ld	r24, X+
    1186:	9c 91       	ld	r25, X
    1188:	17 97       	sbiw	r26, 0x07	; 7
    118a:	01 96       	adiw	r24, 0x01	; 1
    118c:	17 96       	adiw	r26, 0x07	; 7
    118e:	9c 93       	st	X, r25
    1190:	8e 93       	st	-X, r24
    1192:	16 97       	sbiw	r26, 0x06	; 6
    1194:	ce 01       	movw	r24, r28
    1196:	df 91       	pop	r29
    1198:	cf 91       	pop	r28
    119a:	1f 91       	pop	r17
    119c:	0f 91       	pop	r16
    119e:	08 95       	ret

000011a0 <__ultoa_invert>:
    11a0:	fa 01       	movw	r30, r20
    11a2:	aa 27       	eor	r26, r26
    11a4:	28 30       	cpi	r18, 0x08	; 8
    11a6:	51 f1       	breq	.+84     	; 0x11fc <__ultoa_invert+0x5c>
    11a8:	20 31       	cpi	r18, 0x10	; 16
    11aa:	81 f1       	breq	.+96     	; 0x120c <__ultoa_invert+0x6c>
    11ac:	e8 94       	clt
    11ae:	6f 93       	push	r22
    11b0:	6e 7f       	andi	r22, 0xFE	; 254
    11b2:	6e 5f       	subi	r22, 0xFE	; 254
    11b4:	7f 4f       	sbci	r23, 0xFF	; 255
    11b6:	8f 4f       	sbci	r24, 0xFF	; 255
    11b8:	9f 4f       	sbci	r25, 0xFF	; 255
    11ba:	af 4f       	sbci	r26, 0xFF	; 255
    11bc:	b1 e0       	ldi	r27, 0x01	; 1
    11be:	3e d0       	rcall	.+124    	; 0x123c <__ultoa_invert+0x9c>
    11c0:	b4 e0       	ldi	r27, 0x04	; 4
    11c2:	3c d0       	rcall	.+120    	; 0x123c <__ultoa_invert+0x9c>
    11c4:	67 0f       	add	r22, r23
    11c6:	78 1f       	adc	r23, r24
    11c8:	89 1f       	adc	r24, r25
    11ca:	9a 1f       	adc	r25, r26
    11cc:	a1 1d       	adc	r26, r1
    11ce:	68 0f       	add	r22, r24
    11d0:	79 1f       	adc	r23, r25
    11d2:	8a 1f       	adc	r24, r26
    11d4:	91 1d       	adc	r25, r1
    11d6:	a1 1d       	adc	r26, r1
    11d8:	6a 0f       	add	r22, r26
    11da:	71 1d       	adc	r23, r1
    11dc:	81 1d       	adc	r24, r1
    11de:	91 1d       	adc	r25, r1
    11e0:	a1 1d       	adc	r26, r1
    11e2:	20 d0       	rcall	.+64     	; 0x1224 <__ultoa_invert+0x84>
    11e4:	09 f4       	brne	.+2      	; 0x11e8 <__ultoa_invert+0x48>
    11e6:	68 94       	set
    11e8:	3f 91       	pop	r19
    11ea:	2a e0       	ldi	r18, 0x0A	; 10
    11ec:	26 9f       	mul	r18, r22
    11ee:	11 24       	eor	r1, r1
    11f0:	30 19       	sub	r19, r0
    11f2:	30 5d       	subi	r19, 0xD0	; 208
    11f4:	31 93       	st	Z+, r19
    11f6:	de f6       	brtc	.-74     	; 0x11ae <__ultoa_invert+0xe>
    11f8:	cf 01       	movw	r24, r30
    11fa:	08 95       	ret
    11fc:	46 2f       	mov	r20, r22
    11fe:	47 70       	andi	r20, 0x07	; 7
    1200:	40 5d       	subi	r20, 0xD0	; 208
    1202:	41 93       	st	Z+, r20
    1204:	b3 e0       	ldi	r27, 0x03	; 3
    1206:	0f d0       	rcall	.+30     	; 0x1226 <__ultoa_invert+0x86>
    1208:	c9 f7       	brne	.-14     	; 0x11fc <__ultoa_invert+0x5c>
    120a:	f6 cf       	rjmp	.-20     	; 0x11f8 <__ultoa_invert+0x58>
    120c:	46 2f       	mov	r20, r22
    120e:	4f 70       	andi	r20, 0x0F	; 15
    1210:	40 5d       	subi	r20, 0xD0	; 208
    1212:	4a 33       	cpi	r20, 0x3A	; 58
    1214:	18 f0       	brcs	.+6      	; 0x121c <__ultoa_invert+0x7c>
    1216:	49 5d       	subi	r20, 0xD9	; 217
    1218:	31 fd       	sbrc	r19, 1
    121a:	40 52       	subi	r20, 0x20	; 32
    121c:	41 93       	st	Z+, r20
    121e:	02 d0       	rcall	.+4      	; 0x1224 <__ultoa_invert+0x84>
    1220:	a9 f7       	brne	.-22     	; 0x120c <__ultoa_invert+0x6c>
    1222:	ea cf       	rjmp	.-44     	; 0x11f8 <__ultoa_invert+0x58>
    1224:	b4 e0       	ldi	r27, 0x04	; 4
    1226:	a6 95       	lsr	r26
    1228:	97 95       	ror	r25
    122a:	87 95       	ror	r24
    122c:	77 95       	ror	r23
    122e:	67 95       	ror	r22
    1230:	ba 95       	dec	r27
    1232:	c9 f7       	brne	.-14     	; 0x1226 <__ultoa_invert+0x86>
    1234:	00 97       	sbiw	r24, 0x00	; 0
    1236:	61 05       	cpc	r22, r1
    1238:	71 05       	cpc	r23, r1
    123a:	08 95       	ret
    123c:	9b 01       	movw	r18, r22
    123e:	ac 01       	movw	r20, r24
    1240:	0a 2e       	mov	r0, r26
    1242:	06 94       	lsr	r0
    1244:	57 95       	ror	r21
    1246:	47 95       	ror	r20
    1248:	37 95       	ror	r19
    124a:	27 95       	ror	r18
    124c:	ba 95       	dec	r27
    124e:	c9 f7       	brne	.-14     	; 0x1242 <__ultoa_invert+0xa2>
    1250:	62 0f       	add	r22, r18
    1252:	73 1f       	adc	r23, r19
    1254:	84 1f       	adc	r24, r20
    1256:	95 1f       	adc	r25, r21
    1258:	a0 1d       	adc	r26, r0
    125a:	08 95       	ret

0000125c <__prologue_saves__>:
    125c:	2f 92       	push	r2
    125e:	3f 92       	push	r3
    1260:	4f 92       	push	r4
    1262:	5f 92       	push	r5
    1264:	6f 92       	push	r6
    1266:	7f 92       	push	r7
    1268:	8f 92       	push	r8
    126a:	9f 92       	push	r9
    126c:	af 92       	push	r10
    126e:	bf 92       	push	r11
    1270:	cf 92       	push	r12
    1272:	df 92       	push	r13
    1274:	ef 92       	push	r14
    1276:	ff 92       	push	r15
    1278:	0f 93       	push	r16
    127a:	1f 93       	push	r17
    127c:	cf 93       	push	r28
    127e:	df 93       	push	r29
    1280:	cd b7       	in	r28, 0x3d	; 61
    1282:	de b7       	in	r29, 0x3e	; 62
    1284:	ca 1b       	sub	r28, r26
    1286:	db 0b       	sbc	r29, r27
    1288:	0f b6       	in	r0, 0x3f	; 63
    128a:	f8 94       	cli
    128c:	de bf       	out	0x3e, r29	; 62
    128e:	0f be       	out	0x3f, r0	; 63
    1290:	cd bf       	out	0x3d, r28	; 61
    1292:	09 94       	ijmp

00001294 <__epilogue_restores__>:
    1294:	2a 88       	ldd	r2, Y+18	; 0x12
    1296:	39 88       	ldd	r3, Y+17	; 0x11
    1298:	48 88       	ldd	r4, Y+16	; 0x10
    129a:	5f 84       	ldd	r5, Y+15	; 0x0f
    129c:	6e 84       	ldd	r6, Y+14	; 0x0e
    129e:	7d 84       	ldd	r7, Y+13	; 0x0d
    12a0:	8c 84       	ldd	r8, Y+12	; 0x0c
    12a2:	9b 84       	ldd	r9, Y+11	; 0x0b
    12a4:	aa 84       	ldd	r10, Y+10	; 0x0a
    12a6:	b9 84       	ldd	r11, Y+9	; 0x09
    12a8:	c8 84       	ldd	r12, Y+8	; 0x08
    12aa:	df 80       	ldd	r13, Y+7	; 0x07
    12ac:	ee 80       	ldd	r14, Y+6	; 0x06
    12ae:	fd 80       	ldd	r15, Y+5	; 0x05
    12b0:	0c 81       	ldd	r16, Y+4	; 0x04
    12b2:	1b 81       	ldd	r17, Y+3	; 0x03
    12b4:	aa 81       	ldd	r26, Y+2	; 0x02
    12b6:	b9 81       	ldd	r27, Y+1	; 0x01
    12b8:	ce 0f       	add	r28, r30
    12ba:	d1 1d       	adc	r29, r1
    12bc:	0f b6       	in	r0, 0x3f	; 63
    12be:	f8 94       	cli
    12c0:	de bf       	out	0x3e, r29	; 62
    12c2:	0f be       	out	0x3f, r0	; 63
    12c4:	cd bf       	out	0x3d, r28	; 61
    12c6:	ed 01       	movw	r28, r26
    12c8:	08 95       	ret

000012ca <_exit>:
    12ca:	f8 94       	cli

000012cc <__stop_program>:
    12cc:	ff cf       	rjmp	.-2      	; 0x12cc <__stop_program>
