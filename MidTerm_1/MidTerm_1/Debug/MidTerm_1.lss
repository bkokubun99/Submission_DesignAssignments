
MidTerm_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000bc  00800100  00000926  000009ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000926  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000103  008001bc  008001bc  00000a76  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a76  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ad4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000b14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d70  00000000  00000000  00000b64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a1f  00000000  00000000  000018d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004a4  00000000  00000000  000022f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000bc  00000000  00000000  00002798  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000054a  00000000  00000000  00002854  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000171  00000000  00000000  00002d9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00002f0f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 88 01 	jmp	0x310	; 0x310 <__vector_13>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e6 e2       	ldi	r30, 0x26	; 38
  c8:	f9 e0       	ldi	r31, 0x09	; 9
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	ac 3b       	cpi	r26, 0xBC	; 188
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	22 e0       	ldi	r18, 0x02	; 2
  d8:	ac eb       	ldi	r26, 0xBC	; 188
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	af 3b       	cpi	r26, 0xBF	; 191
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <main>
  ea:	0c 94 91 04 	jmp	0x922	; 0x922 <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <USART_init>:
*							Functions										   *
*******************************************************************************/
//FUNCTION TO INITIALIZE USART
void USART_init(void)
{
	UBRR0H = UBRRH_VALUE;
  f2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
  f6:	87 e6       	ldi	r24, 0x67	; 103
  f8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); //8-BIT DATA
  fc:	86 e0       	ldi	r24, 0x06	; 6
  fe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);	//ENABLE RX AND TX
 102:	88 e1       	ldi	r24, 0x18	; 24
 104:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 108:	08 95       	ret

0000010a <adc_init>:
}

//FUNCTION TO INITIALIZE ADC
void adc_init(void)
{
	ADMUX =  (0<<REFS1) |				//REFERENCE SELECTION BITS
 10a:	84 e4       	ldi	r24, 0x44	; 68
 10c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(0<<ADLAR) |						//ADC RIGHT ADJUST RESULT
	(1<<MUX2)  |						//ANALOG CHANNEL SELECTION BITS
	(0<<MUX1)  |						//ADC4 (PC4) CHANNEL 4
	(0<<MUX0);
	
	ADCSRA = (1<<ADEN)  |				//ADC ENABLE
 110:	87 e8       	ldi	r24, 0x87	; 135
 112:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 116:	08 95       	ret

00000118 <set>:
}

//FUNCTION THAT SETS TIMER/INTERRUPT REGISTERS
void set()
{
	TCCR1A = (0<<WGM10)| (0<<WGM11);	//NORMAL MODE OPERATION
 118:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = (0<<WGM12)| (0<<WGM13);	//NORMAL MODE OPERATION
 11c:	e1 e8       	ldi	r30, 0x81	; 129
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	10 82       	st	Z, r1
	TCCR1B =  0X05;						//THE PRESCALER SET TO 1024		
 122:	85 e0       	ldi	r24, 0x05	; 5
 124:	80 83       	st	Z, r24
	TCNT1H =  0X00;						//COUNTER HIGH VALUE = 0
 126:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
	TCNT1L =  0X00;						//COUNTER LOW  VALUE = 0
 12a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	TIMSK1 = (1<<TOIE1);				//ENABLE INTERRUPT
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	sei();								//ENABLE GLOBAL INTERRUPT
 134:	78 94       	sei
 136:	08 95       	ret

00000138 <USART_tx_string>:
}

//FUNCTION THAT READS IN 1 CHAR AT A TIME
void USART_tx_string(char*data)
{
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
	//CONTROL ENTERS WHILE DATA REG NOT EMPTY
	while((*data!='\0'))
 13c:	fc 01       	movw	r30, r24
 13e:	20 81       	ld	r18, Z
 140:	22 23       	and	r18, r18
 142:	69 f0       	breq	.+26     	; 0x15e <USART_tx_string+0x26>
 144:	dc 01       	movw	r26, r24
 146:	11 96       	adiw	r26, 0x01	; 1
	{
		//WAIT FOR BUFFER REGISTER TO CLEAR
		while(!(UCSR0A & (1 << UDRE0)));
 148:	e0 ec       	ldi	r30, 0xC0	; 192
 14a:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;					//REGESTER EQUALS DATA
 14c:	c6 ec       	ldi	r28, 0xC6	; 198
 14e:	d0 e0       	ldi	r29, 0x00	; 0
{
	//CONTROL ENTERS WHILE DATA REG NOT EMPTY
	while((*data!='\0'))
	{
		//WAIT FOR BUFFER REGISTER TO CLEAR
		while(!(UCSR0A & (1 << UDRE0)));
 150:	90 81       	ld	r25, Z
 152:	95 ff       	sbrs	r25, 5
 154:	fd cf       	rjmp	.-6      	; 0x150 <USART_tx_string+0x18>
		UDR0 = *data;					//REGESTER EQUALS DATA
 156:	28 83       	st	Y, r18

//FUNCTION THAT READS IN 1 CHAR AT A TIME
void USART_tx_string(char*data)
{
	//CONTROL ENTERS WHILE DATA REG NOT EMPTY
	while((*data!='\0'))
 158:	2d 91       	ld	r18, X+
 15a:	21 11       	cpse	r18, r1
 15c:	f9 cf       	rjmp	.-14     	; 0x150 <USART_tx_string+0x18>
		//WAIT FOR BUFFER REGISTER TO CLEAR
		while(!(UCSR0A & (1 << UDRE0)));
		UDR0 = *data;					//REGESTER EQUALS DATA
		data++;							//DATA MOVES POSITION
	}
}
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	08 95       	ret

00000164 <read_adc>:

//FUNCTION THAT READS Temperatures
void read_adc(void)
{
	unsigned char i = 4;				//VARIABLE FOR SAMPLE AMOUNTS
	adc_temp = 0;						//INITIALIZE adc_temp
 164:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <__data_end+0x1>
 168:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <__data_end>
 16c:	24 e0       	ldi	r18, 0x04	; 4
	while(i--)
	{
		ADCSRA |= (1<<ADSC);			//ENABLE START CONVERSION
 16e:	ea e7       	ldi	r30, 0x7A	; 122
 170:	f0 e0       	ldi	r31, 0x00	; 0
		while(ADCSRA & (1<<ADSC));		//WAIT UNTIL ABLE AND START CONVERSION
		adc_temp += ADC;				//LM35 VALUE ADDED & STORED INTO adc_temp
 172:	a8 e7       	ldi	r26, 0x78	; 120
 174:	b0 e0       	ldi	r27, 0x00	; 0
{
	unsigned char i = 4;				//VARIABLE FOR SAMPLE AMOUNTS
	adc_temp = 0;						//INITIALIZE adc_temp
	while(i--)
	{
		ADCSRA |= (1<<ADSC);			//ENABLE START CONVERSION
 176:	80 81       	ld	r24, Z
 178:	80 64       	ori	r24, 0x40	; 64
 17a:	80 83       	st	Z, r24
		while(ADCSRA & (1<<ADSC));		//WAIT UNTIL ABLE AND START CONVERSION
 17c:	80 81       	ld	r24, Z
 17e:	86 fd       	sbrc	r24, 6
 180:	fd cf       	rjmp	.-6      	; 0x17c <read_adc+0x18>
		adc_temp += ADC;				//LM35 VALUE ADDED & STORED INTO adc_temp
 182:	8d 91       	ld	r24, X+
 184:	9c 91       	ld	r25, X
 186:	11 97       	sbiw	r26, 0x01	; 1
 188:	40 91 bc 01 	lds	r20, 0x01BC	; 0x8001bc <__data_end>
 18c:	50 91 bd 01 	lds	r21, 0x01BD	; 0x8001bd <__data_end+0x1>
 190:	84 0f       	add	r24, r20
 192:	95 1f       	adc	r25, r21
 194:	90 93 bd 01 	sts	0x01BD, r25	; 0x8001bd <__data_end+0x1>
 198:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <__data_end>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 19c:	3f ef       	ldi	r19, 0xFF	; 255
 19e:	80 e7       	ldi	r24, 0x70	; 112
 1a0:	92 e0       	ldi	r25, 0x02	; 2
 1a2:	31 50       	subi	r19, 0x01	; 1
 1a4:	80 40       	sbci	r24, 0x00	; 0
 1a6:	90 40       	sbci	r25, 0x00	; 0
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <read_adc+0x3e>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <read_adc+0x48>
 1ac:	00 00       	nop
 1ae:	21 50       	subi	r18, 0x01	; 1
//FUNCTION THAT READS Temperatures
void read_adc(void)
{
	unsigned char i = 4;				//VARIABLE FOR SAMPLE AMOUNTS
	adc_temp = 0;						//INITIALIZE adc_temp
	while(i--)
 1b0:	11 f7       	brne	.-60     	; 0x176 <read_adc+0x12>
		ADCSRA |= (1<<ADSC);			//ENABLE START CONVERSION
		while(ADCSRA & (1<<ADSC));		//WAIT UNTIL ABLE AND START CONVERSION
		adc_temp += ADC;				//LM35 VALUE ADDED & STORED INTO adc_temp
		_delay_ms(50);					
	}
	adc_temp = adc_temp/4;				//AVERAGE OF LM35 TEMPERATURE VALUE
 1b2:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <__data_end>
 1b6:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <__data_end+0x1>
 1ba:	99 23       	and	r25, r25
 1bc:	0c f4       	brge	.+2      	; 0x1c0 <read_adc+0x5c>
 1be:	03 96       	adiw	r24, 0x03	; 3
 1c0:	95 95       	asr	r25
 1c2:	87 95       	ror	r24
 1c4:	95 95       	asr	r25
 1c6:	87 95       	ror	r24
 1c8:	90 93 bd 01 	sts	0x01BD, r25	; 0x8001bd <__data_end+0x1>
 1cc:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <__data_end>
 1d0:	08 95       	ret

000001d2 <main>:
/*******************************************************************************
*								Int Main									   *
*******************************************************************************/
int main(void)
{
    USART_init();							//INITIALIZE USART
 1d2:	0e 94 79 00 	call	0xf2	; 0xf2 <USART_init>
	adc_init();								//INITIALIZE ADC
 1d6:	0e 94 85 00 	call	0x10a	; 0x10a <adc_init>
	set();									//INITIALIZE TIMERS/INTERRUPTS
 1da:	0e 94 8c 00 	call	0x118	; 0x118 <set>
 1de:	2f ef       	ldi	r18, 0xFF	; 255
 1e0:	83 ed       	ldi	r24, 0xD3	; 211
 1e2:	90 e3       	ldi	r25, 0x30	; 48
 1e4:	21 50       	subi	r18, 0x01	; 1
 1e6:	80 40       	sbci	r24, 0x00	; 0
 1e8:	90 40       	sbci	r25, 0x00	; 0
 1ea:	e1 f7       	brne	.-8      	; 0x1e4 <main+0x12>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <main+0x1c>
 1ee:	00 00       	nop
	
	_delay_ms(1000);
	USART_tx_string(command1);				//AT-COMMAND
 1f0:	88 e8       	ldi	r24, 0x88	; 136
 1f2:	91 e0       	ldi	r25, 0x01	; 1
 1f4:	0e 94 9c 00 	call	0x138	; 0x138 <USART_tx_string>
 1f8:	2f ef       	ldi	r18, 0xFF	; 255
 1fa:	8b e7       	ldi	r24, 0x7B	; 123
 1fc:	92 e9       	ldi	r25, 0x92	; 146
 1fe:	21 50       	subi	r18, 0x01	; 1
 200:	80 40       	sbci	r24, 0x00	; 0
 202:	90 40       	sbci	r25, 0x00	; 0
 204:	e1 f7       	brne	.-8      	; 0x1fe <main+0x2c>
 206:	00 c0       	rjmp	.+0      	; 0x208 <main+0x36>
 208:	00 00       	nop
	_delay_ms(3000);
	USART_tx_string(command2);				//SET CWMODE = 1
 20a:	8a e7       	ldi	r24, 0x7A	; 122
 20c:	91 e0       	ldi	r25, 0x01	; 1
 20e:	0e 94 9c 00 	call	0x138	; 0x138 <USART_tx_string>
 212:	2f ef       	ldi	r18, 0xFF	; 255
 214:	8b e7       	ldi	r24, 0x7B	; 123
 216:	92 e9       	ldi	r25, 0x92	; 146
 218:	21 50       	subi	r18, 0x01	; 1
 21a:	80 40       	sbci	r24, 0x00	; 0
 21c:	90 40       	sbci	r25, 0x00	; 0
 21e:	e1 f7       	brne	.-8      	; 0x218 <main+0x46>
 220:	00 c0       	rjmp	.+0      	; 0x222 <main+0x50>
 222:	00 00       	nop
	_delay_ms(3000);
	USART_tx_string(command3);				//CONNECT Wifi
 224:	88 e5       	ldi	r24, 0x58	; 88
 226:	91 e0       	ldi	r25, 0x01	; 1
 228:	0e 94 9c 00 	call	0x138	; 0x138 <USART_tx_string>
 22c:	2f ef       	ldi	r18, 0xFF	; 255
 22e:	8b e7       	ldi	r24, 0x7B	; 123
 230:	92 e9       	ldi	r25, 0x92	; 146
 232:	21 50       	subi	r18, 0x01	; 1
 234:	80 40       	sbci	r24, 0x00	; 0
 236:	90 40       	sbci	r25, 0x00	; 0
 238:	e1 f7       	brne	.-8      	; 0x232 <main+0x60>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <main+0x6a>
 23c:	00 00       	nop
	_delay_ms(3000);
	USART_tx_string(command4);				//SELECT CIP MUX
 23e:	8a e4       	ldi	r24, 0x4A	; 74
 240:	91 e0       	ldi	r25, 0x01	; 1
 242:	0e 94 9c 00 	call	0x138	; 0x138 <USART_tx_string>
 246:	2f ef       	ldi	r18, 0xFF	; 255
 248:	8b e7       	ldi	r24, 0x7B	; 123
 24a:	92 e9       	ldi	r25, 0x92	; 146
 24c:	21 50       	subi	r18, 0x01	; 1
 24e:	80 40       	sbci	r24, 0x00	; 0
 250:	90 40       	sbci	r25, 0x00	; 0
 252:	e1 f7       	brne	.-8      	; 0x24c <main+0x7a>
 254:	00 c0       	rjmp	.+0      	; 0x256 <main+0x84>
 256:	00 00       	nop
			USART_tx_string(command6);		//SPECIFY SIZE OF DATA
			_delay_ms(3000);
				
			read_adc();						//CALL FUNCTION TO READ TEMPERATURE
				
			snprintf(char_array,sizeof(char_array),"GET /update?key=BTGT7XH3A9N1Y8OZ&field1=%3d\r\n", adc_temp);
 258:	0d e8       	ldi	r16, 0x8D	; 141
 25a:	11 e0       	ldi	r17, 0x01	; 1
 25c:	ff 24       	eor	r15, r15
 25e:	f3 94       	inc	r15
 260:	cf eb       	ldi	r28, 0xBF	; 191
 262:	d1 e0       	ldi	r29, 0x01	; 1
	USART_tx_string(command4);				//SELECT CIP MUX
	_delay_ms(3000);
	
	while (1)
	{
		if(Overflow >= 4)					//OVERFLOW AMOUNT FOR ~15sec DELAY	
 264:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <Overflow>
 268:	84 30       	cpi	r24, 0x04	; 4
 26a:	e0 f3       	brcs	.-8      	; 0x264 <main+0x92>
		{
			USART_tx_string(command5);		//CONNECT TO ThinkSpeak
 26c:	8e e1       	ldi	r24, 0x1E	; 30
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	0e 94 9c 00 	call	0x138	; 0x138 <USART_tx_string>
 274:	2f ef       	ldi	r18, 0xFF	; 255
 276:	8b e7       	ldi	r24, 0x7B	; 123
 278:	92 e9       	ldi	r25, 0x92	; 146
 27a:	21 50       	subi	r18, 0x01	; 1
 27c:	80 40       	sbci	r24, 0x00	; 0
 27e:	90 40       	sbci	r25, 0x00	; 0
 280:	e1 f7       	brne	.-8      	; 0x27a <main+0xa8>
 282:	00 c0       	rjmp	.+0      	; 0x284 <main+0xb2>
 284:	00 00       	nop
			_delay_ms(3000);
			USART_tx_string(command6);		//SPECIFY SIZE OF DATA
 286:	8e e0       	ldi	r24, 0x0E	; 14
 288:	91 e0       	ldi	r25, 0x01	; 1
 28a:	0e 94 9c 00 	call	0x138	; 0x138 <USART_tx_string>
 28e:	2f ef       	ldi	r18, 0xFF	; 255
 290:	8b e7       	ldi	r24, 0x7B	; 123
 292:	92 e9       	ldi	r25, 0x92	; 146
 294:	21 50       	subi	r18, 0x01	; 1
 296:	80 40       	sbci	r24, 0x00	; 0
 298:	90 40       	sbci	r25, 0x00	; 0
 29a:	e1 f7       	brne	.-8      	; 0x294 <main+0xc2>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <main+0xcc>
 29e:	00 00       	nop
			_delay_ms(3000);
				
			read_adc();						//CALL FUNCTION TO READ TEMPERATURE
 2a0:	0e 94 b2 00 	call	0x164	; 0x164 <read_adc>
				
			snprintf(char_array,sizeof(char_array),"GET /update?key=BTGT7XH3A9N1Y8OZ&field1=%3d\r\n", adc_temp);
 2a4:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <__data_end>
 2a8:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <__data_end+0x1>
 2ac:	9f 93       	push	r25
 2ae:	8f 93       	push	r24
 2b0:	1f 93       	push	r17
 2b2:	0f 93       	push	r16
 2b4:	ff 92       	push	r15
 2b6:	1f 92       	push	r1
 2b8:	df 93       	push	r29
 2ba:	cf 93       	push	r28
 2bc:	0e 94 99 01 	call	0x332	; 0x332 <snprintf>
			USART_tx_string(char_array);	//PRINT LM-35 TEMPERATURE VALUE
 2c0:	ce 01       	movw	r24, r28
 2c2:	0e 94 9c 00 	call	0x138	; 0x138 <USART_tx_string>
			USART_tx_string("\r\n");
 2c6:	88 eb       	ldi	r24, 0xB8	; 184
 2c8:	91 e0       	ldi	r25, 0x01	; 1
 2ca:	0e 94 9c 00 	call	0x138	; 0x138 <USART_tx_string>
 2ce:	9f ef       	ldi	r25, 0xFF	; 255
 2d0:	2b e7       	ldi	r18, 0x7B	; 123
 2d2:	82 e9       	ldi	r24, 0x92	; 146
 2d4:	91 50       	subi	r25, 0x01	; 1
 2d6:	20 40       	sbci	r18, 0x00	; 0
 2d8:	80 40       	sbci	r24, 0x00	; 0
 2da:	e1 f7       	brne	.-8      	; 0x2d4 <main+0x102>
 2dc:	00 c0       	rjmp	.+0      	; 0x2de <main+0x10c>
 2de:	00 00       	nop
			_delay_ms(3000);
				
			USART_tx_string(command7);		//CLOSE AT-COMMAND
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	91 e0       	ldi	r25, 0x01	; 1
 2e4:	0e 94 9c 00 	call	0x138	; 0x138 <USART_tx_string>
 2e8:	9f ef       	ldi	r25, 0xFF	; 255
 2ea:	2b e7       	ldi	r18, 0x7B	; 123
 2ec:	82 e9       	ldi	r24, 0x92	; 146
 2ee:	91 50       	subi	r25, 0x01	; 1
 2f0:	20 40       	sbci	r18, 0x00	; 0
 2f2:	80 40       	sbci	r24, 0x00	; 0
 2f4:	e1 f7       	brne	.-8      	; 0x2ee <main+0x11c>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <main+0x126>
 2f8:	00 00       	nop
			_delay_ms(3000);
				
			//Overflow reset to 0
			Overflow = 0;
 2fa:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <Overflow>
 2fe:	8d b7       	in	r24, 0x3d	; 61
 300:	9e b7       	in	r25, 0x3e	; 62
 302:	08 96       	adiw	r24, 0x08	; 8
 304:	0f b6       	in	r0, 0x3f	; 63
 306:	f8 94       	cli
 308:	9e bf       	out	0x3e, r25	; 62
 30a:	0f be       	out	0x3f, r0	; 63
 30c:	8d bf       	out	0x3d, r24	; 61
 30e:	aa cf       	rjmp	.-172    	; 0x264 <main+0x92>

00000310 <__vector_13>:
	adc_temp = adc_temp/4;				//AVERAGE OF LM35 TEMPERATURE VALUE
}

//INTERUPT SUBROUTINE FOR TIMER 0
ISR(TIMER1_OVF_vect)
{
 310:	1f 92       	push	r1
 312:	0f 92       	push	r0
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	0f 92       	push	r0
 318:	11 24       	eor	r1, r1
 31a:	8f 93       	push	r24
	Overflow++;							//INCREMENT OVERFLOW FOR INTERRUPT 
 31c:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <Overflow>
 320:	8f 5f       	subi	r24, 0xFF	; 255
 322:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <Overflow>
}
 326:	8f 91       	pop	r24
 328:	0f 90       	pop	r0
 32a:	0f be       	out	0x3f, r0	; 63
 32c:	0f 90       	pop	r0
 32e:	1f 90       	pop	r1
 330:	18 95       	reti

00000332 <snprintf>:
 332:	ae e0       	ldi	r26, 0x0E	; 14
 334:	b0 e0       	ldi	r27, 0x00	; 0
 336:	ef e9       	ldi	r30, 0x9F	; 159
 338:	f1 e0       	ldi	r31, 0x01	; 1
 33a:	0c 94 68 04 	jmp	0x8d0	; 0x8d0 <__prologue_saves__+0x1c>
 33e:	0d 89       	ldd	r16, Y+21	; 0x15
 340:	1e 89       	ldd	r17, Y+22	; 0x16
 342:	8f 89       	ldd	r24, Y+23	; 0x17
 344:	98 8d       	ldd	r25, Y+24	; 0x18
 346:	26 e0       	ldi	r18, 0x06	; 6
 348:	2c 83       	std	Y+4, r18	; 0x04
 34a:	1a 83       	std	Y+2, r17	; 0x02
 34c:	09 83       	std	Y+1, r16	; 0x01
 34e:	97 ff       	sbrs	r25, 7
 350:	02 c0       	rjmp	.+4      	; 0x356 <snprintf+0x24>
 352:	80 e0       	ldi	r24, 0x00	; 0
 354:	90 e8       	ldi	r25, 0x80	; 128
 356:	01 97       	sbiw	r24, 0x01	; 1
 358:	9e 83       	std	Y+6, r25	; 0x06
 35a:	8d 83       	std	Y+5, r24	; 0x05
 35c:	ae 01       	movw	r20, r28
 35e:	45 5e       	subi	r20, 0xE5	; 229
 360:	5f 4f       	sbci	r21, 0xFF	; 255
 362:	69 8d       	ldd	r22, Y+25	; 0x19
 364:	7a 8d       	ldd	r23, Y+26	; 0x1a
 366:	ce 01       	movw	r24, r28
 368:	01 96       	adiw	r24, 0x01	; 1
 36a:	0e 94 c9 01 	call	0x392	; 0x392 <vfprintf>
 36e:	4d 81       	ldd	r20, Y+5	; 0x05
 370:	5e 81       	ldd	r21, Y+6	; 0x06
 372:	57 fd       	sbrc	r21, 7
 374:	0a c0       	rjmp	.+20     	; 0x38a <snprintf+0x58>
 376:	2f 81       	ldd	r18, Y+7	; 0x07
 378:	38 85       	ldd	r19, Y+8	; 0x08
 37a:	42 17       	cp	r20, r18
 37c:	53 07       	cpc	r21, r19
 37e:	0c f4       	brge	.+2      	; 0x382 <snprintf+0x50>
 380:	9a 01       	movw	r18, r20
 382:	f8 01       	movw	r30, r16
 384:	e2 0f       	add	r30, r18
 386:	f3 1f       	adc	r31, r19
 388:	10 82       	st	Z, r1
 38a:	2e 96       	adiw	r28, 0x0e	; 14
 38c:	e4 e0       	ldi	r30, 0x04	; 4
 38e:	0c 94 84 04 	jmp	0x908	; 0x908 <__stack+0x9>

00000392 <vfprintf>:
 392:	ab e0       	ldi	r26, 0x0B	; 11
 394:	b0 e0       	ldi	r27, 0x00	; 0
 396:	ef ec       	ldi	r30, 0xCF	; 207
 398:	f1 e0       	ldi	r31, 0x01	; 1
 39a:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__prologue_saves__>
 39e:	6c 01       	movw	r12, r24
 3a0:	7b 01       	movw	r14, r22
 3a2:	8a 01       	movw	r16, r20
 3a4:	fc 01       	movw	r30, r24
 3a6:	17 82       	std	Z+7, r1	; 0x07
 3a8:	16 82       	std	Z+6, r1	; 0x06
 3aa:	83 81       	ldd	r24, Z+3	; 0x03
 3ac:	81 ff       	sbrs	r24, 1
 3ae:	cc c1       	rjmp	.+920    	; 0x748 <__LOCK_REGION_LENGTH__+0x348>
 3b0:	ce 01       	movw	r24, r28
 3b2:	01 96       	adiw	r24, 0x01	; 1
 3b4:	3c 01       	movw	r6, r24
 3b6:	f6 01       	movw	r30, r12
 3b8:	93 81       	ldd	r25, Z+3	; 0x03
 3ba:	f7 01       	movw	r30, r14
 3bc:	93 fd       	sbrc	r25, 3
 3be:	85 91       	lpm	r24, Z+
 3c0:	93 ff       	sbrs	r25, 3
 3c2:	81 91       	ld	r24, Z+
 3c4:	7f 01       	movw	r14, r30
 3c6:	88 23       	and	r24, r24
 3c8:	09 f4       	brne	.+2      	; 0x3cc <vfprintf+0x3a>
 3ca:	ba c1       	rjmp	.+884    	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 3cc:	85 32       	cpi	r24, 0x25	; 37
 3ce:	39 f4       	brne	.+14     	; 0x3de <vfprintf+0x4c>
 3d0:	93 fd       	sbrc	r25, 3
 3d2:	85 91       	lpm	r24, Z+
 3d4:	93 ff       	sbrs	r25, 3
 3d6:	81 91       	ld	r24, Z+
 3d8:	7f 01       	movw	r14, r30
 3da:	85 32       	cpi	r24, 0x25	; 37
 3dc:	29 f4       	brne	.+10     	; 0x3e8 <vfprintf+0x56>
 3de:	b6 01       	movw	r22, r12
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 3e6:	e7 cf       	rjmp	.-50     	; 0x3b6 <vfprintf+0x24>
 3e8:	91 2c       	mov	r9, r1
 3ea:	21 2c       	mov	r2, r1
 3ec:	31 2c       	mov	r3, r1
 3ee:	ff e1       	ldi	r31, 0x1F	; 31
 3f0:	f3 15       	cp	r31, r3
 3f2:	d8 f0       	brcs	.+54     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3f4:	8b 32       	cpi	r24, 0x2B	; 43
 3f6:	79 f0       	breq	.+30     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3f8:	38 f4       	brcc	.+14     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fa:	80 32       	cpi	r24, 0x20	; 32
 3fc:	79 f0       	breq	.+30     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fe:	83 32       	cpi	r24, 0x23	; 35
 400:	a1 f4       	brne	.+40     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 402:	23 2d       	mov	r18, r3
 404:	20 61       	ori	r18, 0x10	; 16
 406:	1d c0       	rjmp	.+58     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 408:	8d 32       	cpi	r24, 0x2D	; 45
 40a:	61 f0       	breq	.+24     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 40c:	80 33       	cpi	r24, 0x30	; 48
 40e:	69 f4       	brne	.+26     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 410:	23 2d       	mov	r18, r3
 412:	21 60       	ori	r18, 0x01	; 1
 414:	16 c0       	rjmp	.+44     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 416:	83 2d       	mov	r24, r3
 418:	82 60       	ori	r24, 0x02	; 2
 41a:	38 2e       	mov	r3, r24
 41c:	e3 2d       	mov	r30, r3
 41e:	e4 60       	ori	r30, 0x04	; 4
 420:	3e 2e       	mov	r3, r30
 422:	2a c0       	rjmp	.+84     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 424:	f3 2d       	mov	r31, r3
 426:	f8 60       	ori	r31, 0x08	; 8
 428:	1d c0       	rjmp	.+58     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 42a:	37 fc       	sbrc	r3, 7
 42c:	2d c0       	rjmp	.+90     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 42e:	20 ed       	ldi	r18, 0xD0	; 208
 430:	28 0f       	add	r18, r24
 432:	2a 30       	cpi	r18, 0x0A	; 10
 434:	40 f0       	brcs	.+16     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 436:	8e 32       	cpi	r24, 0x2E	; 46
 438:	b9 f4       	brne	.+46     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 43a:	36 fc       	sbrc	r3, 6
 43c:	81 c1       	rjmp	.+770    	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 43e:	23 2d       	mov	r18, r3
 440:	20 64       	ori	r18, 0x40	; 64
 442:	32 2e       	mov	r3, r18
 444:	19 c0       	rjmp	.+50     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 446:	36 fe       	sbrs	r3, 6
 448:	06 c0       	rjmp	.+12     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 44a:	8a e0       	ldi	r24, 0x0A	; 10
 44c:	98 9e       	mul	r9, r24
 44e:	20 0d       	add	r18, r0
 450:	11 24       	eor	r1, r1
 452:	92 2e       	mov	r9, r18
 454:	11 c0       	rjmp	.+34     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 456:	ea e0       	ldi	r30, 0x0A	; 10
 458:	2e 9e       	mul	r2, r30
 45a:	20 0d       	add	r18, r0
 45c:	11 24       	eor	r1, r1
 45e:	22 2e       	mov	r2, r18
 460:	f3 2d       	mov	r31, r3
 462:	f0 62       	ori	r31, 0x20	; 32
 464:	3f 2e       	mov	r3, r31
 466:	08 c0       	rjmp	.+16     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 468:	8c 36       	cpi	r24, 0x6C	; 108
 46a:	21 f4       	brne	.+8      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 46c:	83 2d       	mov	r24, r3
 46e:	80 68       	ori	r24, 0x80	; 128
 470:	38 2e       	mov	r3, r24
 472:	02 c0       	rjmp	.+4      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 474:	88 36       	cpi	r24, 0x68	; 104
 476:	41 f4       	brne	.+16     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 478:	f7 01       	movw	r30, r14
 47a:	93 fd       	sbrc	r25, 3
 47c:	85 91       	lpm	r24, Z+
 47e:	93 ff       	sbrs	r25, 3
 480:	81 91       	ld	r24, Z+
 482:	7f 01       	movw	r14, r30
 484:	81 11       	cpse	r24, r1
 486:	b3 cf       	rjmp	.-154    	; 0x3ee <vfprintf+0x5c>
 488:	98 2f       	mov	r25, r24
 48a:	9f 7d       	andi	r25, 0xDF	; 223
 48c:	95 54       	subi	r25, 0x45	; 69
 48e:	93 30       	cpi	r25, 0x03	; 3
 490:	28 f4       	brcc	.+10     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 492:	0c 5f       	subi	r16, 0xFC	; 252
 494:	1f 4f       	sbci	r17, 0xFF	; 255
 496:	9f e3       	ldi	r25, 0x3F	; 63
 498:	99 83       	std	Y+1, r25	; 0x01
 49a:	0d c0       	rjmp	.+26     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 49c:	83 36       	cpi	r24, 0x63	; 99
 49e:	31 f0       	breq	.+12     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a0:	83 37       	cpi	r24, 0x73	; 115
 4a2:	71 f0       	breq	.+28     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4a4:	83 35       	cpi	r24, 0x53	; 83
 4a6:	09 f0       	breq	.+2      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4a8:	59 c0       	rjmp	.+178    	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 4aa:	21 c0       	rjmp	.+66     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ac:	f8 01       	movw	r30, r16
 4ae:	80 81       	ld	r24, Z
 4b0:	89 83       	std	Y+1, r24	; 0x01
 4b2:	0e 5f       	subi	r16, 0xFE	; 254
 4b4:	1f 4f       	sbci	r17, 0xFF	; 255
 4b6:	88 24       	eor	r8, r8
 4b8:	83 94       	inc	r8
 4ba:	91 2c       	mov	r9, r1
 4bc:	53 01       	movw	r10, r6
 4be:	13 c0       	rjmp	.+38     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4c0:	28 01       	movw	r4, r16
 4c2:	f2 e0       	ldi	r31, 0x02	; 2
 4c4:	4f 0e       	add	r4, r31
 4c6:	51 1c       	adc	r5, r1
 4c8:	f8 01       	movw	r30, r16
 4ca:	a0 80       	ld	r10, Z
 4cc:	b1 80       	ldd	r11, Z+1	; 0x01
 4ce:	36 fe       	sbrs	r3, 6
 4d0:	03 c0       	rjmp	.+6      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4d2:	69 2d       	mov	r22, r9
 4d4:	70 e0       	ldi	r23, 0x00	; 0
 4d6:	02 c0       	rjmp	.+4      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d8:	6f ef       	ldi	r22, 0xFF	; 255
 4da:	7f ef       	ldi	r23, 0xFF	; 255
 4dc:	c5 01       	movw	r24, r10
 4de:	0e 94 b5 03 	call	0x76a	; 0x76a <strnlen>
 4e2:	4c 01       	movw	r8, r24
 4e4:	82 01       	movw	r16, r4
 4e6:	f3 2d       	mov	r31, r3
 4e8:	ff 77       	andi	r31, 0x7F	; 127
 4ea:	3f 2e       	mov	r3, r31
 4ec:	16 c0       	rjmp	.+44     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4ee:	28 01       	movw	r4, r16
 4f0:	22 e0       	ldi	r18, 0x02	; 2
 4f2:	42 0e       	add	r4, r18
 4f4:	51 1c       	adc	r5, r1
 4f6:	f8 01       	movw	r30, r16
 4f8:	a0 80       	ld	r10, Z
 4fa:	b1 80       	ldd	r11, Z+1	; 0x01
 4fc:	36 fe       	sbrs	r3, 6
 4fe:	03 c0       	rjmp	.+6      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 500:	69 2d       	mov	r22, r9
 502:	70 e0       	ldi	r23, 0x00	; 0
 504:	02 c0       	rjmp	.+4      	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 506:	6f ef       	ldi	r22, 0xFF	; 255
 508:	7f ef       	ldi	r23, 0xFF	; 255
 50a:	c5 01       	movw	r24, r10
 50c:	0e 94 aa 03 	call	0x754	; 0x754 <strnlen_P>
 510:	4c 01       	movw	r8, r24
 512:	f3 2d       	mov	r31, r3
 514:	f0 68       	ori	r31, 0x80	; 128
 516:	3f 2e       	mov	r3, r31
 518:	82 01       	movw	r16, r4
 51a:	33 fc       	sbrc	r3, 3
 51c:	1b c0       	rjmp	.+54     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 51e:	82 2d       	mov	r24, r2
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	88 16       	cp	r8, r24
 524:	99 06       	cpc	r9, r25
 526:	b0 f4       	brcc	.+44     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 528:	b6 01       	movw	r22, r12
 52a:	80 e2       	ldi	r24, 0x20	; 32
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 532:	2a 94       	dec	r2
 534:	f4 cf       	rjmp	.-24     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 536:	f5 01       	movw	r30, r10
 538:	37 fc       	sbrc	r3, 7
 53a:	85 91       	lpm	r24, Z+
 53c:	37 fe       	sbrs	r3, 7
 53e:	81 91       	ld	r24, Z+
 540:	5f 01       	movw	r10, r30
 542:	b6 01       	movw	r22, r12
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 54a:	21 10       	cpse	r2, r1
 54c:	2a 94       	dec	r2
 54e:	21 e0       	ldi	r18, 0x01	; 1
 550:	82 1a       	sub	r8, r18
 552:	91 08       	sbc	r9, r1
 554:	81 14       	cp	r8, r1
 556:	91 04       	cpc	r9, r1
 558:	71 f7       	brne	.-36     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 55a:	e8 c0       	rjmp	.+464    	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 55c:	84 36       	cpi	r24, 0x64	; 100
 55e:	11 f0       	breq	.+4      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 560:	89 36       	cpi	r24, 0x69	; 105
 562:	41 f5       	brne	.+80     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 564:	f8 01       	movw	r30, r16
 566:	37 fe       	sbrs	r3, 7
 568:	07 c0       	rjmp	.+14     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 56a:	60 81       	ld	r22, Z
 56c:	71 81       	ldd	r23, Z+1	; 0x01
 56e:	82 81       	ldd	r24, Z+2	; 0x02
 570:	93 81       	ldd	r25, Z+3	; 0x03
 572:	0c 5f       	subi	r16, 0xFC	; 252
 574:	1f 4f       	sbci	r17, 0xFF	; 255
 576:	08 c0       	rjmp	.+16     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 578:	60 81       	ld	r22, Z
 57a:	71 81       	ldd	r23, Z+1	; 0x01
 57c:	07 2e       	mov	r0, r23
 57e:	00 0c       	add	r0, r0
 580:	88 0b       	sbc	r24, r24
 582:	99 0b       	sbc	r25, r25
 584:	0e 5f       	subi	r16, 0xFE	; 254
 586:	1f 4f       	sbci	r17, 0xFF	; 255
 588:	f3 2d       	mov	r31, r3
 58a:	ff 76       	andi	r31, 0x6F	; 111
 58c:	3f 2e       	mov	r3, r31
 58e:	97 ff       	sbrs	r25, 7
 590:	09 c0       	rjmp	.+18     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 592:	90 95       	com	r25
 594:	80 95       	com	r24
 596:	70 95       	com	r23
 598:	61 95       	neg	r22
 59a:	7f 4f       	sbci	r23, 0xFF	; 255
 59c:	8f 4f       	sbci	r24, 0xFF	; 255
 59e:	9f 4f       	sbci	r25, 0xFF	; 255
 5a0:	f0 68       	ori	r31, 0x80	; 128
 5a2:	3f 2e       	mov	r3, r31
 5a4:	2a e0       	ldi	r18, 0x0A	; 10
 5a6:	30 e0       	ldi	r19, 0x00	; 0
 5a8:	a3 01       	movw	r20, r6
 5aa:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__ultoa_invert>
 5ae:	88 2e       	mov	r8, r24
 5b0:	86 18       	sub	r8, r6
 5b2:	45 c0       	rjmp	.+138    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 5b4:	85 37       	cpi	r24, 0x75	; 117
 5b6:	31 f4       	brne	.+12     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5b8:	23 2d       	mov	r18, r3
 5ba:	2f 7e       	andi	r18, 0xEF	; 239
 5bc:	b2 2e       	mov	r11, r18
 5be:	2a e0       	ldi	r18, 0x0A	; 10
 5c0:	30 e0       	ldi	r19, 0x00	; 0
 5c2:	25 c0       	rjmp	.+74     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5c4:	93 2d       	mov	r25, r3
 5c6:	99 7f       	andi	r25, 0xF9	; 249
 5c8:	b9 2e       	mov	r11, r25
 5ca:	8f 36       	cpi	r24, 0x6F	; 111
 5cc:	c1 f0       	breq	.+48     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5ce:	18 f4       	brcc	.+6      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5d0:	88 35       	cpi	r24, 0x58	; 88
 5d2:	79 f0       	breq	.+30     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5d4:	b5 c0       	rjmp	.+362    	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 5d6:	80 37       	cpi	r24, 0x70	; 112
 5d8:	19 f0       	breq	.+6      	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5da:	88 37       	cpi	r24, 0x78	; 120
 5dc:	21 f0       	breq	.+8      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5de:	b0 c0       	rjmp	.+352    	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 5e0:	e9 2f       	mov	r30, r25
 5e2:	e0 61       	ori	r30, 0x10	; 16
 5e4:	be 2e       	mov	r11, r30
 5e6:	b4 fe       	sbrs	r11, 4
 5e8:	0d c0       	rjmp	.+26     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5ea:	fb 2d       	mov	r31, r11
 5ec:	f4 60       	ori	r31, 0x04	; 4
 5ee:	bf 2e       	mov	r11, r31
 5f0:	09 c0       	rjmp	.+18     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5f2:	34 fe       	sbrs	r3, 4
 5f4:	0a c0       	rjmp	.+20     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 5f6:	29 2f       	mov	r18, r25
 5f8:	26 60       	ori	r18, 0x06	; 6
 5fa:	b2 2e       	mov	r11, r18
 5fc:	06 c0       	rjmp	.+12     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 5fe:	28 e0       	ldi	r18, 0x08	; 8
 600:	30 e0       	ldi	r19, 0x00	; 0
 602:	05 c0       	rjmp	.+10     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 604:	20 e1       	ldi	r18, 0x10	; 16
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	02 c0       	rjmp	.+4      	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 60a:	20 e1       	ldi	r18, 0x10	; 16
 60c:	32 e0       	ldi	r19, 0x02	; 2
 60e:	f8 01       	movw	r30, r16
 610:	b7 fe       	sbrs	r11, 7
 612:	07 c0       	rjmp	.+14     	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 614:	60 81       	ld	r22, Z
 616:	71 81       	ldd	r23, Z+1	; 0x01
 618:	82 81       	ldd	r24, Z+2	; 0x02
 61a:	93 81       	ldd	r25, Z+3	; 0x03
 61c:	0c 5f       	subi	r16, 0xFC	; 252
 61e:	1f 4f       	sbci	r17, 0xFF	; 255
 620:	06 c0       	rjmp	.+12     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 622:	60 81       	ld	r22, Z
 624:	71 81       	ldd	r23, Z+1	; 0x01
 626:	80 e0       	ldi	r24, 0x00	; 0
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 5f       	subi	r16, 0xFE	; 254
 62c:	1f 4f       	sbci	r17, 0xFF	; 255
 62e:	a3 01       	movw	r20, r6
 630:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__ultoa_invert>
 634:	88 2e       	mov	r8, r24
 636:	86 18       	sub	r8, r6
 638:	fb 2d       	mov	r31, r11
 63a:	ff 77       	andi	r31, 0x7F	; 127
 63c:	3f 2e       	mov	r3, r31
 63e:	36 fe       	sbrs	r3, 6
 640:	0d c0       	rjmp	.+26     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 642:	23 2d       	mov	r18, r3
 644:	2e 7f       	andi	r18, 0xFE	; 254
 646:	a2 2e       	mov	r10, r18
 648:	89 14       	cp	r8, r9
 64a:	58 f4       	brcc	.+22     	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 64c:	34 fe       	sbrs	r3, 4
 64e:	0b c0       	rjmp	.+22     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 650:	32 fc       	sbrc	r3, 2
 652:	09 c0       	rjmp	.+18     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 654:	83 2d       	mov	r24, r3
 656:	8e 7e       	andi	r24, 0xEE	; 238
 658:	a8 2e       	mov	r10, r24
 65a:	05 c0       	rjmp	.+10     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 65c:	b8 2c       	mov	r11, r8
 65e:	a3 2c       	mov	r10, r3
 660:	03 c0       	rjmp	.+6      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 662:	b8 2c       	mov	r11, r8
 664:	01 c0       	rjmp	.+2      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 666:	b9 2c       	mov	r11, r9
 668:	a4 fe       	sbrs	r10, 4
 66a:	0f c0       	rjmp	.+30     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 66c:	fe 01       	movw	r30, r28
 66e:	e8 0d       	add	r30, r8
 670:	f1 1d       	adc	r31, r1
 672:	80 81       	ld	r24, Z
 674:	80 33       	cpi	r24, 0x30	; 48
 676:	21 f4       	brne	.+8      	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 678:	9a 2d       	mov	r25, r10
 67a:	99 7e       	andi	r25, 0xE9	; 233
 67c:	a9 2e       	mov	r10, r25
 67e:	09 c0       	rjmp	.+18     	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 680:	a2 fe       	sbrs	r10, 2
 682:	06 c0       	rjmp	.+12     	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 684:	b3 94       	inc	r11
 686:	b3 94       	inc	r11
 688:	04 c0       	rjmp	.+8      	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 68a:	8a 2d       	mov	r24, r10
 68c:	86 78       	andi	r24, 0x86	; 134
 68e:	09 f0       	breq	.+2      	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 690:	b3 94       	inc	r11
 692:	a3 fc       	sbrc	r10, 3
 694:	11 c0       	rjmp	.+34     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 696:	a0 fe       	sbrs	r10, 0
 698:	06 c0       	rjmp	.+12     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 69a:	b2 14       	cp	r11, r2
 69c:	88 f4       	brcc	.+34     	; 0x6c0 <__LOCK_REGION_LENGTH__+0x2c0>
 69e:	28 0c       	add	r2, r8
 6a0:	92 2c       	mov	r9, r2
 6a2:	9b 18       	sub	r9, r11
 6a4:	0e c0       	rjmp	.+28     	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6a6:	b2 14       	cp	r11, r2
 6a8:	60 f4       	brcc	.+24     	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6aa:	b6 01       	movw	r22, r12
 6ac:	80 e2       	ldi	r24, 0x20	; 32
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 6b4:	b3 94       	inc	r11
 6b6:	f7 cf       	rjmp	.-18     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 6b8:	b2 14       	cp	r11, r2
 6ba:	18 f4       	brcc	.+6      	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6bc:	2b 18       	sub	r2, r11
 6be:	02 c0       	rjmp	.+4      	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6c0:	98 2c       	mov	r9, r8
 6c2:	21 2c       	mov	r2, r1
 6c4:	a4 fe       	sbrs	r10, 4
 6c6:	10 c0       	rjmp	.+32     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6c8:	b6 01       	movw	r22, r12
 6ca:	80 e3       	ldi	r24, 0x30	; 48
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 6d2:	a2 fe       	sbrs	r10, 2
 6d4:	17 c0       	rjmp	.+46     	; 0x704 <__LOCK_REGION_LENGTH__+0x304>
 6d6:	a1 fc       	sbrc	r10, 1
 6d8:	03 c0       	rjmp	.+6      	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
 6da:	88 e7       	ldi	r24, 0x78	; 120
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	02 c0       	rjmp	.+4      	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6e0:	88 e5       	ldi	r24, 0x58	; 88
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	b6 01       	movw	r22, r12
 6e6:	0c c0       	rjmp	.+24     	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
 6e8:	8a 2d       	mov	r24, r10
 6ea:	86 78       	andi	r24, 0x86	; 134
 6ec:	59 f0       	breq	.+22     	; 0x704 <__LOCK_REGION_LENGTH__+0x304>
 6ee:	a1 fe       	sbrs	r10, 1
 6f0:	02 c0       	rjmp	.+4      	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
 6f2:	8b e2       	ldi	r24, 0x2B	; 43
 6f4:	01 c0       	rjmp	.+2      	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 6f6:	80 e2       	ldi	r24, 0x20	; 32
 6f8:	a7 fc       	sbrc	r10, 7
 6fa:	8d e2       	ldi	r24, 0x2D	; 45
 6fc:	b6 01       	movw	r22, r12
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 704:	89 14       	cp	r8, r9
 706:	38 f4       	brcc	.+14     	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 708:	b6 01       	movw	r22, r12
 70a:	80 e3       	ldi	r24, 0x30	; 48
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 712:	9a 94       	dec	r9
 714:	f7 cf       	rjmp	.-18     	; 0x704 <__LOCK_REGION_LENGTH__+0x304>
 716:	8a 94       	dec	r8
 718:	f3 01       	movw	r30, r6
 71a:	e8 0d       	add	r30, r8
 71c:	f1 1d       	adc	r31, r1
 71e:	80 81       	ld	r24, Z
 720:	b6 01       	movw	r22, r12
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 728:	81 10       	cpse	r8, r1
 72a:	f5 cf       	rjmp	.-22     	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 72c:	22 20       	and	r2, r2
 72e:	09 f4       	brne	.+2      	; 0x732 <__LOCK_REGION_LENGTH__+0x332>
 730:	42 ce       	rjmp	.-892    	; 0x3b6 <vfprintf+0x24>
 732:	b6 01       	movw	r22, r12
 734:	80 e2       	ldi	r24, 0x20	; 32
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	0e 94 c0 03 	call	0x780	; 0x780 <fputc>
 73c:	2a 94       	dec	r2
 73e:	f6 cf       	rjmp	.-20     	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 740:	f6 01       	movw	r30, r12
 742:	86 81       	ldd	r24, Z+6	; 0x06
 744:	97 81       	ldd	r25, Z+7	; 0x07
 746:	02 c0       	rjmp	.+4      	; 0x74c <__LOCK_REGION_LENGTH__+0x34c>
 748:	8f ef       	ldi	r24, 0xFF	; 255
 74a:	9f ef       	ldi	r25, 0xFF	; 255
 74c:	2b 96       	adiw	r28, 0x0b	; 11
 74e:	e2 e1       	ldi	r30, 0x12	; 18
 750:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <__epilogue_restores__>

00000754 <strnlen_P>:
 754:	fc 01       	movw	r30, r24
 756:	05 90       	lpm	r0, Z+
 758:	61 50       	subi	r22, 0x01	; 1
 75a:	70 40       	sbci	r23, 0x00	; 0
 75c:	01 10       	cpse	r0, r1
 75e:	d8 f7       	brcc	.-10     	; 0x756 <strnlen_P+0x2>
 760:	80 95       	com	r24
 762:	90 95       	com	r25
 764:	8e 0f       	add	r24, r30
 766:	9f 1f       	adc	r25, r31
 768:	08 95       	ret

0000076a <strnlen>:
 76a:	fc 01       	movw	r30, r24
 76c:	61 50       	subi	r22, 0x01	; 1
 76e:	70 40       	sbci	r23, 0x00	; 0
 770:	01 90       	ld	r0, Z+
 772:	01 10       	cpse	r0, r1
 774:	d8 f7       	brcc	.-10     	; 0x76c <strnlen+0x2>
 776:	80 95       	com	r24
 778:	90 95       	com	r25
 77a:	8e 0f       	add	r24, r30
 77c:	9f 1f       	adc	r25, r31
 77e:	08 95       	ret

00000780 <fputc>:
 780:	0f 93       	push	r16
 782:	1f 93       	push	r17
 784:	cf 93       	push	r28
 786:	df 93       	push	r29
 788:	fb 01       	movw	r30, r22
 78a:	23 81       	ldd	r18, Z+3	; 0x03
 78c:	21 fd       	sbrc	r18, 1
 78e:	03 c0       	rjmp	.+6      	; 0x796 <fputc+0x16>
 790:	8f ef       	ldi	r24, 0xFF	; 255
 792:	9f ef       	ldi	r25, 0xFF	; 255
 794:	2c c0       	rjmp	.+88     	; 0x7ee <fputc+0x6e>
 796:	22 ff       	sbrs	r18, 2
 798:	16 c0       	rjmp	.+44     	; 0x7c6 <fputc+0x46>
 79a:	46 81       	ldd	r20, Z+6	; 0x06
 79c:	57 81       	ldd	r21, Z+7	; 0x07
 79e:	24 81       	ldd	r18, Z+4	; 0x04
 7a0:	35 81       	ldd	r19, Z+5	; 0x05
 7a2:	42 17       	cp	r20, r18
 7a4:	53 07       	cpc	r21, r19
 7a6:	44 f4       	brge	.+16     	; 0x7b8 <fputc+0x38>
 7a8:	a0 81       	ld	r26, Z
 7aa:	b1 81       	ldd	r27, Z+1	; 0x01
 7ac:	9d 01       	movw	r18, r26
 7ae:	2f 5f       	subi	r18, 0xFF	; 255
 7b0:	3f 4f       	sbci	r19, 0xFF	; 255
 7b2:	31 83       	std	Z+1, r19	; 0x01
 7b4:	20 83       	st	Z, r18
 7b6:	8c 93       	st	X, r24
 7b8:	26 81       	ldd	r18, Z+6	; 0x06
 7ba:	37 81       	ldd	r19, Z+7	; 0x07
 7bc:	2f 5f       	subi	r18, 0xFF	; 255
 7be:	3f 4f       	sbci	r19, 0xFF	; 255
 7c0:	37 83       	std	Z+7, r19	; 0x07
 7c2:	26 83       	std	Z+6, r18	; 0x06
 7c4:	14 c0       	rjmp	.+40     	; 0x7ee <fputc+0x6e>
 7c6:	8b 01       	movw	r16, r22
 7c8:	ec 01       	movw	r28, r24
 7ca:	fb 01       	movw	r30, r22
 7cc:	00 84       	ldd	r0, Z+8	; 0x08
 7ce:	f1 85       	ldd	r31, Z+9	; 0x09
 7d0:	e0 2d       	mov	r30, r0
 7d2:	09 95       	icall
 7d4:	89 2b       	or	r24, r25
 7d6:	e1 f6       	brne	.-72     	; 0x790 <fputc+0x10>
 7d8:	d8 01       	movw	r26, r16
 7da:	16 96       	adiw	r26, 0x06	; 6
 7dc:	8d 91       	ld	r24, X+
 7de:	9c 91       	ld	r25, X
 7e0:	17 97       	sbiw	r26, 0x07	; 7
 7e2:	01 96       	adiw	r24, 0x01	; 1
 7e4:	17 96       	adiw	r26, 0x07	; 7
 7e6:	9c 93       	st	X, r25
 7e8:	8e 93       	st	-X, r24
 7ea:	16 97       	sbiw	r26, 0x06	; 6
 7ec:	ce 01       	movw	r24, r28
 7ee:	df 91       	pop	r29
 7f0:	cf 91       	pop	r28
 7f2:	1f 91       	pop	r17
 7f4:	0f 91       	pop	r16
 7f6:	08 95       	ret

000007f8 <__ultoa_invert>:
 7f8:	fa 01       	movw	r30, r20
 7fa:	aa 27       	eor	r26, r26
 7fc:	28 30       	cpi	r18, 0x08	; 8
 7fe:	51 f1       	breq	.+84     	; 0x854 <__ultoa_invert+0x5c>
 800:	20 31       	cpi	r18, 0x10	; 16
 802:	81 f1       	breq	.+96     	; 0x864 <__ultoa_invert+0x6c>
 804:	e8 94       	clt
 806:	6f 93       	push	r22
 808:	6e 7f       	andi	r22, 0xFE	; 254
 80a:	6e 5f       	subi	r22, 0xFE	; 254
 80c:	7f 4f       	sbci	r23, 0xFF	; 255
 80e:	8f 4f       	sbci	r24, 0xFF	; 255
 810:	9f 4f       	sbci	r25, 0xFF	; 255
 812:	af 4f       	sbci	r26, 0xFF	; 255
 814:	b1 e0       	ldi	r27, 0x01	; 1
 816:	3e d0       	rcall	.+124    	; 0x894 <__ultoa_invert+0x9c>
 818:	b4 e0       	ldi	r27, 0x04	; 4
 81a:	3c d0       	rcall	.+120    	; 0x894 <__ultoa_invert+0x9c>
 81c:	67 0f       	add	r22, r23
 81e:	78 1f       	adc	r23, r24
 820:	89 1f       	adc	r24, r25
 822:	9a 1f       	adc	r25, r26
 824:	a1 1d       	adc	r26, r1
 826:	68 0f       	add	r22, r24
 828:	79 1f       	adc	r23, r25
 82a:	8a 1f       	adc	r24, r26
 82c:	91 1d       	adc	r25, r1
 82e:	a1 1d       	adc	r26, r1
 830:	6a 0f       	add	r22, r26
 832:	71 1d       	adc	r23, r1
 834:	81 1d       	adc	r24, r1
 836:	91 1d       	adc	r25, r1
 838:	a1 1d       	adc	r26, r1
 83a:	20 d0       	rcall	.+64     	; 0x87c <__ultoa_invert+0x84>
 83c:	09 f4       	brne	.+2      	; 0x840 <__ultoa_invert+0x48>
 83e:	68 94       	set
 840:	3f 91       	pop	r19
 842:	2a e0       	ldi	r18, 0x0A	; 10
 844:	26 9f       	mul	r18, r22
 846:	11 24       	eor	r1, r1
 848:	30 19       	sub	r19, r0
 84a:	30 5d       	subi	r19, 0xD0	; 208
 84c:	31 93       	st	Z+, r19
 84e:	de f6       	brtc	.-74     	; 0x806 <__ultoa_invert+0xe>
 850:	cf 01       	movw	r24, r30
 852:	08 95       	ret
 854:	46 2f       	mov	r20, r22
 856:	47 70       	andi	r20, 0x07	; 7
 858:	40 5d       	subi	r20, 0xD0	; 208
 85a:	41 93       	st	Z+, r20
 85c:	b3 e0       	ldi	r27, 0x03	; 3
 85e:	0f d0       	rcall	.+30     	; 0x87e <__ultoa_invert+0x86>
 860:	c9 f7       	brne	.-14     	; 0x854 <__ultoa_invert+0x5c>
 862:	f6 cf       	rjmp	.-20     	; 0x850 <__ultoa_invert+0x58>
 864:	46 2f       	mov	r20, r22
 866:	4f 70       	andi	r20, 0x0F	; 15
 868:	40 5d       	subi	r20, 0xD0	; 208
 86a:	4a 33       	cpi	r20, 0x3A	; 58
 86c:	18 f0       	brcs	.+6      	; 0x874 <__ultoa_invert+0x7c>
 86e:	49 5d       	subi	r20, 0xD9	; 217
 870:	31 fd       	sbrc	r19, 1
 872:	40 52       	subi	r20, 0x20	; 32
 874:	41 93       	st	Z+, r20
 876:	02 d0       	rcall	.+4      	; 0x87c <__ultoa_invert+0x84>
 878:	a9 f7       	brne	.-22     	; 0x864 <__ultoa_invert+0x6c>
 87a:	ea cf       	rjmp	.-44     	; 0x850 <__ultoa_invert+0x58>
 87c:	b4 e0       	ldi	r27, 0x04	; 4
 87e:	a6 95       	lsr	r26
 880:	97 95       	ror	r25
 882:	87 95       	ror	r24
 884:	77 95       	ror	r23
 886:	67 95       	ror	r22
 888:	ba 95       	dec	r27
 88a:	c9 f7       	brne	.-14     	; 0x87e <__ultoa_invert+0x86>
 88c:	00 97       	sbiw	r24, 0x00	; 0
 88e:	61 05       	cpc	r22, r1
 890:	71 05       	cpc	r23, r1
 892:	08 95       	ret
 894:	9b 01       	movw	r18, r22
 896:	ac 01       	movw	r20, r24
 898:	0a 2e       	mov	r0, r26
 89a:	06 94       	lsr	r0
 89c:	57 95       	ror	r21
 89e:	47 95       	ror	r20
 8a0:	37 95       	ror	r19
 8a2:	27 95       	ror	r18
 8a4:	ba 95       	dec	r27
 8a6:	c9 f7       	brne	.-14     	; 0x89a <__ultoa_invert+0xa2>
 8a8:	62 0f       	add	r22, r18
 8aa:	73 1f       	adc	r23, r19
 8ac:	84 1f       	adc	r24, r20
 8ae:	95 1f       	adc	r25, r21
 8b0:	a0 1d       	adc	r26, r0
 8b2:	08 95       	ret

000008b4 <__prologue_saves__>:
 8b4:	2f 92       	push	r2
 8b6:	3f 92       	push	r3
 8b8:	4f 92       	push	r4
 8ba:	5f 92       	push	r5
 8bc:	6f 92       	push	r6
 8be:	7f 92       	push	r7
 8c0:	8f 92       	push	r8
 8c2:	9f 92       	push	r9
 8c4:	af 92       	push	r10
 8c6:	bf 92       	push	r11
 8c8:	cf 92       	push	r12
 8ca:	df 92       	push	r13
 8cc:	ef 92       	push	r14
 8ce:	ff 92       	push	r15
 8d0:	0f 93       	push	r16
 8d2:	1f 93       	push	r17
 8d4:	cf 93       	push	r28
 8d6:	df 93       	push	r29
 8d8:	cd b7       	in	r28, 0x3d	; 61
 8da:	de b7       	in	r29, 0x3e	; 62
 8dc:	ca 1b       	sub	r28, r26
 8de:	db 0b       	sbc	r29, r27
 8e0:	0f b6       	in	r0, 0x3f	; 63
 8e2:	f8 94       	cli
 8e4:	de bf       	out	0x3e, r29	; 62
 8e6:	0f be       	out	0x3f, r0	; 63
 8e8:	cd bf       	out	0x3d, r28	; 61
 8ea:	09 94       	ijmp

000008ec <__epilogue_restores__>:
 8ec:	2a 88       	ldd	r2, Y+18	; 0x12
 8ee:	39 88       	ldd	r3, Y+17	; 0x11
 8f0:	48 88       	ldd	r4, Y+16	; 0x10
 8f2:	5f 84       	ldd	r5, Y+15	; 0x0f
 8f4:	6e 84       	ldd	r6, Y+14	; 0x0e
 8f6:	7d 84       	ldd	r7, Y+13	; 0x0d
 8f8:	8c 84       	ldd	r8, Y+12	; 0x0c
 8fa:	9b 84       	ldd	r9, Y+11	; 0x0b
 8fc:	aa 84       	ldd	r10, Y+10	; 0x0a
 8fe:	b9 84       	ldd	r11, Y+9	; 0x09
 900:	c8 84       	ldd	r12, Y+8	; 0x08
 902:	df 80       	ldd	r13, Y+7	; 0x07
 904:	ee 80       	ldd	r14, Y+6	; 0x06
 906:	fd 80       	ldd	r15, Y+5	; 0x05
 908:	0c 81       	ldd	r16, Y+4	; 0x04
 90a:	1b 81       	ldd	r17, Y+3	; 0x03
 90c:	aa 81       	ldd	r26, Y+2	; 0x02
 90e:	b9 81       	ldd	r27, Y+1	; 0x01
 910:	ce 0f       	add	r28, r30
 912:	d1 1d       	adc	r29, r1
 914:	0f b6       	in	r0, 0x3f	; 63
 916:	f8 94       	cli
 918:	de bf       	out	0x3e, r29	; 62
 91a:	0f be       	out	0x3f, r0	; 63
 91c:	cd bf       	out	0x3d, r28	; 61
 91e:	ed 01       	movw	r28, r26
 920:	08 95       	ret

00000922 <_exit>:
 922:	f8 94       	cli

00000924 <__stop_program>:
 924:	ff cf       	rjmp	.-2      	; 0x924 <__stop_program>
